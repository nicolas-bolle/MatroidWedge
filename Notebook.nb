(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    844547,      19655]
NotebookOptionsPosition[    799519,      18936]
NotebookOutlinePosition[    799954,      18953]
CellTagsIndexPosition[    799911,      18950]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Basics", "Chapter",
 CellChangeTimes->{{3.74119605335161*^9, 3.7411960553717227`*^9}, {
  3.741304990279763*^9, 
  3.741304990925376*^9}},ExpressionUUID->"28c25bb2-4b35-45c3-a0bc-\
9b0443244233"],

Cell[TextData[{
 StyleBox["Nick\[CloseCurlyQuote]s to-do list:",
  FontWeight->"Bold"],
 "\nMaybe tweak Lattice[] vertex placement so that connected vertices are \
closer together\n\n",
 StyleBox["Mathematica basics:",
  FontWeight->"Bold"],
 "\nShift+Enter to evaluate\nHover over a function to get more info on it, \
and a link to the documentation\nWhen you evaluate something, click \
\[OpenCurlyDoubleQuote]Yes\[CloseCurlyDoubleQuote] to automatically evaluate \
all initialization cells\n\ti.e. The gray cells, which are all the functions \
I wrote.\n\tCtrl+8 to turn a cell into an initialization cell (do this if you \
define a new function)\n\n",
 StyleBox["Warning:",
  FontWeight->"Bold"],
 "\nRemember that these computations are ",
 StyleBox["very",
  FontSlant->"Italic"],
 " exponential in both space and time, i.e. WedgeCongruences has to manage ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["2", 
    RowBox[{"(", GridBox[{
       {"n"},
       {"k"}
      }], ")"}]], TraditionalForm]],ExpressionUUID->
  "179f6c04-5b30-4449-b49a-ab5fffa0d6f0"],
 " subsets where ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],ExpressionUUID->
  "dd330951-27cb-4780-abea-2aa29abf1c5f"],
 " is the size of the ground set and ",
 Cell[BoxData[
  FormBox["k", TraditionalForm]],ExpressionUUID->
  "ff86e42e-8a0e-40bd-bee2-6c657e8389ea"],
 " is the wedge power, and all of these show up in its output. ",
 StyleBox["Big.",
  FontWeight->"Bold"],
 " So if you do a time-intensive computation, don\[CloseCurlyQuote]t just \
immediately try running VisualizeCongruences[] because Mathematica may crash. \
Instead, at least save the congruence classes to a .txt file first.\n\nWeird \
error: don\[CloseCurlyQuote]t use the variable name \
\[OpenCurlyDoubleQuote]Ground\[CloseCurlyDoubleQuote], since that is a \
function I defined\nAlso don\[CloseCurlyQuote]t use \[OpenCurlyDoubleQuote]I\
\[CloseCurlyDoubleQuote], \[OpenCurlyDoubleQuote]E\[CloseCurlyDoubleQuote], \
\[OpenCurlyDoubleQuote]N\[CloseCurlyDoubleQuote] since those are built-in \
things (unless you define them as local variables in a Module[]...)"
}], "Text",
 CellChangeTimes->{{3.7588105729186316`*^9, 3.7588105842616863`*^9}, {
  3.758853521041691*^9, 3.75885352148711*^9}, {3.762546295423984*^9, 
  3.762546336231536*^9}, {3.7884579724429893`*^9, 3.7884580609389687`*^9}, {
  3.7884580935966744`*^9, 3.7884581438715096`*^9}, {3.7884788353003473`*^9, 
  3.7884788744985294`*^9}, {3.7884789125294523`*^9, 3.7884789213489056`*^9}, {
  3.7884842894565573`*^9, 3.7884846584281006`*^9}, {3.7884903269875784`*^9, 
  3.7884903674015083`*^9}, {3.7885332422810574`*^9, 3.788533261743967*^9}, {
  3.788535530851838*^9, 
  3.788535542996981*^9}},ExpressionUUID->"a0f8fa26-8485-4f60-b8d4-\
6ff636236062"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Functions", "Chapter",
 CellChangeTimes->{{3.7394894601748123`*^9, 
  3.73948946270571*^9}},ExpressionUUID->"df951bbb-6248-41df-92f4-\
1a750b8a9eb5"],

Cell[CellGroupData[{

Cell["General", "Section",
 CellChangeTimes->{{3.75881305591621*^9, 
  3.758813056472704*^9}},ExpressionUUID->"ba4cbe73-b867-496a-9503-\
8d5f271ceecb"],

Cell[CellGroupData[{

Cell["Debug", "Subsubsection",
 CellChangeTimes->{{3.7468426903623424`*^9, 
  3.746842691258151*^9}},ExpressionUUID->"86ebdca5-2bfa-4de9-bb41-\
182574370a46"],

Cell["\<\
Two useful functions for when you\[CloseCurlyQuote]re debugging another \
function, or to easily make a function print/echo things if you tell it to\
\>", "Text",
 CellChangeTimes->{{3.7468428036706057`*^9, 3.7468428767579308`*^9}, {
  3.7468429391258197`*^9, 
  3.7468429667513704`*^9}},ExpressionUUID->"d98d0bad-b5f2-44b8-aa12-\
8d34f2319961"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"PrintDebug", "[", 
    RowBox[{"debug_", ",", "x___"}], "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{"debug", ",", 
     RowBox[{"Print", "[", "x", "]"}]}], "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7468426974541044`*^9, 3.7468427550288196`*^9}, {
  3.7468429181825495`*^9, 3.746842920557439*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"97725060-35b9-4047-ad64-371906129213"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"EchoDebug", "[", 
    RowBox[{"debug_", ",", "x___"}], "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{"debug", ",", 
     RowBox[{"Echo", "[", "x", "]"}], ",", "x"}], "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.746842739417719*^9, 3.7468427528025656`*^9}, {
  3.7468427834543147`*^9, 3.7468427847032733`*^9}, {3.746842922559486*^9, 
  3.7468429250929384`*^9}, {3.7597951867972665`*^9, 3.759795187333612*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"3bedafbc-d881-4e4e-a542-b311cf8ca579"],

Cell[TextData[StyleBox["Examples:",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.7884507322009983`*^9, 
  3.7884507367256756`*^9}},ExpressionUUID->"ddc1d18d-ec7b-4c98-a9f3-\
198c5ed6d8cc"],

Cell[BoxData[
 RowBox[{"PrintDebug", "[", 
  RowBox[{"False", ",", "\"\<a\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.7468427617398047`*^9, 3.7468427671083965`*^9}, {
  3.746842926257763*^9, 3.7468429287186213`*^9}},
 CellLabel->
  "In[191]:=",ExpressionUUID->"3be9753d-96af-4809-b7f3-d6ce076f9b06"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EchoDebug", "[", 
  RowBox[{"True", ",", "\"\<Thing\>\"", ",", "\"\<Label\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.746842769429845*^9, 3.7468427915299587`*^9}, {
  3.746842930286307*^9, 3.746842933071395*^9}},
 CellLabel->
  "In[192]:=",ExpressionUUID->"75348268-0970-46a7-b09a-d504996ad4a3"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Label\"\>",
   "EchoLabel"], " ", "\<\"Thing\"\>"}]], "Echo",
 CellChangeTimes->{
  3.759795191406499*^9},ExpressionUUID->"b7d1c4da-3c1a-4e2a-b168-\
1e5e0ed48885"],

Cell[BoxData["\<\"Thing\"\>"], "Output",
 CellChangeTimes->{{3.7468427862058673`*^9, 3.7468427918553247`*^9}, 
   3.74684293335703*^9, 3.759795191449128*^9},
 CellLabel->
  "Out[192]=",ExpressionUUID->"696771f8-5f78-4fc8-b4a9-a4a02d21112c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"debug", "=", "True"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Do", "[", 
  RowBox[{
   RowBox[{"PrintDebug", "[", 
    RowBox[{"debug", ",", "i"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "3"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.746842883182605*^9, 3.7468429158007097`*^9}},
 CellLabel->
  "In[193]:=",ExpressionUUID->"e38b6b74-e8a5-4659-a4e8-51b5a0bce106"],

Cell[CellGroupData[{

Cell[BoxData["1"], "Print",
 CellChangeTimes->{3.746842935047776*^9, 3.7597951957001534`*^9},
 CellLabel->
  "During evaluation of \
In[193]:=",ExpressionUUID->"934f4910-28f6-41e9-a32e-71faeb3d8609"],

Cell[BoxData["2"], "Print",
 CellChangeTimes->{3.746842935047776*^9, 3.7597951957046204`*^9},
 CellLabel->
  "During evaluation of \
In[193]:=",ExpressionUUID->"fbe72bb6-8e3e-49f2-a1c7-355b9b39e5a7"],

Cell[BoxData["3"], "Print",
 CellChangeTimes->{3.746842935047776*^9, 3.759795195714563*^9},
 CellLabel->
  "During evaluation of \
In[193]:=",ExpressionUUID->"28dfb494-6d41-4b0c-aeb6-f02e2deda073"]
}, Open  ]]
}, Open  ]],

Cell["\<\
The function defined below has an optional \[OpenCurlyDoubleQuote]debug\
\[CloseCurlyDoubleQuote] parameter that defaults to False. Set it to True if \
you want the extra outputs.\
\>", "Text",
 CellChangeTimes->{{3.746843083369714*^9, 
  3.746843131028067*^9}},ExpressionUUID->"9b9b8a97-d0e3-4938-b0dc-\
4a0fb10a0b0f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"example1", "[", 
   RowBox[{"a_", ",", "b_", ",", "c_", ",", 
    RowBox[{"debug_:", "False"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"PrintDebug", "[", 
      RowBox[{"debug", ",", "\"\<Now it's gonna echo some things\>\""}], 
      "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"EchoDebug", "[", 
      RowBox[{"debug", ",", 
       SuperscriptBox["a", "2"], ",", 
       "\"\<\!\(\*SuperscriptBox[\(a\), \(2\)]\)\>\""}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"EchoDebug", "[", 
      RowBox[{"debug", ",", 
       SuperscriptBox["b", "2"], ",", 
       "\"\<\!\(\*SuperscriptBox[\(b\), \(2\)]\)\>\""}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"a", "+", "b", "+", "c"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.746842977869603*^9, 3.746843079678138*^9}, 
   3.746843138338073*^9},
 CellLabel->
  "In[195]:=",ExpressionUUID->"79b10ac4-e3bb-4c29-ae71-07d6eb9321db"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"example1", "[", 
  RowBox[{"3", ",", "2", ",", "1", ",", "True"}], "]"}]], "Input",
 CellChangeTimes->{{3.746843061088567*^9, 3.7468430702736425`*^9}, 
   3.7468431411151943`*^9},
 CellLabel->
  "In[196]:=",ExpressionUUID->"6bf9a0ea-8491-4979-a771-8bf83c07e64a"],

Cell[CellGroupData[{

Cell[BoxData["\<\"Now it's gonna echo some things\"\>"], "Print",
 CellChangeTimes->{{3.746843070551902*^9, 3.746843080954311*^9}, 
   3.7468431414775467`*^9, 3.7597952077241917`*^9},
 CellLabel->
  "During evaluation of \
In[196]:=",ExpressionUUID->"7f38cc2d-2dd2-458b-96df-9c1ec0d136c5"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"\\!\\(\\*SuperscriptBox[\\(a\\), \\(2\\)]\\)\"\>",
   "EchoLabel"], " ", "9"}]], "Echo",
 CellChangeTimes->{
  3.759795207732155*^9},ExpressionUUID->"c4ce82da-ed81-45e8-8c09-\
d752799cb1cc"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"\\!\\(\\*SuperscriptBox[\\(b\\), \\(2\\)]\\)\"\>",
   "EchoLabel"], " ", "4"}]], "Echo",
 CellChangeTimes->{
  3.7597952077683687`*^9},ExpressionUUID->"924ef250-5035-456e-a8fb-\
baf3ea8ed6f5"]
}, Open  ]],

Cell[BoxData["6"], "Output",
 CellChangeTimes->{{3.7468430678320436`*^9, 3.746843081048582*^9}, 
   3.7468431415694065`*^9, 3.759795207810494*^9},
 CellLabel->
  "Out[196]=",ExpressionUUID->"89f8904f-e78e-432f-aa36-ca5af29c0ae5"]
}, Open  ]],

Cell["\<\
Here\[CloseCurlyQuote]s a fancy version showing the basics of options \
patterns (like how in Plot[] you can set Range\[Rule]whatever)
I don\[CloseCurlyQuote]t usually use this, but if you ever have complicated \
code that can have tons of optional inputs but usually just takes default \
values, this might be a good idea\
\>", "Text",
 CellChangeTimes->{{3.7468433908166814`*^9, 
  3.7468435017955017`*^9}},ExpressionUUID->"2159f8da-f40f-4e86-8866-\
ac7fcc21b018"],

Cell[BoxData[
 RowBox[{
  RowBox[{"example2", "[", 
   RowBox[{"a_", ",", "b_", ",", "c_", ",", 
    RowBox[{"OptionsPattern", "[", 
     RowBox[{"{", 
      RowBox[{"DebugMode", "\[Rule]", "False"}], "}"}], "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "debug", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"debug", "=", 
      RowBox[{"OptionValue", "[", "DebugMode", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"PrintDebug", "[", 
      RowBox[{"debug", ",", "\"\<Now it's gonna echo some things\>\""}], 
      "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"EchoDebug", "[", 
      RowBox[{"debug", ",", 
       SuperscriptBox["a", "2"], ",", 
       "\"\<\!\(\*SuperscriptBox[\(a\), \(2\)]\)\>\""}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"EchoDebug", "[", 
      RowBox[{"debug", ",", 
       SuperscriptBox["b", "2"], ",", 
       "\"\<\!\(\*SuperscriptBox[\(b\), \(2\)]\)\>\""}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"a", "+", "b", "+", "c"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7468431452662897`*^9, 3.7468431639210653`*^9}, {
  3.7468431982214727`*^9, 3.7468432369413147`*^9}, {3.7468432916427393`*^9, 
  3.7468433779254637`*^9}},
 CellLabel->
  "In[126]:=",ExpressionUUID->"6eb591e8-1f81-454c-b7ee-21c7faa6ee3a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"example2", "[", 
  RowBox[{"3", ",", "2", ",", "1", ",", 
   RowBox[{"DebugMode", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7468432089362326`*^9, 3.7468432143428345`*^9}, {
  3.7468433815716715`*^9, 3.7468433869339495`*^9}},
 CellLabel->
  "In[128]:=",ExpressionUUID->"b9dd8df8-60a8-4d72-bc9a-c5c94ced5c04"],

Cell[CellGroupData[{

Cell[BoxData["\<\"Now it's gonna echo some things\"\>"], "Print",
 CellChangeTimes->{3.7468433872913303`*^9},
 CellLabel->
  "During evaluation of \
In[128]:=",ExpressionUUID->"6a383552-94e4-4c51-b69c-c921bf2cb871"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"\\!\\(\\*SuperscriptBox[\\(a\\), \\(2\\)]\\)\"\>",
   "EchoLabel"], " ", "9"}]], "Echo",
 CellChangeTimes->{
  3.74684338729801*^9},ExpressionUUID->"9b6a57bb-dd8d-42af-98cd-a4f51f7fc4d5"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"\\!\\(\\*SuperscriptBox[\\(b\\), \\(2\\)]\\)\"\>",
   "EchoLabel"], " ", "4"}]], "Echo",
 CellChangeTimes->{
  3.7468433873412647`*^9},ExpressionUUID->"d36e4200-22d5-4061-9d12-\
1f7fb17692f9"]
}, Open  ]],

Cell[BoxData["6"], "Output",
 CellChangeTimes->{{3.7468432151768513`*^9, 3.74684323882084*^9}, {
  3.7468433795585814`*^9, 3.746843387383563*^9}},
 CellLabel->
  "Out[128]=",ExpressionUUID->"1b069eec-b13b-4727-92ba-d6d0cc26521c"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["TimeToString", "Subsubsection",
 CellChangeTimes->{{3.760123326367527*^9, 
  3.7601233278694706`*^9}},ExpressionUUID->"857fc169-2d0d-43b5-9d97-\
1ecc56f042ac"],

Cell["\<\
Helps when giving time estimates
It\[CloseCurlyQuote]s also cool if you have the program send you an SMS when \
it finishes running, with the total time in the message

Time given in seconds\
\>", "Text",
 CellChangeTimes->{{3.760123329029925*^9, 3.760123336551562*^9}, {
  3.762546874511699*^9, 
  3.7625469333497458`*^9}},ExpressionUUID->"3115f7d5-4302-4b3d-9751-\
367309eec910"],

Cell[BoxData[
 RowBox[{
  RowBox[{"TimeToString", "[", "t_", "]"}], ":=", 
  RowBox[{"Which", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"StringQ", "[", "t", "]"}], ",", "\[IndentingNewLine]", "t", ",", 
    "\[IndentingNewLine]", 
    RowBox[{"t", "<", "60"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ToString", "[", 
      RowBox[{"Round", "[", 
       RowBox[{"t", ",", "0.01"}], "]"}], "]"}], "~~", "\"\< seconds\>\""}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{"t", "<", "3600"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ToString", "[", 
      RowBox[{"Round", "[", 
       RowBox[{
        FractionBox["t", "60"], ",", "0.01"}], "]"}], "]"}], "~~", 
     "\"\< minutes\>\""}], ",", "\[IndentingNewLine]", "True", ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ToString", "[", 
      RowBox[{"Round", "[", 
       RowBox[{
        FractionBox["t", "3600"], ",", "0.01"}], "]"}], "]"}], "~~", 
     "\"\< hours\>\""}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.762547312102159*^9, 3.7625473243393*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"03fccea3-e308-4e4a-8317-5526bf8891d3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"t", "=", "12345"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"SendMessage", "[", 
  RowBox[{"\"\<SMS\>\"", ",", 
   RowBox[{"\"\<Code finished running, took \>\"", "~~", 
    RowBox[{"TimeToString", "[", "t", "]"}], "~~", "\"\<.\>\""}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.7601233422997413`*^9, 3.7601233920202084`*^9}},
 CellLabel->
  "In[255]:=",ExpressionUUID->"ccb23d1f-4c34-4587-befc-6cbe62b303e3"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Matroids", "Section",
 CellChangeTimes->{{3.741307854685442*^9, 
  3.7413078554535756`*^9}},ExpressionUUID->"b548114a-56fd-4d24-8d20-\
18d1bb58a0a2"],

Cell[TextData[{
 "I represent matroids in terms of bases, ",
 StyleBox["ie",
  IgnoreSpellCheck->True],
 ". as the tuple {E,B} where E is the ground set (as a list) and B is a list \
of bases (B \[SubsetEqual] ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["2", "E"], TraditionalForm]],ExpressionUUID->
  "45d02cf7-b38b-42a3-9b48-ecdf761b182d"],
 ")"
}], "Text",
 CellChangeTimes->{{3.7468414588962493`*^9, 3.7468415006365194`*^9}, {
  3.746843512481297*^9, 3.7468435180463276`*^9}, {3.7884511398973637`*^9, 
  3.788451140523731*^9}},ExpressionUUID->"de374661-1746-49a6-9bc0-\
177314e01621"],

Cell[CellGroupData[{

Cell["Matroid Construction", "Subsection",
 CellChangeTimes->{{3.745541519761505*^9, 3.74554152085303*^9}, {
  3.7468414372698545`*^9, 
  3.7468414381554375`*^9}},ExpressionUUID->"140b6d07-2fdb-4b8b-b100-\
2bea8495f0a4"],

Cell[CellGroupData[{

Cell["UniformMatroid", "Subsubsection",
 CellChangeTimes->{{3.739826261210532*^9, 
  3.7398262641253304`*^9}},ExpressionUUID->"f7d3f67e-34f5-45e7-95ab-\
72c39e2f3312"],

Cell[TextData[{
 "Constructs the uniform matroid ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["U", 
    RowBox[{"d", ",", "n"}]], TraditionalForm]],ExpressionUUID->
  "8898cf93-a0e1-4217-9d6f-0c5fb4d931d9"]
}], "Text",
 CellChangeTimes->{{3.739826265735364*^9, 
  3.739826274024627*^9}},ExpressionUUID->"9f08cdc2-7c97-4432-b359-\
b98382afd6af"],

Cell[BoxData[
 RowBox[{
  RowBox[{"UniformMatroid", "[", 
   RowBox[{"d_", ",", "n_Integer"}], "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Range", "[", "n", "]"}], ",", 
    RowBox[{"Subsets", "[", 
     RowBox[{
      RowBox[{"Range", "[", "n", "]"}], ",", 
      RowBox[{"{", "d", "}"}]}], "]"}]}], "}"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7398262761494236`*^9, 3.7398263174362063`*^9}, {
  3.7475345927156496`*^9, 3.747534593364093*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"efae1ffc-cbe0-4ea6-aeba-2a81945a5a8b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"UniformMatroid", "[", 
  RowBox[{"2", ",", "4"}], "]"}]], "Input",
 CellChangeTimes->{{3.739826305605734*^9, 3.739826310153914*^9}},
 CellLabel->
  "In[144]:=",ExpressionUUID->"6ebac53f-127b-4a27-9894-8c51c59244e2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "4"}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.739826310481782*^9, 3.73982631840487*^9}},
 CellLabel->
  "Out[144]=",ExpressionUUID->"976f82a9-25b6-4daf-b3bf-7741e1afe454"]
}, Open  ]],

Cell["If the user wants to specify the ground set,", "Text",
 CellChangeTimes->{{3.7475346277749863`*^9, 3.7475346340043287`*^9}, {
  3.7884510724374866`*^9, 
  3.788451088173544*^9}},ExpressionUUID->"04394aef-d5be-4a03-97fc-\
47f2e9d29abc"],

Cell[BoxData[
 RowBox[{
  RowBox[{"UniformMatroid", "[", 
   RowBox[{"d_", ",", "ground_List"}], "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{"ground", ",", 
    RowBox[{"Subsets", "[", 
     RowBox[{"ground", ",", 
      RowBox[{"{", "d", "}"}]}], "]"}]}], "}"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7475346022913446`*^9, 3.7475346249307375`*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"9ef333ec-52b9-465a-a284-f558d797e052"],

Cell["\<\
So in this example, the ground set is all pairs of numbers from {1,2,3,4}\
\>", "Text",
 CellChangeTimes->{{3.788451102962905*^9, 
  3.788451119684124*^9}},ExpressionUUID->"07a0ba77-7210-4124-9609-\
5161b4c22c1e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"UniformMatroid", "[", 
  RowBox[{"2", ",", 
   RowBox[{"Subsets", "[", 
    RowBox[{
     RowBox[{"Range", "[", "4", "]"}], ",", 
     RowBox[{"{", "2", "}"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7475346428396683`*^9, 3.7475346660896053`*^9}},
 CellLabel->"In[77]:=",ExpressionUUID->"19148878-a00f-40f1-8dfe-1a1b7f7addf9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "4"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "4"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "3"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "4"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "4"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "4"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "3"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "4"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "4"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "3"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "4"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "4"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "4"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "4"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", "4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "4"}], "}"}]}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7475346585165415`*^9, 3.74753466641838*^9}},
 CellLabel->"Out[77]=",ExpressionUUID->"cb436223-0489-4603-bf11-f4fdf9b0aa36"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["GraphicMatroid", "Subsubsection",
 CellChangeTimes->{{3.7398191075286217`*^9, 
  3.7398191094194107`*^9}},ExpressionUUID->"53117dd8-80b4-4279-af66-\
f8c71355e73b"],

Cell[TextData[{
 "Constructs the graphic matroid corresponding to a graph (or a set of edges)\
\nOptional parameter \[OpenCurlyDoubleQuote]echo\[CloseCurlyDoubleQuote] if \
the user wants to see the graph\n",
 StyleBox["Improvement:",
  FontWeight->"Bold"],
 " optimize how it finds all spanning trees"
}], "Text",
 CellChangeTimes->{{3.7398192040193195`*^9, 3.73981921355192*^9}, {
  3.7398268822427683`*^9, 3.739826902967458*^9}, {3.743554211472377*^9, 
  3.743554222139659*^9}, {3.788450997267346*^9, 
  3.7884510138793697`*^9}},ExpressionUUID->"c9d76c58-9555-48d2-89e7-\
a27fbc370d98"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"GraphicMatroid", "[", 
    RowBox[{"G_", ",", 
     RowBox[{"echo_:", "False"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"edges", ",", "numberingRule", ",", "B"}], "}"}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Finds", " ", "the", " ", "edges"}], ";", " ", 
       RowBox[{
       "requires", " ", "figuring", " ", "out", " ", "if", " ", "a", " ", 
        "graph", " ", "or", " ", "edge", " ", "list", " ", "was", " ", 
        "supplied"}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"edges", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"GraphQ", "@", "G"}], ",", 
         RowBox[{"EdgeList", "@", "G"}], ",", "G"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Numbers", " ", "them", " ", "automatically"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"numberingRule", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"edges", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "\[Rule]", "i"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "@", "edges"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Outputs", " ", "the", " ", "graph", " ", 
        RowBox[{"(", 
         RowBox[{"if", " ", "desired"}], ")"}]}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"echo", ",", 
        RowBox[{"Echo", "[", 
         RowBox[{
          RowBox[{"Graph", "[", 
           RowBox[{"edges", ",", 
            RowBox[{"EdgeLabels", "\[Rule]", "numberingRule"}]}], "]"}], ",", 
          "\"\<Graph\>\""}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
        "Determines", " ", "the", " ", "minimum", " ", "spanning", " ", 
         "trees"}], ",", " ", 
        RowBox[{
        "which", " ", "are", " ", "the", " ", "bases", " ", "of", " ", "our", 
         " ", "matroid"}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
        "First", " ", "finds", " ", "a", " ", "spanning", " ", "tree"}], ",", 
        " ", 
        RowBox[{
        "to", " ", "figure", " ", "out", " ", "what", " ", "size", " ", "the",
          " ", "bases", " ", "are"}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "Then", " ", "selects", " ", "all", " ", "acyclic", " ", "subsets", 
        " ", "of", " ", "edges", " ", "with", " ", "that", " ", "size", " ", 
        RowBox[{"(", 
         RowBox[{
         "could", " ", "probably", " ", "be", " ", "made", " ", "more", " ", 
          "efficient"}], ")"}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Finally", ",", " ", 
        RowBox[{
        "assigns", " ", "numbers", " ", "to", " ", "the", " ", "edges"}]}], 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"B", "=", 
       RowBox[{
        RowBox[{"EdgeList", "/@", 
         RowBox[{"Select", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Graph", "/@", 
            RowBox[{"Subsets", "[", 
             RowBox[{"edges", ",", 
              RowBox[{"{", 
               RowBox[{"EdgeCount", "@", 
                RowBox[{"FindSpanningTree", "@", "G"}]}], "}"}]}], "]"}]}], 
           "\[IndentingNewLine]", ",", "AcyclicGraphQ"}], 
          "\[IndentingNewLine]", "]"}]}], "/.", "numberingRule"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Returns", " ", "the", " ", "matroid"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "The", " ", "ground", " ", "set", " ", "is", " ", "just", " ", "the"}],
        "*)"}], "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Range", "[", 
         RowBox[{"Length", "@", "edges"}], "]"}], ",", "B"}], "}"}]}]}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQAWIQLXxkZlbjndeOk27OLgXRdcvDZoHoAzemg2knjcpV
IHpdAd8GEF2vJr4VRM+XDgbTId/XngDRdsasp0F0TPTkyyCaaYbYdRDNoXHj
Fog2W5T7AEQ3sS74BKKrpA6C6VX+Ub9B9IrAg2xNQHqKCq8riPYQFAfTZlYN
3iD6dSefD4hmatsdAKLPcd+MBNE5T9W81O++dhQP6QkH0Usvbo4G0d+D9oDp
gienw52fvHYUceCIBNFXhRYkgWinf2k5YHGuU4Ug2r30Ppi+d/5HOYjW65hY
CaK35lyoBdEhWo/AtFFLePtTyzeOSpw600A0ACwarao=
  "],
 CellLabel->"In[6]:=",ExpressionUUID->"7f2ce357-4e82-49b9-b13e-cb60b270c135"]
}, Closed]],

Cell[CellGroupData[{

Cell["DualMatroid", "Subsubsection",
 CellChangeTimes->{{3.7407015759538937`*^9, 
  3.740701586666631*^9}},ExpressionUUID->"e94c1f96-049c-49a7-a2e7-\
4a356a16a9ff"],

Cell["Constructs the dual matroid", "Text",
 CellChangeTimes->{{3.7468423073841505`*^9, 3.74684231063739*^9}, {
  3.788451220779131*^9, 
  3.788451228991255*^9}},ExpressionUUID->"c0d2ef1e-4bc4-44c0-b71b-\
571f79ec2fa3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"DualMatroid", "[", "M_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"E", ",", "B"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"E", ",", "B"}], "}"}], "=", "M"}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"For", " ", "each", " ", "basis"}], ",", " ", 
       RowBox[{
       "takes", " ", "the", " ", "complement", " ", "in", " ", "E"}]}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"The", " ", 
       RowBox[{"Reverse", "[", "]"}], " ", "just", " ", "makes", " ", "sure", 
       " ", "the", " ", "new", " ", "list", " ", "of", " ", "bases", " ", 
       "is", " ", "sorted"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"E", ",", 
       RowBox[{"Reverse", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Complement", "[", 
           RowBox[{"E", ",", "#"}], "]"}], "&"}], "/@", "B"}], "]"}]}], 
      "}"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7407015921995354`*^9, 3.7407016782994328`*^9}, {
  3.7884511658790836`*^9, 3.7884513073483987`*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"5808a668-e7b6-4474-a094-8fe293bbdb7a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DualMatroid", "[", 
  RowBox[{"UniformMatroid", "[", 
   RowBox[{"2", ",", "5"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7407016479861326`*^9, 3.74070165543314*^9}, {
  3.740701689347125*^9, 3.7407016904957952`*^9}},
 CellLabel->"In[59]:=",ExpressionUUID->"8104b69e-606e-43b1-8551-60690ae36ad0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "4", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "4", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "4", ",", "5"}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.740701655854787*^9, 3.740701690901803*^9}, 
   3.7884513124964476`*^9},
 CellLabel->"Out[59]=",ExpressionUUID->"5a223dfa-965b-42b1-a44e-1e7e223e1022"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["MK4", "Subsubsection",
 CellChangeTimes->{{3.7413049948377686`*^9, 
  3.7413049953217344`*^9}},ExpressionUUID->"ac93bfb4-3d08-4d1e-9d1d-\
39e7d4c94c11"],

Cell[TextData[{
 "A good graphic matroid.\n",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["Giansiracusa", "2"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "92f8b5e4-7a4e-4e45-9899-e8ac8313c896"],
 " (A ",
 StyleBox["Grassman",
  IgnoreSpellCheck->True],
 " Algebra for Matroids) uses this one for examples (see examples 4.3.2, \
6.1.5), so I decided to save it for easy use.\n",
 StyleBox["It\[CloseCurlyQuote]s useful",
  IgnoreSpellCheck->True],
 " since it\[CloseCurlyQuote]s a small nonuniform matroid."
}], "Text",
 CellChangeTimes->{{3.741196065836207*^9, 3.741196088280183*^9}, {
  3.7468420816156693`*^9, 
  3.746842267772032*^9}},ExpressionUUID->"b11722d4-2057-430a-865d-\
cf8265988f79"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MK4", "=", 
  RowBox[{"GraphicMatroid", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "\[UndirectedEdge]", "2"}], ",", 
      RowBox[{"2", "\[UndirectedEdge]", "4"}], ",", 
      RowBox[{"4", "\[UndirectedEdge]", "1"}], ",", 
      RowBox[{"1", "\[UndirectedEdge]", "3"}], ",", 
      RowBox[{"3", "\[UndirectedEdge]", "2"}], ",", 
      RowBox[{"3", "\[UndirectedEdge]", "4"}]}], "}"}], ",", "True"}], 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7411960583015556`*^9, 3.7411960630106363`*^9}, {
  3.788451344482095*^9, 3.788451348127798*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"0723311e-7578-4811-9bed-ca7d7a146199"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Graph\"\>",
   "EchoLabel"], " ", 
  GraphicsBox[
   NamespaceBox["NetworkGraphics",
    DynamicModuleBox[{Typeset`graph = HoldComplete[
      Graph[{1, 2, 4, 3}, {
       Null, {{1, 2}, {2, 3}, {3, 1}, {1, 4}, {4, 2}, {4, 3}}}, {
       EdgeLabels -> {
         UndirectedEdge[3, 4] -> 6, UndirectedEdge[3, 2] -> 5, 
          UndirectedEdge[2, 4] -> 2, UndirectedEdge[4, 1] -> 3, 
          UndirectedEdge[1, 2] -> 1, UndirectedEdge[1, 3] -> 4}}]]}, 
     TagBox[GraphicsGroupBox[{
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], {
          {Arrowheads[0.], 
           ArrowBox[{{-1., 1.0106430996148606`*^-15}, {
            6.049014748177263*^-16, -1.}}, 0.02261146496815286]}, 
          InsetBox["1", {-0.4999999999999997, -0.4999999999999995}, 
           ImageScaled[{0.5, 0.5}],
           BaseStyle->"Graphics"]}, {
          {Arrowheads[0.], 
           ArrowBox[{{-1., 1.0106430996148606`*^-15}, {
            1., -1.133107779529596*^-15}}, 0.02261146496815286]}, 
          InsetBox["3", {0., -6.123233995736767*^-17}, ImageScaled[{0.5, 0.5}],
           BaseStyle->"Graphics"]}, {
          {Arrowheads[0.], 
           ArrowBox[{{-1., 
            1.0106430996148606`*^-15}, {-7.044813998280222*^-16, 1.}}, 
            0.02261146496815286]}, 
          InsetBox["4", {-0.5000000000000003, 0.5000000000000006}, 
           ImageScaled[{0.5, 0.5}],
           BaseStyle->"Graphics"]}, {
          {Arrowheads[0.], 
           ArrowBox[{{6.049014748177263*^-16, -1.}, {
            1., -1.133107779529596*^-15}}, 0.02261146496815286]}, 
          InsetBox["2", {0.5000000000000003, -0.5000000000000006}, 
           ImageScaled[{0.5, 0.5}],
           BaseStyle->"Graphics"]}, {
          {Arrowheads[0.], 
           ArrowBox[{{6.049014748177263*^-16, -1.}, {-7.044813998280222*^-16, 
            1.}}, 0.02261146496815286]}, 
          InsetBox["5", {-4.978996250514798*^-17, 0.}, ImageScaled[{0.5, 0.5}],
           BaseStyle->"Graphics"]}, {
          {Arrowheads[0.], 
           ArrowBox[{{1., -1.133107779529596*^-15}, {-7.044813998280222*^-16, 
            1.}}, 0.02261146496815286]}, 
          InsetBox["6", {0.49999999999999967, 0.49999999999999944}, 
           ImageScaled[{0.5, 0.5}],
           BaseStyle->"Graphics"]}}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[{-1., 1.0106430996148606*^-15}, 0.02261146496815286], 
         DiskBox[{6.049014748177263*^-16, -1.}, 0.02261146496815286], 
         DiskBox[{1., -1.133107779529596*^-15}, 0.02261146496815286], 
         DiskBox[{-7.044813998280222*^-16, 1.}, 0.02261146496815286]}}],
      MouseAppearanceTag["NetworkGraphics"]],
     AllowKernelInitialization->False]],
   DefaultBaseStyle->{
    "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
   FormatType->TraditionalForm,
   FrameTicks->None]}]], "Echo",
 CellChangeTimes->{
  3.7885312519185567`*^9},ExpressionUUID->"522eb838-3f9e-4fa7-8e36-\
ad32f81bb065"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "4", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "5", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "4", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "4", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "4", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "5", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "5", ",", "6"}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.788451344681595*^9, 3.7884513488065*^9}, 
   3.7884580874536467`*^9, 3.7884822763912888`*^9, 3.788483871609533*^9, 
   3.7884842741225615`*^9, 3.7884877379787297`*^9, 3.7884877702584114`*^9, 
   3.788529914335333*^9, 3.788531251958451*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"dc9ff237-3136-4216-856a-d9704ff5fe90"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["LinearMatroid", "Subsubsection",
 CellChangeTimes->{{3.748537164790995*^9, 
  3.7485371750489864`*^9}},ExpressionUUID->"81aff8f7-656b-4a5d-ae31-\
52a6d7853663"],

Cell["Constructs a matroid from a matrix", "Text",
 CellChangeTimes->{{3.7485371763537035`*^9, 
  3.7485371820142326`*^9}},ExpressionUUID->"f5c8030f-9dab-4c84-905d-\
ce524164d34c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"LinearMatroid", "[", "A_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"d", ",", "C", ",", "E", ",", "B"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
     "Find", " ", "the", " ", "rank", " ", "of", " ", "the", " ", "matroid"}],
      "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"d", "=", 
      RowBox[{"MatrixRank", "[", "A", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Transpose", " ", "so", " ", "that", " ", "the", " ", "rows", " ", 
       "are", " ", "the", " ", "vectors", " ", "I", " ", "care", " ", 
       "about"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"C", "=", 
      RowBox[{"Transpose", "[", "A", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"Find", " ", "the", " ", "ground", " ", "set"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"E", "=", 
      RowBox[{"Range", "[", 
       RowBox[{"Length", "[", "C", "]"}], "]"}]}], ";", "\[IndentingNewLine]",
      "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"Find", " ", "bases"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"B", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"MatrixRank", "[", 
            RowBox[{"C", "[", 
             RowBox[{"[", "indices", "]"}], "]"}], "]"}], "\[Equal]", "d"}], 
          ",", "indices", ",", "Nothing"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"indices", ",", 
          RowBox[{"Subsets", "[", 
           RowBox[{"E", ",", 
            RowBox[{"{", "d", "}"}]}], "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", "Output", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"E", ",", "B"}], "}"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7485371868810863`*^9, 3.7485374860877*^9}, {
  3.748537558921092*^9, 3.7485375835460825`*^9}, {3.748537654756635*^9, 
  3.748537657203354*^9}, {3.7485377957826147`*^9, 3.748537820316431*^9}, {
  3.788451375802106*^9, 3.7884513774315004`*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"e2eeac54-2e01-48f3-9c54-8ae32a4dc16a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"A", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "1", ",", "1", ",", "8", ",", "2", ",", "6", 
       ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "3", ",", "2", ",", "22", ",", "10", ",", 
       "15", ",", "14"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0", ",", "1", ",", "1", ",", "10", ",", "4", ",", "9", ",", "5"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "1", ",", "2", ",", "14", ",", "2", ",", "15",
        ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", 
       RowBox[{"-", "1"}], ",", 
       RowBox[{"-", "2"}], ",", "4", ",", 
       RowBox[{"-", "9"}], ",", "5"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "A", "]"}], "\[IndentingNewLine]", 
 RowBox[{"M", "=", 
  RowBox[{"LinearMatroid", "[", "A", "]"}]}]}], "Input",
 CellChangeTimes->{{3.748537587514166*^9, 3.748537627391653*^9}, {
  3.7485376738917007`*^9, 3.748537746243263*^9}, {3.7485377889353743`*^9, 
  3.7485377896598673`*^9}},
 CellLabel->"In[59]:=",ExpressionUUID->"57bc149b-a72b-48b4-9cb4-2bdafd6775ec"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", "1"}], "1", "1", "8", "2", "6", "4"},
     {
      RowBox[{"-", "1"}], "3", "2", "22", "10", "15", "14"},
     {"0", "1", "1", "10", "4", "9", "5"},
     {
      RowBox[{"-", "1"}], "1", "2", "14", "2", "15", "4"},
     {"0", "1", 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "2"}], "4", 
      RowBox[{"-", "9"}], "5"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.748537628010255*^9, 3.748537658452554*^9, {3.748537741705159*^9, 
   3.748537746526995*^9}, 3.7485377904302716`*^9, 3.7485378221917844`*^9},
 CellLabel->
  "Out[60]//MatrixForm=",ExpressionUUID->"9ff295fe-9249-482b-b53a-\
bd9af078c3a8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3", ",", "7"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "4", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "4", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "4", ",", "7"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "5", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "6", ",", "7"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3", ",", "7"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "4", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "4", ",", "7"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "5", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "6", ",", "7"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "4", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "4", ",", "7"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "5", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "5", ",", "7"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "6", ",", "7"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "5", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "5", ",", "7"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "6", ",", "7"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "6", ",", "7"}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.748537628010255*^9, 3.748537658452554*^9, {3.748537741705159*^9, 
   3.748537746526995*^9}, 3.7485377904302716`*^9, 3.7485378222061677`*^9},
 CellLabel->"Out[61]=",ExpressionUUID->"55b9388e-c58b-4dfe-9e06-c4471eb6367d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rules", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"#", "/.", 
      RowBox[{"{", 
       RowBox[{"List", "\[Rule]", "Rule"}], "}"}]}], ")"}], "&"}], "/@", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Range", "[", "7", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "a", ",", "b", ",", "c", ",", "d", ",", "e", ",", "f", ",", "g"}], 
       "}"}]}], "}"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7485378781610403`*^9, 3.7485379925529895`*^9}},
 CellLabel->"In[71]:=",ExpressionUUID->"43e6f7e8-1b35-48cf-8f1c-828ffb6fec05"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"1", "\[Rule]", "a"}], ",", 
   RowBox[{"2", "\[Rule]", "b"}], ",", 
   RowBox[{"3", "\[Rule]", "c"}], ",", 
   RowBox[{"4", "\[Rule]", "d"}], ",", 
   RowBox[{"5", "\[Rule]", "e"}], ",", 
   RowBox[{"6", "\[Rule]", "f"}], ",", 
   RowBox[{"7", "\[Rule]", "g"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.748537969498309*^9, 3.7485379930719676`*^9}},
 CellLabel->"Out[71]=",ExpressionUUID->"78cac4fe-178b-4deb-9e9b-9ccb36eecdd4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Circuits", "[", "M", "]"}], "/.", "rules"}]], "Input",
 CellChangeTimes->{{3.7485379782661457`*^9, 3.74853797921087*^9}},
 CellLabel->"In[72]:=",ExpressionUUID->"d51eb9a9-41d1-4ac5-8d96-141eefd37e93"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "e"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "g"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "c", ",", "f"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "e", ",", "g"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"b", ",", "d", ",", "f"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"b", ",", "e", ",", "g"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"c", ",", "d", ",", "e"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "c", ",", "d", ",", "g"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "d", ",", "e", ",", "f"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "d", ",", "f", ",", "g"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"b", ",", "c", ",", "d", ",", "g"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"b", ",", "c", ",", "e", ",", "f"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"b", ",", "c", ",", "f", ",", "g"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"c", ",", "d", ",", "f", ",", "g"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"c", ",", "e", ",", "f", ",", "g"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"d", ",", "e", ",", "f", ",", "g"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.748537979620413*^9, 3.748537994036557*^9}},
 CellLabel->"Out[72]=",ExpressionUUID->"8e64de86-1b89-489e-a2db-01a2a877c115"]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Matroid Parts", "Subsection",
 CellChangeTimes->{{3.7455414995315957`*^9, 3.7455415343695707`*^9}, {
  3.746841453528043*^9, 
  3.746841454274753*^9}},ExpressionUUID->"5591562b-29a3-49b5-9899-\
046dcdcafd3c"],

Cell[CellGroupData[{

Cell["IndependentSets", "Subsubsection",
 CellChangeTimes->{{3.7407018091752596`*^9, 
  3.740701815665345*^9}},ExpressionUUID->"c1937c05-4b7c-4356-bb40-\
db9bff5026cf"],

Cell["All subsets of bases", "Text",
 CellChangeTimes->{{3.7884514154363995`*^9, 
  3.788451434765525*^9}},ExpressionUUID->"df12c808-c6b9-4e0e-a8eb-\
c133d999c5b0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"IndependentSets", "[", "M_", "]"}], ":=", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"B", "=", 
      RowBox[{"Last", "[", "M", "]"}]}], "}"}], ",", 
    RowBox[{"Union", "@@", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"Subsets", "[", "#", "]"}], "&"}], "/@", "B"}], ")"}]}]}], 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.740701816476492*^9, 3.740701882514097*^9}, {
  3.740702147410639*^9, 3.7407021484892435`*^9}, {3.745542828426034*^9, 
  3.745542840206662*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"72d3107a-3b3f-4200-9576-884bbcb5e150"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IndependentSets", "[", 
  RowBox[{"UniformMatroid", "[", 
   RowBox[{"2", ",", "5"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.740702014743717*^9, 3.7407020264733515`*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"ee31f61c-c44c-4748-a1c2-4bce0a6d2243"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "}"}], ",", 
   RowBox[{"{", "1", "}"}], ",", 
   RowBox[{"{", "2", "}"}], ",", 
   RowBox[{"{", "3", "}"}], ",", 
   RowBox[{"{", "4", "}"}], ",", 
   RowBox[{"{", "5", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "5"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7407020268935003`*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"4051c735-e764-4328-a94e-414a604c4a02"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["DependentSets", "Subsubsection",
 CellChangeTimes->{{3.740701905916788*^9, 
  3.7407019103507705`*^9}},ExpressionUUID->"29dca8a6-a0c0-4b99-aa0f-\
281eac6d324a"],

Cell["The non-independent sets", "Text",
 CellChangeTimes->{{3.7884514674764214`*^9, 
  3.7884514909537845`*^9}},ExpressionUUID->"a5155966-dca1-4f40-897c-\
19b2d0f41669"],

Cell[BoxData[
 RowBox[{
  RowBox[{"DependentSets", "[", "M_", "]"}], ":=", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"E", "=", 
      RowBox[{"First", "[", "M", "]"}]}], "}"}], ",", 
    RowBox[{"Complement", "[", 
     RowBox[{
      RowBox[{"Subsets", "[", "E", "]"}], ",", 
      RowBox[{"IndependentSets", "[", "M", "]"}]}], "]"}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.740701816476492*^9, 3.740701882514097*^9}, {
  3.740701917829924*^9, 3.740702009568651*^9}, {3.740702074551101*^9, 
  3.7407020751447225`*^9}, {3.7407021091059637`*^9, 3.740702142675433*^9}, {
  3.745542849489113*^9, 3.745542868846631*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"785b4b76-9d28-4823-8c31-0962d3b5b9d7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DependentSets", "[", 
  RowBox[{"UniformMatroid", "[", 
   RowBox[{"2", ",", "5"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.740702010948056*^9, 3.7407020449809494`*^9}, {
  3.7407021315623856`*^9, 3.7407021362819223`*^9}},
 CellLabel->"In[69]:=",ExpressionUUID->"61c7bf92-6d77-4d02-86b1-9ba4db709d7c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "4", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "4", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "4", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "4", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "4", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.7407020457774954`*^9, 3.7407020763796153`*^9, {3.740702122915433*^9, 
   3.7407021366097803`*^9}, 3.7455428708171616`*^9},
 CellLabel->"Out[69]=",ExpressionUUID->"be29e210-bf7f-4f4e-98c1-4f5783231343"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Circuits", "Subsubsection",
 CellChangeTimes->{{3.7407017242082944`*^9, 
  3.7407017249164963`*^9}},ExpressionUUID->"fc255776-8fa5-4363-8595-\
ebbc7194b6a9"],

Cell[TextData[{
 "Using the swanky minimality-checking code I found online (see the function \
Minimal[] in the Misc section below)\n",
 StyleBox["Improvement:",
  FontWeight->"Bold"],
 " try another algorithm. Given a matroid of rank d, say we consider sets A \
of size d+1. Then the complements of bases in A give elements of a circuit in \
A. (i.e. using that all circuits are \[OpenCurlyDoubleQuote]basic\
\[CloseCurlyDoubleQuote], see Gordon McNulty p. 162 Proposition 4.7 part 1)\n\
See MatroidFromCircuits[] for the reverse problem, of getting bases from \
circuits"
}], "Text",
 CellChangeTimes->{{3.7407027098733435`*^9, 3.7407027616611757`*^9}, {
  3.7407028134195366`*^9, 3.7407028473059874`*^9}, {3.7455425388062396`*^9, 
  3.745542552843979*^9}, {3.7464119692617674`*^9, 3.74641202115778*^9}, {
  3.746412066698789*^9, 3.746412081009427*^9}, {3.7884515108116674`*^9, 
  3.7884516146571712`*^9}, {3.7884525779424624`*^9, 
  3.7884526181528597`*^9}},ExpressionUUID->"fabfb05a-f795-47a6-9ff0-\
3bff6e836654"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Circuits", "[", "M_", "]"}], ":=", 
  RowBox[{"Minimal", "[", 
   RowBox[{"DependentSets", "[", "M", "]"}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.740701729977824*^9, 3.740701761306962*^9}, {
  3.740702155844453*^9, 3.7407021585807447`*^9}, {3.740702189868264*^9, 
  3.7407022104217157`*^9}, {3.7407023703745494`*^9, 3.7407026902020707`*^9}, {
  3.7414778098929825`*^9, 3.741477826093545*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"69b957ef-f49a-48ce-b9bb-2b3b91cfe2b8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Circuits", "[", 
  RowBox[{"UniformMatroid", "[", 
   RowBox[{"2", ",", "5"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.740702545728507*^9, 3.740702551173674*^9}, {
  3.7414778436204505`*^9, 3.741477862847759*^9}},
 CellLabel->"In[73]:=",ExpressionUUID->"6adf4a37-f1e7-4b77-a8de-dd0869f00b15"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "4", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "4", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4", ",", "5"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.740702551517146*^9, 3.7407026445742702`*^9}, 
   3.7407026960459085`*^9, {3.7414778363602495`*^9, 3.741477863110572*^9}},
 CellLabel->"Out[73]=",ExpressionUUID->"bd237fc2-3cc9-49b3-b477-18228ff1e45f"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Cocircuits", "Subsubsection",
 CellChangeTimes->{{3.7455425568332367`*^9, 
  3.7455425602546353`*^9}},ExpressionUUID->"5c282864-77ed-48d5-827e-\
b6065fe37f19"],

Cell["Finds the cocircuits of a matroid", "Text",
 CellChangeTimes->{{3.7455425879797077`*^9, 
  3.745542592426607*^9}},ExpressionUUID->"0213b174-d80c-48e7-a614-\
852571a7d5b0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Cocircuits", "[", "M_", "]"}], ":=", 
  RowBox[{"Circuits", "[", 
   RowBox[{"DualMatroid", "[", "M", "]"}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7455425620528584`*^9, 3.7455425814165235`*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"9a4c0fdd-3d7c-4706-aed2-521115944d3e"]
}, Closed]],

Cell[CellGroupData[{

Cell["Rank", "Subsubsection",
 CellChangeTimes->{{3.7455380904878435`*^9, 
  3.7455380907534113`*^9}},ExpressionUUID->"96575c14-45a4-438e-82c1-\
cb67efe6a211"],

Cell["Gives the rank of a matroid (size of any basis)", "Text",
 CellChangeTimes->{{3.745538092925373*^9, 3.745538095535013*^9}, {
  3.788451629985474*^9, 
  3.78845163389935*^9}},ExpressionUUID->"bc03346a-dc9a-49e4-add2-\
c511b791ed53"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Rank", "[", "M_", "]"}], ":=", 
  RowBox[{"Length", "[", 
   RowBox[{"M", "[", 
    RowBox[{"[", 
     RowBox[{"2", ",", "1"}], "]"}], "]"}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.745538097941265*^9, 3.745538108332339*^9}, {
  3.7455381393460846`*^9, 3.745538147635217*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"ccb7d693-8951-4e5e-87a4-88aae87b942b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Rank", "[", 
  RowBox[{"UniformMatroid", "[", 
   RowBox[{"3", ",", "6"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7455381588623605`*^9, 3.745538164167575*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"2bb8512e-f6c9-492f-aa8f-f234d3c93b5b"],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{3.745538165193343*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"fd8d8a7e-2d83-4a47-bb9f-0980cb5ebe58"]
}, Open  ]],

Cell[TextData[{
 "Gives the rank of a set ",
 Cell[BoxData[
  FormBox[
   RowBox[{"S", "\[Subset]", "E"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "c107a958-dda0-4b8e-bc2b-6ce45d335457"],
 " in a matroid"
}], "Text",
 CellChangeTimes->{{3.745541766196073*^9, 3.7455417709817953`*^9}, {
  3.788451665910184*^9, 
  3.7884516804375663`*^9}},ExpressionUUID->"de2ab499-9581-41d0-9c79-\
6c0a096d13d2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Rank", "[", 
   RowBox[{"S_", ",", "M_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "bases", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"Rank", "[", "S", "]"}], " ", "is", " ", "the", " ", "size", 
      " ", "of", " ", "the", " ", "largest", " ", "portion", " ", "of", " ", 
      "S", " ", "overlapping", " ", "with", " ", "a", " ", "basis"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"bases", "=", 
      RowBox[{"Last", "[", "M", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Max", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Length", "@", 
         RowBox[{"Intersection", "[", 
          RowBox[{"S", ",", "basis"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"basis", ",", "bases"}], "}"}]}], "]"}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7455417726812057`*^9, 3.7455417795854626`*^9}, {
  3.7455418329956923`*^9, 3.745541904059385*^9}, {3.745541936073393*^9, 
  3.7455420997769814`*^9}, {3.7455421557959023`*^9, 3.745542168234431*^9}, {
  3.745542926273085*^9, 3.7455429413330855`*^9}, {3.7588557331326714`*^9, 
  3.758855767083959*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"2327fec0-d6c8-4a9d-bfd5-022ac310df69"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Rank", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], ",", 
   RowBox[{"UniformMatroid", "[", 
    RowBox[{"3", ",", "6"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7455421141259336`*^9, 3.7455421250607777`*^9}, {
  3.7588556739634686`*^9, 3.7588556744016013`*^9}},
 CellLabel->
  "In[508]:=",ExpressionUUID->"cb0abab0-5bac-412a-a416-4e77b855e7c3"],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{
  3.7455421254411707`*^9, {3.745542159186951*^9, 3.7455421734009547`*^9}, 
   3.758855674782146*^9, 3.7588557707927513`*^9},
 CellLabel->
  "Out[508]=",ExpressionUUID->"dbd630bf-c3c1-4782-a8b1-292130f6b354"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Closure", "Subsubsection",
 CellChangeTimes->{{3.745538608869706*^9, 
  3.7455386097226067`*^9}},ExpressionUUID->"5a779892-8b91-42ac-8200-\
ee278aaf7374"],

Cell["\<\
Computes the closure (flat) of a set S in a matroid M, using Lemma 3.2
The input can instead be the circuits of M in place of M\
\>", "Text",
 CellChangeTimes->{{3.7455386233094745`*^9, 3.7455386430322666`*^9}, {
  3.745538946156379*^9, 3.745538960941655*^9}, {3.7455391831958275`*^9, 
  3.7455391894093847`*^9}, {3.788451704753933*^9, 
  3.78845170991304*^9}},ExpressionUUID->"98ac6eb6-f484-4fd7-a5cb-\
d1abe2ac647c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Closure", "[", 
   RowBox[{"S_", ",", "M_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"circuits", ",", "additionalElements", ",", "circuitExcess"}], 
     "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"If", " ", "M", " ", "represents", " ", "a", " ", "matroid"}], 
      ",", " ", 
      RowBox[{
       RowBox[{"take", " ", "its", " ", "circuits"}], ";", " ", "otherwise"}],
       ",", " ", 
      RowBox[{"assume", " ", "M", " ", "is", " ", "the", " ", "circuits"}]}], 
     "*)"}], "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{
       RowBox[{"Ex", ".", " ", "M"}], "=", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1", ",", "2"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "3"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"2", ",", "3"}], "}"}]}], "}"}]}], "}"}], " ", "-", " ", 
        RowBox[{
        "note", " ", "how", " ", "the", " ", "depth", " ", "of", " ", "E", 
         " ", "is", " ", "the", " ", "depth", " ", "of", " ", "B", " ", 
         "minus", " ", "1"}]}]}], ",", " ", 
      RowBox[{
      "telling", " ", "me", " ", "this", " ", "is", " ", "a", " ", 
       "matroid"}]}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"circuits", "=", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Length", "@", "M"}], "\[Equal]", "2"}], "\[And]", 
         RowBox[{
          RowBox[{"Differences", "[", 
           RowBox[{"Depth", "/@", "M"}], "]"}], "\[Equal]", 
          RowBox[{"{", "1", "}"}]}]}], ",", 
        RowBox[{"Circuits", "[", "M", "]"}], ",", "M"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"For", " ", "each", " ", "circuit"}], ",", " ", 
       RowBox[{
       "finds", " ", "if", " ", "it", " ", "indicates", " ", "an", " ", 
        "element", " ", "to", " ", "add", " ", "to", " ", "the", " ", 
        "closure", " ", "of", " ", "S"}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"i", ".", "e", ".", " ", "if"}], " ", "a", " ", "single", " ", 
       "element", " ", "of", " ", "the", " ", "circuit", " ", "lies", " ", 
       "outside", " ", "of", " ", "S"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"additionalElements", "=", 
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"circuitExcess", "=", 
          RowBox[{"Complement", "[", 
           RowBox[{"circuit", ",", "S"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "@", "circuitExcess"}], "\[Equal]", "1"}], ",", 
           RowBox[{"First", "@", "circuitExcess"}], ",", "Nothing"}], "]"}]}],
         "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"circuit", ",", "circuits"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Add", " ", "the", " ", "indicated", " ", "elements", " ", "onto", " ", 
       "S", " ", "to", " ", "form", " ", "its", " ", "closure"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"Union", "[", 
      RowBox[{"S", ",", "additionalElements"}], "]"}]}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.745538610463129*^9, 3.7455386213428793`*^9}, {
  3.7455386519045477`*^9, 3.745538689756729*^9}, {3.7455387201021814`*^9, 
  3.745538720726858*^9}, {3.745538794615356*^9, 3.745538884655122*^9}, {
  3.7455389407309875`*^9, 3.7455390035578046`*^9}, {3.745539762717776*^9, 
  3.7455398405798283`*^9}, {3.7884517999780035`*^9, 3.7884518217355475`*^9}, {
  3.788451877852584*^9, 3.7884518891750617`*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"b4f638d2-4365-4fd7-b4aa-6837861515ed"]
}, Closed]],

Cell[CellGroupData[{

Cell["Flats", "Subsubsection",
 CellChangeTimes->{{3.745538355068671*^9, 3.7455383571781273`*^9}, {
  3.745538473476963*^9, 
  3.745538474004549*^9}},ExpressionUUID->"6eeeb549-ab0e-4dd6-946c-\
2c6157c954c9"],

Cell[TextData[{
 "Gives the flats of a matroid\n",
 StyleBox["Improvements:",
  FontWeight->"Bold"],
 " This is a computationally terrible implementation. The program lists all \
subsets of E and then one-by-one compares them to their closures to see if \
they are flats. So the complexity is [size of E]*[number of circuits in M]. \
As some ideas,\n\tMaybe when ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"[", 
     RowBox[{"size", " ", "S"}], "]"}], "\[GreaterEqual]", 
    RowBox[{"Rank", "[", "M", "]"}]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "23f9512f-f273-4c1a-935e-5e742b9000e0"],
 " then the closure of S is E. So we only need to bother computing closures \
for subsets with size smaller than Rank[M].\n\tOr, could compute flats as \
intersections of hyperplanes"
}], "Text",
 CellChangeTimes->{{3.745538476542285*^9, 3.7455384797561803`*^9}, {
  3.7455390864031706`*^9, 3.7455391550486555`*^9}, {3.7455424122978554`*^9, 
  3.7455424209660926`*^9}, {3.758856051507516*^9, 3.7588560810001993`*^9}, {
  3.788451906809132*^9, 3.7884519207247286`*^9}, {3.788451955324744*^9, 
  3.7884520617397933`*^9}, {3.7884521759462185`*^9, 
  3.788452267437875*^9}},ExpressionUUID->"4c05c517-d3fe-4479-bf9c-\
0f40681ce7fb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Flats", "[", "M_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"E", ",", "circuits", ",", "subsets", ",", "flats"}], "}"}], ",",
     "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"E", "=", 
      RowBox[{"First", "[", "M", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"circuits", "=", 
      RowBox[{"Circuits", "[", "M", "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"subsets", "=", 
      RowBox[{"Subsets", "[", "E", "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"flats", "=", 
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Closure", "[", 
            RowBox[{"S", ",", "circuits"}], "]"}], "\[Equal]", "S"}], ",", 
          "S", ",", "Nothing"}], "]"}], "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"S", ",", "subsets"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Sort", "@", "flats"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.745540879023398*^9, 3.7455409365334797`*^9}, {
   3.745540982803315*^9, 3.7455410307351637`*^9}, {3.745541075125836*^9, 
   3.745541176379613*^9}, 3.7455414792233047`*^9, {3.745542963276925*^9, 
   3.7455429693489184`*^9}, {3.758855856102285*^9, 3.758855856220926*^9}, {
   3.758855945867481*^9, 3.7588559469650345`*^9}, {3.758856032920993*^9, 
   3.7588560451101*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"aaf8de76-fcd7-471e-ac4d-ff279794bbda"]
}, Closed]],

Cell[CellGroupData[{

Cell["FlatsCongruences", "Subsubsection",
 CellChangeTimes->{{3.7588536270520678`*^9, 
  3.7588536289350452`*^9}},ExpressionUUID->"1c503e35-3215-4317-862c-\
b990a6fb6cac"],

Cell[TextData[{
 "Finds the congruence classes of subsets of E\nThe representatives of the \
classes are the flats of the matroid\nVery similar to Flats[] above\n",
 StyleBox["Improvements: ",
  FontWeight->"Bold"],
 "this suffers from the same issues as Flats[]"
}], "Text",
 CellChangeTimes->{{3.7588536312587404`*^9, 3.7588536349675603`*^9}, {
  3.7588536662998905`*^9, 3.758853722391698*^9}, {3.7884521555407286`*^9, 
  3.7884521693174186`*^9}},ExpressionUUID->"bf696ea3-3b8d-4bc2-bdd0-\
043a2ae470c7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"FlatsCongruences", "[", "M_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"E", ",", "circuits", ",", "subsets", ",", "closures"}], "}"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"E", "=", 
      RowBox[{"First", "[", "M", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"circuits", "=", 
      RowBox[{"Circuits", "[", "M", "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"subsets", "=", 
      RowBox[{"Subsets", "[", "E", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"closures", "=", 
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"S", "\[Rule]", 
         RowBox[{"Closure", "[", 
          RowBox[{"S", ",", "circuits"}], "]"}]}], "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"S", ",", "subsets"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"\"\<Invert\>\"", " ", "the", " ", "association"}], ",", " ", 
       RowBox[{
       "so", " ", "flats", " ", "map", " ", "to", " ", "their", " ", 
        "congruence", " ", "classes"}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"GroupBy", "[", 
      RowBox[{"closures", ",", 
       RowBox[{"Last", "\[Rule]", "First"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7588537261921563`*^9, 3.7588537600162306`*^9}, {
  3.7588539247984304`*^9, 3.7588539770150084`*^9}, {3.7588540248137608`*^9, 
  3.758854293161725*^9}, {3.7588544803021507`*^9, 3.758854526196365*^9}, {
  3.758854655911641*^9, 3.7588546579481974`*^9}, {3.758856088940773*^9, 
  3.7588561296937876`*^9}, {3.788452151359426*^9, 3.788452151737447*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"89f1822b-6a1c-4822-afc5-61f54d0c8887"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FlatsCongruences", "[", 
  RowBox[{"UniformMatroid", "[", 
   RowBox[{"2", ",", "4"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.758853950845847*^9, 3.7588539608806124`*^9}},
 CellLabel->
  "In[521]:=",ExpressionUUID->"d8bc09c8-52b4-4bec-af3e-f8cb09e1583f"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{
    RowBox[{"{", "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"{", "}"}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", "1", "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"{", "1", "}"}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", "2", "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"{", "2", "}"}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", "3", "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"{", "3", "}"}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", "4", "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"{", "4", "}"}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3", ",", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2", ",", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "3", ",", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "3", ",", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}]}], "}"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.7588542723745794`*^9, 3.7588542962519307`*^9}, 
   3.7588544970791597`*^9, 3.7588561560550404`*^9},
 CellLabel->
  "Out[521]=",ExpressionUUID->"9fff4229-dcb7-4cef-89b5-cbff28e4958c"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Hyperplanes", "Subsubsection",
 CellChangeTimes->{{3.745542436247656*^9, 
  3.745542437429866*^9}},ExpressionUUID->"6f59d2b0-6820-413d-a68b-\
944ccd8ece8a"],

Cell["\<\
Finds the hyperplanes of a matroid, as the complements of cocircuits.\
\>", "Text",
 CellChangeTimes->{{3.745542491000998*^9, 3.74554249600218*^9}, {
  3.7464121096834364`*^9, 
  3.746412126561951*^9}},ExpressionUUID->"aed93edd-7252-4efd-85f0-\
0af26acb7548"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Hyperplanes", "[", "M_", "]"}], ":=", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"E", "=", 
      RowBox[{"First", "@", "M"}]}], "}"}], ",", 
    RowBox[{"Reverse", "@", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Complement", "[", 
        RowBox[{"E", ",", "K"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"K", ",", 
         RowBox[{"Cocircuits", "[", "M", "]"}]}], "}"}]}], "]"}]}]}], 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7455424402933955`*^9, 3.745542448036383*^9}, {
  3.7455425000550823`*^9, 3.7455425237577143`*^9}, {3.7455426019886894`*^9, 
  3.7455426232760286`*^9}, {3.745542804857253*^9, 3.7455428126573553`*^9}, {
  3.788452286646138*^9, 3.7884522875721965`*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"6b58bb34-350c-40fe-830d-bad09271982d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Hyperplanes", "[", 
  RowBox[{"UniformMatroid", "[", 
   RowBox[{"3", ",", "6"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7455426360527225`*^9, 3.7455426425022297`*^9}},
 CellLabel->"In[64]:=",ExpressionUUID->"d9b5bda6-0f42-4e6e-a021-6159fd739808"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "6"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7455426430607395`*^9, 3.7455428137266455`*^9, 
  3.7884522889955053`*^9},
 CellLabel->"Out[64]=",ExpressionUUID->"7853b4de-9aa0-49ed-9d11-407350a81e49"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Ground", "Subsubsection",
 CellChangeTimes->{{3.74641158647491*^9, 
  3.746411595849724*^9}},ExpressionUUID->"4ba03e18-d0a5-436d-a96c-\
4cbeacde6d41"],

Cell["Gives the ground set of a matroid", "Text",
 CellChangeTimes->{{3.7464116099957476`*^9, 
  3.746411615578719*^9}},ExpressionUUID->"41899824-cbb5-4a6d-b579-\
94e119babdbd"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Ground", "[", "M_", "]"}], ":=", 
  RowBox[{"First", "[", "M", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7464115897411594`*^9, 3.746411605321952*^9}, {
  3.7588104144565706`*^9, 3.7588104155660176`*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"b5d9765e-9c8d-4e1d-9eb0-6642f9d41273"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Misc", "Subsection",
 CellChangeTimes->{{3.745541556020725*^9, 
  3.745541556867241*^9}},ExpressionUUID->"0e49d156-9cad-44e6-b247-\
eea4ea1124c6"],

Cell[CellGroupData[{

Cell["Minimal", "Subsubsection",
 CellChangeTimes->{{3.741477588021076*^9, 
  3.7414775887868433`*^9}},ExpressionUUID->"ce89a681-6bbb-4d7e-9d9d-\
cce41a0a646c"],

Cell[TextData[{
 "Given a list of sets, finds the minimal sets by inclusion\nCode taken from ",
 ButtonBox["Mathematica Stack Exchange",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://mathematica.stackexchange.com/a/8160"], None},
  ButtonNote->"https://mathematica.stackexchange.com/a/8160"]
}], "Text",
 CellChangeTimes->{{3.7414775903568068`*^9, 3.741477618213939*^9}, {
  3.741477688226549*^9, 3.741477688228303*^9}, {3.7414777189600377`*^9, 
  3.7414777884033155`*^9}},ExpressionUUID->"eb1ca9ff-b470-4d52-a7a5-\
25378f3bfe4b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Minimal", "[", "sets_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"f", ",", "g", ",", 
      RowBox[{"op", "=", 
       RowBox[{
       "SystemOptions", "[", "\"\<DefinitionsReordering\>\"", "]"}]}]}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"g", "[", 
       RowBox[{"f", "[", "x__", "]"}], "]"}], ":=", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"f", "[", 
          RowBox[{"x", ",", "___"}], "]"}], "=", "1"}], ";", 
        RowBox[{"{", "x", "}"}]}], ")"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"g", "[", "1", "]"}], "=", 
      RowBox[{"Sequence", "[", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"SetAttributes", "[", 
      RowBox[{"f", ",", "Orderless"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"SetSystemOptions", "[", 
      RowBox[{"\"\<DefinitionsReordering\>\"", "\[Rule]", "\"\<None\>\""}], 
      "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"#", "&"}], "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"g", "[", 
          RowBox[{"f", "@@", "#"}], "]"}], "&"}], "/@", 
        RowBox[{"Sort", "@", "sets"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"SetSystemOptions", "[", "op", "]"}]}], "\[IndentingNewLine]", 
      "]"}]}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7414777471078043`*^9, 3.7414777515298085`*^9}, {
  3.74147792994637*^9, 3.7414780114473715`*^9}, {3.758816836528889*^9, 
  3.758816837299404*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"3e3e0e85-174a-4d5c-bedd-b7e0e21cf7bd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Minimal", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "5", ",", "6"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"2", ",", "1"}], "}"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.7588169394275937`*^9, 3.758816944118734*^9}, {
  3.7597590333984675`*^9, 3.759759044311598*^9}},
 CellLabel->
  "In[237]:=",ExpressionUUID->"1c53fcb9-7a58-4824-bc2e-8921ef30d1b5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "5", ",", "6"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.758816944606101*^9, {3.7597590297100267`*^9, 3.759759045099081*^9}, 
   3.7884580884689302`*^9},
 CellLabel->
  "Out[237]=",ExpressionUUID->"1ede5744-8f34-4e42-8cfb-81826e6947c0"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["LatticeOfFlats", "Subsubsection",
 CellChangeTimes->{{3.7455432228209248`*^9, 
  3.7455432257497377`*^9}},ExpressionUUID->"8dae4f3e-1b8c-4ccd-bcc5-\
7fe8718f9780"],

Cell["The lattice of flats of a matroid", "Text",
 CellChangeTimes->{{3.7455432284254236`*^9, 3.745543235507571*^9}, 
   3.7884575547300825`*^9},ExpressionUUID->"a4b12c0f-2cb2-4fb2-abb7-\
8fef1b04412c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"LatticeOfFlats", "[", "M_", "]"}], ":=", 
  RowBox[{"Lattice", "[", 
   RowBox[{"Flats", "[", "M", "]"}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7455432370887394`*^9, 3.7455432540748234`*^9}, {
   3.7455435829620667`*^9, 3.7455436720557804`*^9}, {3.745543704174177*^9, 
   3.745543763441372*^9}, {3.7455437960348744`*^9, 3.745543949497927*^9}, {
   3.7455443418174343`*^9, 3.745544357790205*^9}, {3.7455445265032754`*^9, 
   3.745544874764742*^9}, {3.745544920250046*^9, 3.745544962389347*^9}, {
   3.745544995867918*^9, 3.7455451394534345`*^9}, {3.7455451719688*^9, 
   3.745545403109106*^9}, {3.745545452363436*^9, 3.745545804219591*^9}, {
   3.7455458391991205`*^9, 3.7455458395740323`*^9}, {3.7455458840355606`*^9, 
   3.745545988762619*^9}, {3.745546031382925*^9, 3.7455461103593364`*^9}, {
   3.7455461621434417`*^9, 3.74554618372976*^9}, {3.7455462177939653`*^9, 
   3.7455462871411066`*^9}, 3.7475332415091662`*^9, {3.747533313462145*^9, 
   3.7475333280882344`*^9}, {3.747534079908192*^9, 3.747534084967831*^9}, {
   3.747534145788176*^9, 3.7475341491944637`*^9}, {3.7475342089461164`*^9, 
   3.7475342118818264`*^9}, {3.7588533921496835`*^9, 3.75885340072573*^9}, {
   3.7588561673545446`*^9, 3.7588561925259323`*^9}, {3.75885826127146*^9, 
   3.7588582619087873`*^9}, {3.7884566616236763`*^9, 3.788456670766979*^9}, {
   3.788457367108593*^9, 3.788457407320464*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"21e3b81e-25dd-4591-8687-73f2a504c453"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LatticeOfFlats", "@", 
  RowBox[{"UniformMatroid", "[", 
   RowBox[{"3", ",", "6"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.745543918137327*^9, 3.745543921158749*^9}, {
  3.7455443943377304`*^9, 3.745544475360901*^9}, {3.7455449731958723`*^9, 
  3.7455449784071064`*^9}, {3.7884569590787354`*^9, 3.7884569726019135`*^9}, {
  3.788457542970958*^9, 3.7884575476457644`*^9}},
 CellLabel->
  "In[181]:=",ExpressionUUID->"7c9a0a5c-f3f8-46e6-bd39-1eddf003c127"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{{}, {1}, {2}, {3}, {4}, {5}, {6}, {1, 2}, {1, 3}, {1, 4}, {1, 
       5}, {1, 6}, {2, 3}, {2, 4}, {2, 5}, {2, 6}, {3, 4}, {3, 5}, {3, 6}, {4,
        5}, {4, 6}, {5, 6}, {1, 2, 3, 4, 5, 6}}, {
       SparseArray[
       Automatic, {23, 23}, 0, {
        1, {{0, 0, 1, 2, 3, 4, 5, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 
          28, 30, 32, 34, 36, 51}, {{1}, {1}, {1}, {1}, {1}, {1}, {2}, {3}, {
          2}, {4}, {2}, {5}, {2}, {6}, {2}, {7}, {3}, {4}, {3}, {5}, {3}, {
          6}, {3}, {7}, {4}, {5}, {4}, {6}, {4}, {7}, {5}, {6}, {5}, {7}, {
          6}, {7}, {8}, {9}, {10}, {11}, {12}, {13}, {14}, {15}, {16}, {17}, {
          18}, {19}, {20}, {21}, {22}}}, Pattern}], Null}, {
      GraphLayout -> {"PackingLayout" -> "Layered"}, 
       VertexLabels -> {"Name"}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.013892470345538937`], 
        ArrowBox[{{-7., 1.}, {0., 0.}}, 0.07779783393501805], 
        ArrowBox[{{-4., 1.}, {0., 0.}}, 0.07779783393501805], 
        ArrowBox[{{-1., 1.}, {0., 0.}}, 0.07779783393501805], 
        ArrowBox[{{0., 1.}, {0., 0.}}, 0.07779783393501805], 
        ArrowBox[{{1., 1.}, {0., 0.}}, 0.07779783393501805], 
        ArrowBox[{{2., 1.}, {0., 0.}}, 0.07779783393501805], 
        ArrowBox[{{-9., 2.}, {-7., 1.}}, 0.07779783393501805], 
        ArrowBox[{{-9., 2.}, {-4., 1.}}, 0.07779783393501805], 
        ArrowBox[{{-8., 2.}, {-7., 1.}}, 0.07779783393501805], 
        ArrowBox[{{-8., 2.}, {-1., 1.}}, 0.07779783393501805], 
        ArrowBox[{{-7., 2.}, {-7., 1.}}, 0.07779783393501805], 
        ArrowBox[{{-7., 2.}, {0., 1.}}, 0.07779783393501805], 
        ArrowBox[{{-5., 2.}, {-7., 1.}}, 0.07779783393501805], 
        ArrowBox[{{-5., 2.}, {1., 1.}}, 0.07779783393501805], 
        ArrowBox[{{-3., 2.}, {-7., 1.}}, 0.07779783393501805], 
        ArrowBox[{{-3., 2.}, {2., 1.}}, 0.07779783393501805], 
        ArrowBox[{{-6., 2.}, {-4., 1.}}, 0.07779783393501805], 
        ArrowBox[{{-6., 2.}, {-1., 1.}}, 0.07779783393501805], 
        ArrowBox[{{-4., 2.}, {-4., 1.}}, 0.07779783393501805], 
        ArrowBox[{{-4., 2.}, {0., 1.}}, 0.07779783393501805], 
        ArrowBox[{{-2., 2.}, {-4., 1.}}, 0.07779783393501805], 
        ArrowBox[{{-2., 2.}, {1., 1.}}, 0.07779783393501805], 
        ArrowBox[{{0., 2.}, {-4., 1.}}, 0.07779783393501805], 
        ArrowBox[{{0., 2.}, {2., 1.}}, 0.07779783393501805], 
        ArrowBox[{{-1., 2.}, {-1., 1.}}, 0.07779783393501805], 
        ArrowBox[{{-1., 2.}, {0., 1.}}, 0.07779783393501805], 
        ArrowBox[{{1., 2.}, {-1., 1.}}, 0.07779783393501805], 
        ArrowBox[{{1., 2.}, {1., 1.}}, 0.07779783393501805], 
        ArrowBox[{{2., 2.}, {-1., 1.}}, 0.07779783393501805], 
        ArrowBox[{{2., 2.}, {2., 1.}}, 0.07779783393501805], 
        ArrowBox[{{3., 2.}, {0., 1.}}, 0.07779783393501805], 
        ArrowBox[{{3., 2.}, {1., 1.}}, 0.07779783393501805], 
        ArrowBox[{{4., 2.}, {0., 1.}}, 0.07779783393501805], 
        ArrowBox[{{4., 2.}, {2., 1.}}, 0.07779783393501805], 
        ArrowBox[{{5., 2.}, {1., 1.}}, 0.07779783393501805], 
        ArrowBox[{{5., 2.}, {2., 1.}}, 0.07779783393501805], 
        ArrowBox[{{-2., 3.}, {-9., 2.}}, 0.07779783393501805], 
        ArrowBox[{{-2., 3.}, {-8., 2.}}, 0.07779783393501805], 
        ArrowBox[{{-2., 3.}, {-7., 2.}}, 0.07779783393501805], 
        ArrowBox[{{-2., 3.}, {-5., 2.}}, 0.07779783393501805], 
        ArrowBox[{{-2., 3.}, {-3., 2.}}, 0.07779783393501805], 
        ArrowBox[{{-2., 3.}, {-6., 2.}}, 0.07779783393501805], 
        ArrowBox[{{-2., 3.}, {-4., 2.}}, 0.07779783393501805], 
        ArrowBox[{{-2., 3.}, {-2., 2.}}, 0.07779783393501805], 
        ArrowBox[{{-2., 3.}, {0., 2.}}, 0.07779783393501805], 
        ArrowBox[{{-2., 3.}, {-1., 2.}}, 0.07779783393501805], 
        ArrowBox[{{-2., 3.}, {1., 2.}}, 0.07779783393501805], 
        ArrowBox[{{-2., 3.}, {2., 2.}}, 0.07779783393501805], 
        ArrowBox[{{-2., 3.}, {3., 2.}}, 0.07779783393501805], 
        ArrowBox[{{-2., 3.}, {4., 2.}}, 0.07779783393501805], 
        ArrowBox[{{-2., 3.}, {5., 2.}}, 0.07779783393501805]}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {DiskBox[{0., 0.}, 0.07779783393501805], InsetBox[
          RowBox[{"{", "}"}], 
          Offset[{2, 2}, {0.07779783393501805, 0.07779783393501805}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{-7., 1.}, 0.07779783393501805], 
         InsetBox[
          RowBox[{"{", "1", "}"}], 
          Offset[{2, 2}, {-6.922202166064982, 1.077797833935018}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{-4., 1.}, 0.07779783393501805], 
         InsetBox[
          RowBox[{"{", "2", "}"}], 
          Offset[{2, 2}, {-3.9222021660649817, 1.077797833935018}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{-1., 1.}, 0.07779783393501805], 
         InsetBox[
          RowBox[{"{", "3", "}"}], 
          Offset[{2, 2}, {-0.922202166064982, 1.077797833935018}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{0., 1.}, 0.07779783393501805], 
         InsetBox[
          RowBox[{"{", "4", "}"}], 
          Offset[{2, 2}, {0.07779783393501805, 1.077797833935018}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{1., 1.}, 0.07779783393501805], 
         InsetBox[
          RowBox[{"{", "5", "}"}], 
          Offset[{2, 2}, {1.077797833935018, 1.077797833935018}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{2., 1.}, 0.07779783393501805], 
         InsetBox[
          RowBox[{"{", "6", "}"}], 
          Offset[{2, 2}, {2.0777978339350183, 1.077797833935018}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{-9., 2.}, 0.07779783393501805], 
         InsetBox[
          RowBox[{"{", 
           RowBox[{"1", ",", "2"}], "}"}], 
          Offset[{2, 2}, {-8.922202166064983, 2.0777978339350183}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{-8., 2.}, 0.07779783393501805], 
         InsetBox[
          RowBox[{"{", 
           RowBox[{"1", ",", "3"}], "}"}], 
          Offset[{2, 2}, {-7.922202166064982, 2.0777978339350183}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{-7., 2.}, 0.07779783393501805], 
         InsetBox[
          RowBox[{"{", 
           RowBox[{"1", ",", "4"}], "}"}], 
          Offset[{2, 2}, {-6.922202166064982, 2.0777978339350183}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{-5., 2.}, 0.07779783393501805], 
         InsetBox[
          RowBox[{"{", 
           RowBox[{"1", ",", "5"}], "}"}], 
          Offset[{2, 2}, {-4.922202166064982, 2.0777978339350183}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{-3., 2.}, 0.07779783393501805], 
         InsetBox[
          RowBox[{"{", 
           RowBox[{"1", ",", "6"}], "}"}], 
          Offset[{2, 2}, {-2.9222021660649817, 2.0777978339350183}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{-6., 2.}, 0.07779783393501805], 
         InsetBox[
          RowBox[{"{", 
           RowBox[{"2", ",", "3"}], "}"}], 
          Offset[{2, 2}, {-5.922202166064982, 2.0777978339350183}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{-4., 2.}, 0.07779783393501805], 
         InsetBox[
          RowBox[{"{", 
           RowBox[{"2", ",", "4"}], "}"}], 
          Offset[{2, 2}, {-3.9222021660649817, 2.0777978339350183}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{-2., 2.}, 0.07779783393501805], 
         InsetBox[
          RowBox[{"{", 
           RowBox[{"2", ",", "5"}], "}"}], 
          Offset[{2, 2}, {-1.922202166064982, 2.0777978339350183}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{0., 2.}, 0.07779783393501805], 
         InsetBox[
          RowBox[{"{", 
           RowBox[{"2", ",", "6"}], "}"}], 
          Offset[{2, 2}, {0.07779783393501805, 2.0777978339350183}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{-1., 2.}, 0.07779783393501805], 
         InsetBox[
          RowBox[{"{", 
           RowBox[{"3", ",", "4"}], "}"}], 
          Offset[{2, 2}, {-0.922202166064982, 2.0777978339350183}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{1., 2.}, 0.07779783393501805], 
         InsetBox[
          RowBox[{"{", 
           RowBox[{"3", ",", "5"}], "}"}], 
          Offset[{2, 2}, {1.077797833935018, 2.0777978339350183}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{2., 2.}, 0.07779783393501805], 
         InsetBox[
          RowBox[{"{", 
           RowBox[{"3", ",", "6"}], "}"}], 
          Offset[{2, 2}, {2.0777978339350183, 2.0777978339350183}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{3., 2.}, 0.07779783393501805], 
         InsetBox[
          RowBox[{"{", 
           RowBox[{"4", ",", "5"}], "}"}], 
          Offset[{2, 2}, {3.0777978339350183, 2.0777978339350183}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{4., 2.}, 0.07779783393501805], 
         InsetBox[
          RowBox[{"{", 
           RowBox[{"4", ",", "6"}], "}"}], 
          Offset[{2, 2}, {4.077797833935018, 2.0777978339350183}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{5., 2.}, 0.07779783393501805], 
         InsetBox[
          RowBox[{"{", 
           RowBox[{"5", ",", "6"}], "}"}], 
          Offset[{2, 2}, {5.077797833935018, 2.0777978339350183}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{-2., 3.}, 0.07779783393501805], 
         InsetBox[
          RowBox[{"{", 
           RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6"}], 
           "}"}], Offset[{2, 2}, {-1.922202166064982, 3.0777978339350183}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->{638., Automatic}]], "Output",
 CellChangeTimes->{3.788457547923027*^9},
 CellLabel->
  "Out[181]=",ExpressionUUID->"a7dc9253-6517-42ea-87c2-b516f07eec58"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["C3Q", "Subsubsection",
 CellChangeTimes->{{3.745255065396918*^9, 3.745255066459481*^9}, {
  3.745255110871484*^9, 
  3.7452551123355556`*^9}},ExpressionUUID->"8650cf72-47e0-4b4d-8266-\
1f6858bf7c08"],

Cell[TextData[{
 "Determines whether a collection of sets satisfies the C3 axiom for circuits\
\n\n(Note: from here on, C1, C2, and C3 will refer to sets)\n\n",
 StyleBox["Improvement:",
  FontWeight->"Bold"],
 " Considers all pairs of circuits C1 and C2. Is there a more efficient way?"
}], "Text",
 CellChangeTimes->{{3.7452550739249644`*^9, 3.7452551228327355`*^9}, {
  3.7452556433850937`*^9, 3.745255660710601*^9}, {3.7468416141074533`*^9, 
  3.746841637677602*^9}, {3.746842517129301*^9, 3.7468425237973323`*^9}, {
  3.746842583776662*^9, 3.746842650190432*^9}, {3.7884523445598173`*^9, 
  3.7884523543816*^9}},ExpressionUUID->"05987811-fca7-4789-a887-73c8bb60dc89"],

Cell[BoxData[
 RowBox[{
  RowBox[{"C3Q", "[", "circuits_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"C1", ",", "C2", ",", "union", ",", "possibleC3"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Catch", "[", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
       "Catches", " ", "the", " ", "result", " ", "of", " ", "the", " ", 
        "function"}], ",", " ", 
       RowBox[{
       "ie", " ", "whether", " ", "circuits", " ", "satisfies", " ", "the", 
        " ", "C3", " ", "axiom"}]}], "*)"}], "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"Do", "[", 
        RowBox[{"(*", 
         RowBox[{
         "Loops", " ", "over", " ", "possible", " ", "C1", " ", "and", " ", 
          "C2", " ", "sets"}], "*)"}], "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", "Preliminaries", "*)"}], "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"C1", "=", 
           RowBox[{"circuits", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"C2", "=", 
           RowBox[{"circuits", "[", 
            RowBox[{"[", "j", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"union", "=", 
           RowBox[{"Union", "[", 
            RowBox[{"C1", ",", "C2"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{
            "The", " ", "only", " ", "possibilities", " ", "for", " ", "the", 
             " ", "C3", " ", "circuit", " ", "are", " ", "those", " ", 
             "contained", " ", "in", " ", "C1"}], " ", "\[Union]", " ", 
            "C2"}], "*)"}], "\[IndentingNewLine]", 
          RowBox[{"possibleC3", "=", 
           RowBox[{"Select", "[", 
            RowBox[{"circuits", ",", 
             RowBox[{
              RowBox[{"SubsetQ", "[", 
               RowBox[{"union", ",", "#"}], "]"}], "&"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{
             RowBox[{"Check", " ", "if", " ", "for", " ", "each", " ", "x"}], 
             "\[Element]", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"C1", " ", "\[Intersection]", " ", "C2"}], ")"}], " ", 
              "there", " ", "is", " ", "an", " ", "element", " ", "of", " ", 
              "possibleC3", " ", "that", " ", "does", " ", "not", " ", 
              "contain", " ", "x"}]}], ";", " ", 
            RowBox[{
             RowBox[{"ie", ".", " ", "a"}], " ", "valid", " ", "choice", " ", 
             "for", " ", "the", " ", "C3", " ", "circuit"}]}], "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"Do", "[", "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"Catch", "[", 
              RowBox[{"(*", 
               RowBox[{
               "Allows", " ", "for", " ", "early", " ", "termination", " ", 
                "of", " ", "looking", " ", "for", " ", "said", " ", "C3"}], 
               "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"(*", 
               RowBox[{
                RowBox[{"Check", " ", "each", " ", "possible", " ", "C3"}], 
                ";", " ", 
                RowBox[{
                "we", " ", "are", " ", "interested", " ", "in", " ", "when", 
                 " ", "C3", " ", "does", " ", "not", " ", "contain", " ", 
                 "x"}]}], "*)"}], "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"Do", "[", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{"Not", "@", 
                    RowBox[{"MemberQ", "[", 
                    RowBox[{"C3", ",", "x"}], "]"}]}], ",", 
                    RowBox[{"Throw", "[", 
                    RowBox[{"True", ",", "\"\<x\>\""}], "]"}]}], 
                   RowBox[{"(*", 
                    RowBox[{
                    "Valid", " ", "C3", " ", "found", " ", "for", " ", "this",
                     " ", "x"}], "*)"}], "]"}], "\[IndentingNewLine]", ",", 
                  RowBox[{"{", 
                   RowBox[{"C3", ",", "possibleC3"}], "}"}]}], "]"}], ";", 
                "\[IndentingNewLine]", "\[IndentingNewLine]", 
                RowBox[{"(*", 
                 RowBox[{
                  RowBox[{
                  "If", " ", "you", " ", "made", " ", "it", " ", "here"}], 
                  ",", " ", 
                  RowBox[{
                  "no", " ", "valid", " ", "C3", " ", "was", " ", "found", 
                   " ", "for", " ", "this", " ", "x"}], ",", " ", 
                  RowBox[{"return", " ", "False"}]}], "*)"}], 
                "\[IndentingNewLine]", 
                RowBox[{"Throw", "[", 
                 RowBox[{"False", ",", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"Echo", "[", "\"\<Failed, for\>\"", "]"}], ";", 
                   "\[IndentingNewLine]", 
                   RowBox[{"Echo", "[", "C1", "]"}], ";", 
                   "\[IndentingNewLine]", 
                   RowBox[{"Echo", "[", "C2", "]"}], ";", 
                   "\[IndentingNewLine]", 
                   RowBox[{"Echo", "[", "x", "]"}], ";", 
                   "\[IndentingNewLine]", "\"\<r\>\""}]}], "]"}], ";"}], 
               "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
               "\"\<x\>\""}], "]"}], ";"}], "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{"If", " ", "you", " ", "made", " ", "it", " ", "here"}],
               ",", " ", 
              RowBox[{
              "a", " ", "valid", " ", "C3", " ", "was", " ", "found", " ", 
               "for", " ", "this", " ", "x"}]}], "*)"}], 
            "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", 
              RowBox[{"Intersection", "[", 
               RowBox[{"C1", ",", "C2"}], "]"}]}], "}"}]}], "]"}], ";"}], 
         "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"If", " ", "you", " ", "made", " ", "it", " ", "here"}], 
           ",", " ", 
           RowBox[{
           "a", " ", "valid", " ", "C3", " ", "was", " ", "found", " ", "for",
             " ", "all", " ", 
            RowBox[{"x", "'"}], "s"}]}], "*)"}], "\[IndentingNewLine]", 
         "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "@", "circuits"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", 
           RowBox[{"i", "+", "1"}], ",", 
           RowBox[{"Length", "@", "circuits"}]}], "}"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"If", " ", "you", " ", "made", " ", "it", " ", "here"}], ",",
          " ", 
         RowBox[{
         "a", " ", "valid", " ", "C3", " ", "was", " ", "found", " ", "for", 
          " ", "all", " ", 
          RowBox[{"x", "'"}], "s", " ", "over", " ", "all", " ", "C1", " ", 
          "and", " ", "C2"}]}], "*)"}], "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Return", " ", "True", " ", "as", " ", "the", " ", "value", " ", "of",
          " ", "the", " ", "function"}], "*)"}], "\[IndentingNewLine]", 
       "True"}], "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
      "\"\<r\>\""}], "]"}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.74525513209699*^9, 3.745255144663006*^9}, {
   3.745255420224603*^9, 3.7452554621099143`*^9}, 3.745255617057623*^9, {
   3.7452556670509224`*^9, 3.7452558306312175`*^9}, {3.7452784387888927`*^9, 
   3.745278600416834*^9}, {3.745278631380642*^9, 3.7452790494556313`*^9}, {
   3.745279082480271*^9, 3.7452792454522176`*^9}, {3.7453668806959853`*^9, 
   3.745366937374777*^9}, {3.7468425658172417`*^9, 3.746842576302109*^9}, {
   3.7468426624966087`*^9, 3.746842663478301*^9}, {3.7558925628927937`*^9, 
   3.755892563523954*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"00af4550-07f3-44de-9ca7-6767071c6f68"]
}, Closed]],

Cell[CellGroupData[{

Cell["B3Q", "Subsubsection",
 CellChangeTimes->{{3.745255065396918*^9, 3.745255066459481*^9}, {
  3.745255110871484*^9, 3.7452551123355556`*^9}, {3.755889972142126*^9, 
  3.755889972427393*^9}},ExpressionUUID->"de160a69-fd2e-4921-a916-\
a9f4482d4d47"],

Cell[TextData[{
 "Determines whether a collection of sets satisfies the B3 axiom for bases\n\n\
(Note: from here on, B1, B2, and B3 will refer to sets)\nB3 is what we \
hope/expect the B1-x+y set to be\n\n",
 StyleBox["Improvement:",
  FontWeight->"Bold"],
 " Considers all pairs of bases B1 and B2. Is there a more efficient way? \
PluckerQ[] does some other algorithm for checking if something is a Plucker \
vector, which should be equivalent to this one."
}], "Text",
 CellChangeTimes->{{3.7452550739249644`*^9, 3.7452551228327355`*^9}, {
  3.7452556433850937`*^9, 3.745255660710601*^9}, {3.7468416141074533`*^9, 
  3.746841637677602*^9}, {3.746842517129301*^9, 3.7468425237973323`*^9}, {
  3.746842583776662*^9, 3.746842650190432*^9}, {3.75588997464072*^9, 
  3.755890000427993*^9}, {3.7558909254901567`*^9, 3.755890939871379*^9}, {
  3.788452451939109*^9, 3.788452464474408*^9}, {3.788452769879201*^9, 
  3.788452794741006*^9}},ExpressionUUID->"c68bb588-f5dd-494f-8f83-\
25d752d9b34f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"B3Q", "[", "bases_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "B1", ",", "B2", ",", "B3", ",", "B1sansB2", ",", "swaps", ",", "X", ",",
       "x", ",", "y"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Catch", "[", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
       "Catches", " ", "the", " ", "result", " ", "of", " ", "the", " ", 
        "function"}], ",", " ", 
       RowBox[{
       "ie", " ", "whether", " ", "circuits", " ", "satisfies", " ", "the", 
        " ", "C3", " ", "axiom"}]}], "*)"}], "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Do", "[", 
       RowBox[{"(*", 
        RowBox[{
        "Loops", " ", "over", " ", "possible", " ", "B1", " ", "and", " ", 
         "B2", " ", "sets"}], "*)"}], "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", "Preliminaries", "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"i", "\[Equal]", "j"}], ",", 
           RowBox[{"Continue", "[", "]"}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"B1", "=", 
          RowBox[{"bases", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"B2", "=", 
          RowBox[{"bases", "[", 
           RowBox[{"[", "j", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"B1sansB2", "=", 
          RowBox[{"Complement", "[", 
           RowBox[{"B1", ",", "B2"}], "]"}]}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"Keeps", " ", "track", " ", "of", " ", "which", " ", "x"}],
            "\[Element]", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"B1", "-", "B2"}], ")"}], " ", "weve", " ", "found", " ",
             "successful", " ", "swaps", " ", "for"}]}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"swaps", "=", 
          RowBox[{"AssociationThread", "[", 
           RowBox[{"B1sansB2", ",", "False"}], "]"}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{
           "Loop", " ", "over", " ", "all", " ", "the", " ", "bases"}], ",", 
           " ", 
           RowBox[{
            RowBox[{
            "seeing", " ", "if", " ", "we", " ", "find", " ", "a", " ", 
             "swap", " ", "for", " ", "each", " ", "x"}], "\[Element]", 
            RowBox[{"(", 
             RowBox[{"B1", "-", "B2"}], ")"}]}]}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{
           "If", " ", "at", " ", "any", " ", "point", " ", "we", " ", 
            "realize", " ", "this", " ", "is", " ", "not", " ", "a", " ", 
            "valid", " ", "x"}], ",", " ", 
           RowBox[{"y", " ", "swap"}], ",", " ", 
           RowBox[{
            RowBox[{"Continue", "[", "]"}], " ", "the", " ", "loop"}]}], 
          "*)"}], "\[IndentingNewLine]", 
         RowBox[{"Do", "[", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{"First", ",", " ", 
            RowBox[{
            "check", " ", "if", " ", "B3", " ", "can", " ", "be", " ", 
             "obtained", " ", "from", " ", "B1", " ", "with", " ", "a", " ", 
             "single", " ", "swap"}]}], "*)"}], "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
           "X", " ", "are", " ", "the", " ", "elements", " ", "dropped"}], 
           "*)"}], "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
           "x", " ", "is", " ", "the", " ", "single", " ", "element", " ", 
            "dropped"}], "*)"}], "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"X", "=", 
             RowBox[{"Complement", "[", 
              RowBox[{"B1", ",", "B3"}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Length", "[", "X", "]"}], "\[NotEqual]", "1"}], ",", 
              RowBox[{"Continue", "[", "]"}]}], "]"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"x", "=", 
             RowBox[{"X", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{
              "If", " ", "we", " ", "already", " ", "verified", " ", "a", " ",
                "swap", " ", "for", " ", "this", " ", "x"}], ",", " ", 
              RowBox[{"keep", " ", "looping"}]}], "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"swaps", "[", "x", "]"}], "\[Equal]", "True"}], ",", 
              RowBox[{"Continue", "[", "]"}]}], "]"}], ";", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{
              "If", " ", "the", " ", "element", " ", "we", " ", "have", " ", 
               "to", " ", "drop", " ", "is", " ", "in", " ", "B2"}], ",", " ", 
              RowBox[{
               RowBox[{"it", " ", "is", " ", "not", " ", "an", " ", "x"}], 
               "\[Element]", 
               RowBox[{"(", 
                RowBox[{"B1", "-", "B2"}], ")"}]}]}], "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"MemberQ", "[", 
               RowBox[{"B2", ",", "x"}], "]"}], ",", 
              RowBox[{"Continue", "[", "]"}]}], "]"}], ";", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{
              "Find", " ", "the", " ", "y", " ", "we", " ", "have", " ", "to",
                " ", "add", " ", "so", " ", "that", " ", "B3"}], " ", "=", 
              " ", 
              RowBox[{"B1", "-", "x", "+", "y"}]}], "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{"y", "=", 
             RowBox[{
              RowBox[{"Complement", "[", 
               RowBox[{"B3", ",", "B1"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{
              "Check", " ", "this", " ", "y", " ", "is", " ", "valid"}], ",", 
              " ", 
              RowBox[{
               RowBox[{"ie", ".", " ", "y"}], "\[Element]", 
               RowBox[{"(", 
                RowBox[{"B2", "-", "B1"}], ")"}]}]}], "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"x", "\[NotEqual]", "y"}], "\[And]", 
               RowBox[{"MemberQ", "[", 
                RowBox[{"B2", ",", "y"}], "]"}]}], ",", "\[IndentingNewLine]", 
              RowBox[{"(*", 
               RowBox[{
                RowBox[{"It", " ", "is", " ", "valid"}], ",", " ", 
                RowBox[{"so", " ", "we", " ", "document", " ", "it"}]}], 
               "*)"}], "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"swaps", "[", "x", "]"}], "=", "True"}], ";"}]}], 
             "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
           "\[IndentingNewLine]", ",", 
           RowBox[{"{", 
            RowBox[{"B3", ",", "bases"}], "}"}]}], "]"}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{
           "If", " ", "any", " ", "of", " ", "the", " ", "possible", " ", "x",
             " ", "didnt", " ", "have", " ", "swaps"}], ",", " ", 
           RowBox[{"we", " ", "have", " ", "failed"}]}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"Not", "[", 
            RowBox[{"And", "@@", "swaps"}], "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Echo", "[", "\"\<Failed, for\>\"", "]"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"x", "=", 
             RowBox[{
              RowBox[{"Position", "[", 
               RowBox[{"swaps", ",", "False"}], "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "1", ",", "1"}], "]"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"Echo", "[", "B1", "]"}], ";", "\[IndentingNewLine]", 
            RowBox[{"Echo", "[", "B2", "]"}], ";", "\[IndentingNewLine]", 
            RowBox[{"Echo", "[", "x", "]"}], ";", "\[IndentingNewLine]", 
            RowBox[{"Throw", "[", "False", "]"}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
        "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "bases", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", 
          RowBox[{"Length", "[", "bases", "]"}]}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"If", " ", "you", " ", "got", " ", "here"}], ",", " ", 
        RowBox[{
        "there", " ", "were", " ", "valid", " ", "swaps", " ", "for", " ", 
         "all", " ", "x", " ", "for", " ", "all", " ", "B1", " ", "and", " ", 
         "B2"}]}], "*)"}], "\[IndentingNewLine]", "True"}], 
     "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.74525513209699*^9, 3.745255144663006*^9}, {
   3.745255420224603*^9, 3.7452554621099143`*^9}, 3.745255617057623*^9, {
   3.7452556670509224`*^9, 3.7452558306312175`*^9}, {3.7452784387888927`*^9, 
   3.745278600416834*^9}, {3.745278631380642*^9, 3.7452790494556313`*^9}, {
   3.745279082480271*^9, 3.7452792454522176`*^9}, {3.7453668806959853`*^9, 
   3.745366937374777*^9}, {3.7468425658172417`*^9, 3.746842576302109*^9}, {
   3.7468426624966087`*^9, 3.746842663478301*^9}, {3.7558899668424287`*^9, 
   3.7558899683840446`*^9}, {3.7558900076657047`*^9, 
   3.7558900561720695`*^9}, {3.7558901429038873`*^9, 
   3.7558902554580803`*^9}, {3.755890322018888*^9, 3.7558903263321505`*^9}, {
   3.755890378405761*^9, 3.755890448820526*^9}, {3.7558905307968884`*^9, 
   3.7558907505885944`*^9}, {3.755890796723855*^9, 3.7558909182750125`*^9}, {
   3.7558909551139154`*^9, 3.755890968128868*^9}, {3.7558910012911954`*^9, 
   3.755891034078843*^9}, {3.7558911023826427`*^9, 3.7558911257064214`*^9}, {
   3.7558912147762837`*^9, 3.7558914673053837`*^9}, {3.755891515997534*^9, 
   3.755891943270869*^9}, {3.755892053896494*^9, 3.7558921014410276`*^9}, {
   3.755892160290514*^9, 3.7558921821041594`*^9}, {3.755892213177122*^9, 
   3.7558923035488234`*^9}, {3.755892342311263*^9, 3.755892423252942*^9}, {
   3.7558924539999623`*^9, 3.755892471041197*^9}, {3.7558925085288286`*^9, 
   3.755892555218919*^9}, {3.755893477148937*^9, 3.755893529800477*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"43f512a3-3170-41c4-b57e-52786223387a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"M", "=", 
   RowBox[{"UniformMatroid", "[", 
    RowBox[{"3", ",", "6"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"B", "=", 
  RowBox[{"M", "[", 
   RowBox[{"[", "2", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"B3Q", "[", "B", "]"}]}], "Input",
 CellChangeTimes->{3.755893679341955*^9},
 CellLabel->"In[66]:=",ExpressionUUID->"7c6d6ec0-6eba-494a-a5ae-0f693c7c8d9c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "4", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "4", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "5", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "4", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "4", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "5", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "5", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "5", ",", "6"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7558936798733807`*^9},
 CellLabel->"Out[67]=",ExpressionUUID->"7b1ac391-891e-4128-85c7-8c471eda19e7"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.755893679920535*^9},
 CellLabel->"Out[68]=",ExpressionUUID->"62aae3e4-6967-4554-843c-6d3e32136120"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"M", "=", 
   RowBox[{"UniformMatroid", "[", 
    RowBox[{"3", ",", "6"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"B", "=", 
  RowBox[{"M", "[", 
   RowBox[{"[", 
    RowBox[{"2", ",", 
     RowBox[{"1", ";;", 
      RowBox[{"-", "3"}]}]}], "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"B3Q", "[", "B", "]"}]}], "Input",
 CellChangeTimes->{{3.7558935389214993`*^9, 3.7558936616807847`*^9}},
 CellLabel->"In[63]:=",ExpressionUUID->"8cc8fbec-d3ee-41ca-bf0e-7553b46e855d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "4", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "4", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "5", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "4", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "4", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "5", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4", ",", "6"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7558935490795493`*^9, 3.755893662300663*^9}},
 CellLabel->"Out[64]=",ExpressionUUID->"79c1bc7f-02de-4ef5-b07e-1cd5a4e96ba8"],

Cell[CellGroupData[{

Cell[BoxData["\<\"Failed, for\"\>"], "Echo",
 CellChangeTimes->{
  3.7558936623213797`*^9},ExpressionUUID->"3509aa43-4287-451c-b252-\
19dfaf220fd5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "5", ",", "6"}], "}"}]], "Echo",
 CellChangeTimes->{
  3.7558936623499107`*^9},ExpressionUUID->"b9193680-c998-4234-b333-\
79e790f9cb7b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3", ",", "4", ",", "5"}], "}"}]], "Echo",
 CellChangeTimes->{
  3.7558936623936663`*^9},ExpressionUUID->"28146c61-368a-430e-a995-\
6eff858ed234"],

Cell[BoxData["1"], "Echo",
 CellChangeTimes->{
  3.7558936624237657`*^9},ExpressionUUID->"c98d7719-5927-4b87-abd6-\
217133d4c6ce"]
}, Open  ]],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{{3.7558935490795493`*^9, 3.7558936624615974`*^9}},
 CellLabel->"Out[65]=",ExpressionUUID->"fe9648db-63f6-4c22-9a37-ee7d995655fc"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["FQ", "Subsubsection",
 CellChangeTimes->{{3.761884637000235*^9, 
  3.761884637683408*^9}},ExpressionUUID->"2a21fabd-729f-42cb-bac6-\
bb76f24c93fd"],

Cell["Checks the flat axioms", "Text",
 CellChangeTimes->{{3.7618846392496753`*^9, 
  3.761884644610241*^9}},ExpressionUUID->"85c91f1f-f1ff-4d87-8796-\
c24956d217cb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"FQ", "[", 
   RowBox[{"E_", ",", "Flats_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "n", ",", "F1", ",", "F2", ",", "containers", ",", "coverers", ",", 
      "partition", ",", "counts"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Catch", "[", "\[IndentingNewLine]", 
     RowBox[{"(*", "F1", "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"Not", "@", 
         RowBox[{"MemberQ", "[", 
          RowBox[{"Flats", ",", "E"}], "]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Echo", "[", "\"\<Failed F1\>\"", "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Throw", "[", "False", "]"}]}]}], "\[IndentingNewLine]", 
       "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", "F2", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Do", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"Not", "@", 
           RowBox[{"MemberQ", "[", 
            RowBox[{"Flats", ",", 
             RowBox[{"Intersection", "@@", "pair"}]}], "]"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Echo", "[", "\"\<Failed F2 for\>\"", "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"Echo", "[", 
            RowBox[{
             RowBox[{"pair", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             "\"\<\!\(\*SubscriptBox[\(F\), \(1\)]\)\>\""}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"Echo", "[", 
            RowBox[{
             RowBox[{"pair", "[", 
              RowBox[{"[", "2", "]"}], "]"}], ",", 
             "\"\<\!\(\*SubscriptBox[\(F\), \(2\)]\)\>\""}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"Throw", "[", "False", "]"}]}]}], "\[IndentingNewLine]", 
         "]"}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"pair", ",", 
          RowBox[{"Subsets", "[", 
           RowBox[{"Flats", ",", 
            RowBox[{"{", "2", "}"}]}], "]"}]}], "}"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", "F3", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "Maybe", " ", "revise", " ", "this", " ", "to", " ", "do", " ", "some",
         " ", "fancy", " ", "Orderless", " ", "thing", " ", "like", " ", "in",
         " ", 
        RowBox[{"Minimal", "[", "]"}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"n", "=", 
       RowBox[{"Length", "[", "E", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Do", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"containers", "=", 
          RowBox[{"Select", "[", 
           RowBox[{"Flats", ",", 
            RowBox[{
             RowBox[{"SubsetQ", "[", 
              RowBox[{"#", ",", "F"}], "]"}], "&"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"coverers", "=", 
          RowBox[{"Minimal", "[", 
           RowBox[{"Complement", "[", 
            RowBox[{"containers", ",", 
             RowBox[{"{", "F", "}"}]}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"partition", "=", 
          RowBox[{
           RowBox[{
            RowBox[{"Complement", "[", 
             RowBox[{"#", ",", "F"}], "]"}], "&"}], "/@", "coverers"}]}], ";",
          "\[IndentingNewLine]", 
         RowBox[{"counts", "=", 
          RowBox[{
           RowBox[{"Tally", "[", 
            RowBox[{"Join", "@@", "partition"}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "2"}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", "counts", "]"}], "+", 
             RowBox[{"Length", "[", "F", "]"}]}], "\[NotEqual]", "n"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Echo", "[", "\"\<Failed F3 for\>\"", "]"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"Echo", "[", 
             RowBox[{"F", ",", "\"\<F\>\""}], "]"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{
            "Echo", "[", 
             "\"\<Union of \!\(\*SubscriptBox[\(F\), \(i\)]\)-F is not \
E-F\>\"", "]"}], ";", "\[IndentingNewLine]", 
            RowBox[{"Throw", "[", "False", "]"}]}]}], "\[IndentingNewLine]", 
          "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"Not", "@", 
            RowBox[{"AllTrue", "[", 
             RowBox[{"counts", ",", 
              RowBox[{
               RowBox[{"#", "\[Equal]", "1"}], "&"}]}], "]"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Echo", "[", "\"\<Failed F3 for\>\"", "]"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"Echo", "[", 
             RowBox[{"F", ",", "\"\<F\>\""}], "]"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{
            "Echo", "[", 
             "\"\<\!\(\*SubscriptBox[\(F\), \(i\)]\)-F have overlaps\>\"", 
             "]"}], ";", "\[IndentingNewLine]", 
            RowBox[{"Throw", "[", "False", "]"}]}]}], "\[IndentingNewLine]", 
          "]"}]}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"F", ",", "Flats"}], "}"}]}], "\[IndentingNewLine]", "]"}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Throw", "[", "True", "]"}]}], "\[IndentingNewLine]", "]"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.76188470643027*^9, 3.7618850189060106`*^9}, {
  3.761885117820362*^9, 3.7618852143942337`*^9}, {3.7618852752952776`*^9, 
  3.761885278566464*^9}, {3.7618853090271535`*^9, 3.7618853809843416`*^9}, {
  3.761885443556066*^9, 3.761885609524954*^9}, {3.761885658653739*^9, 
  3.761885713387104*^9}, {3.76188575487928*^9, 3.7618857632482967`*^9}, {
  3.7618857937414136`*^9, 3.761885901743614*^9}, {3.761885943257125*^9, 
  3.761886156847532*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"c966453e-e727-4e56-868a-f07958b28d96"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"classes", "=", 
   RowBox[{"WedgeCongruences", "[", 
    RowBox[{
     RowBox[{"UniformMatroid", "[", 
      RowBox[{"3", ",", "4"}], "]"}], ",", "2"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7625465987076254`*^9, 3.762546618049379*^9}},
 CellLabel->"In[66]:=",ExpressionUUID->"ed091d0b-fc1b-45d4-8dfd-0667397b23ca"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Trivial and bend\"\>",
   "EchoLabel"], " ", "0``7.451544993495973"}]], "Echo",
 CellChangeTimes->{
  3.7625466188161197`*^9},ExpressionUUID->"e4572d51-48b1-4ce0-ac93-\
ecd834a03dcd"],

Cell[BoxData["\<\"\"\>"], "Print",
 CellChangeTimes->{3.7625466188773484`*^9},
 CellLabel->
  "During evaluation of \
In[66]:=",ExpressionUUID->"67305575-5833-434c-8976-929a34f096de"],

Cell[BoxData["\<\"\"\>"], "Print",
 CellChangeTimes->{3.7625466189852724`*^9},
 CellLabel->
  "During evaluation of \
In[66]:=",ExpressionUUID->"dec2d774-a97c-4e64-b5d9-a78d26ffd6a8"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Remaining set\"\>",
   "EchoLabel"], " ", "0.1832675`6.714630449063201"}]], "Echo",
 CellChangeTimes->{
  3.7625466189905767`*^9},ExpressionUUID->"58eac369-50f1-4dde-8824-\
f6c1d9759f97"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Ground set size\"\>",
   "EchoLabel"], " ", "6"}]], "Echo",
 CellChangeTimes->{
  3.7625466190245624`*^9},ExpressionUUID->"13974e0f-2800-4e0f-86a4-\
9d4fccc3080c"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Number of subsets\"\>",
   "EchoLabel"], " ", "64"}]], "Echo",
 CellChangeTimes->{
  3.7625466190783668`*^9},ExpressionUUID->"bf01442f-bf7c-4c60-be5b-\
3a684640e626"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Number of pairs\"\>",
   "EchoLabel"], " ", "2016"}]], "Echo",
 CellChangeTimes->{
  3.762546619130503*^9},ExpressionUUID->"1914f2a5-b2bc-4781-a652-\
6f0cb4497497"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Iterations needed\"\>",
   "EchoLabel"], " ", "2295"}]], "Echo",
 CellChangeTimes->{
  3.7625466192051735`*^9},ExpressionUUID->"65dd6653-f30f-4403-9dd7-\
f037189d80d4"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Avg time per iteration\"\>",
   "EchoLabel"], " ", "0.000079855119825708`3."}]], "Echo",
 CellChangeTimes->{
  3.762546619260879*^9},ExpressionUUID->"978e7bcd-091f-4444-942c-\
d3bd34ee3ad7"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Loops done\"\>",
   "EchoLabel"], " ", "1.1383928571428572`"}]], "Echo",
 CellChangeTimes->{
  3.7625466193326693`*^9},ExpressionUUID->"8497ba6c-a698-4c02-a79b-\
61ae68d92f22"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Changes done each loop\"\>",
   "EchoLabel"], " ", 
  RowBox[{"{", 
   RowBox[{"34", ",", "0"}], "}"}]}]], "Echo",
 CellChangeTimes->{
  3.7625466193869996`*^9},ExpressionUUID->"59264aa6-2c75-4b08-8082-\
4c8a03b03cd5"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Last change index\"\>",
   "EchoLabel"], " ", "279"}]], "Echo",
 CellChangeTimes->{
  3.7625466194598665`*^9},ExpressionUUID->"f2633341-6109-4c59-a20f-\
ca133a19eeec"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Last change pair\"\>",
   "EchoLabel"], " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3"}], "}"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3", ",", "4"}], "}"}]}], "}"}]}], "}"}]}]], "Echo",
 CellChangeTimes->{
  3.7625466195158772`*^9},ExpressionUUID->"082f525e-6b47-4be4-97bd-\
c61a28fa47ce"],

Cell[BoxData["\<\"\"\>"], "Print",
 CellChangeTimes->{3.7625466195814486`*^9},
 CellLabel->
  "During evaluation of \
In[66]:=",ExpressionUUID->"2bea951e-0b57-4879-a408-7208a76434e8"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Tree collapsed\"\>",
   "EchoLabel"], " ", "0.5668788`7.205035209147771"}]], "Echo",
 CellChangeTimes->{
  3.7625466195940747`*^9},ExpressionUUID->"d8740e09-0236-4202-81c6-\
cdbce4294314"],

Cell[BoxData["\<\"\"\>"], "Print",
 CellChangeTimes->{3.7625466196329536`*^9},
 CellLabel->
  "During evaluation of \
In[66]:=",ExpressionUUID->"8c1f658f-9c5a-4c7f-b16d-658c7b0dd93c"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"Class size\"\>", "\<\"#\"\>", "\<\"Max elem. size\"\>", "\<\"Min \
elem. size\"\>"},
    {"1", "10", "2", "0"},
    {"4", "4", "3", "2"},
    {"38", "1", "6", "3"}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Print",
 CellChangeTimes->{3.7625466196379814`*^9},
 CellLabel->
  "During evaluation of \
In[66]:=",ExpressionUUID->"2e5df0fc-1d0e-456c-97e1-8cab5f9dc137"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Longest linear form length: \"\>", "\[InvisibleSpace]", "3"}],
  SequenceForm["Longest linear form length: ", 3],
  Editable->False]], "Print",
 CellChangeTimes->{3.7625466196414003`*^9},
 CellLabel->
  "During evaluation of \
In[66]:=",ExpressionUUID->"cfb649fc-bf9c-4fce-9b54-f0c830dbb7e3"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"groundN", "=", 
   RowBox[{"Subsets", "[", 
    RowBox[{
     RowBox[{"Range", "[", "4", "]"}], ",", 
     RowBox[{"{", "2", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"FQ", "[", 
  RowBox[{"groundN", ",", 
   RowBox[{"Keys", "[", "classes", "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7625466203810744`*^9, 3.762546681035553*^9}},
 CellLabel->"In[71]:=",ExpressionUUID->"1fc7ee78-b310-481e-bba4-9ba3fee492f9"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.7625466298562026`*^9, 3.762546681633342*^9}},
 CellLabel->"Out[72]=",ExpressionUUID->"7a3a6868-ab65-4806-957f-3e8778f12c03"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["MatroidFromCircuits", "Subsubsection",
 CellChangeTimes->{{3.7464118520561166`*^9, 
  3.746411854412431*^9}},ExpressionUUID->"5ff60406-4cb8-4d98-b2cd-\
c92e5a2ad490"],

Cell["\<\
Given a ground set E and a set of circuits, construct the matroid (in terms \
of bases).\
\>", "Text",
 CellChangeTimes->{
  3.7468416978224077`*^9},ExpressionUUID->"4055ee44-f72e-4d0c-b893-\
b1d602de5cdb"],

Cell[TextData[{
 StyleBox["Improvement:",
  FontWeight->"Bold"],
 " Is there another more efficient way to code this?\nRight now, it does\n1. \
Find all possible subsets\n2. Filter out the dependent sets (ie the ones that \
contain circuits)\n3. Find the bases\n\nAlternative idea: maybe leverage the \
fact that all circuits are basic (additionally, in each of their elements) - \
see Gordon McNulty p. 162 Proposition 4.7 part 1"
}], "Text",
 CellChangeTimes->{{3.7464118564273033`*^9, 3.7464118739929523`*^9}, {
  3.746412381573628*^9, 3.746412387709197*^9}, {3.7468392661577625`*^9, 
  3.7468392704097147`*^9}, {3.746841647247016*^9, 3.746841769690092*^9}, {
  3.7468419412393394`*^9, 3.746841971338337*^9}, {3.746842006513525*^9, 
  3.746842038631957*^9}, {3.788452509429299*^9, 
  3.7884525168402348`*^9}},ExpressionUUID->"ad4c7b5f-1b19-49b7-95d4-\
442453261af8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"MatroidFromCircuits", "[", 
   RowBox[{"E_", ",", "C_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"ind", ",", "d"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{"Trivial", " ", "case"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"C", "\[Equal]", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"Return", "[", 
        RowBox[{"{", 
         RowBox[{"E", ",", 
          RowBox[{"{", "E", "}"}]}], "}"}], "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"Find", " ", "independent", " ", "sets"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"ind", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"AnyTrue", "[", 
           RowBox[{"C", ",", 
            RowBox[{
             RowBox[{"SubsetQ", "[", 
              RowBox[{"subset", ",", "#"}], "]"}], "&"}]}], "]"}], ",", 
          "Nothing", ",", "subset"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"subset", ",", 
          RowBox[{"Subsets", "[", "E", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"Bases", " ", "and", " ", "return"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"d", "=", 
      RowBox[{"Max", "@@", 
       RowBox[{"(", 
        RowBox[{"Length", "/@", "ind"}], ")"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"E", ",", 
       RowBox[{"Select", "[", 
        RowBox[{"ind", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "#", "]"}], "\[Equal]", "d"}], "&"}]}], 
        "]"}]}], "}"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7464118419144154`*^9, 3.746411846030072*^9}, {
  3.746411882210248*^9, 3.74641188950944*^9}, {3.7464129297994213`*^9, 
  3.746413013901474*^9}, {3.7468394450125356`*^9, 3.746839468226081*^9}, {
  3.746839778800214*^9, 3.7468398226195364`*^9}, {3.746839867089883*^9, 
  3.746839889671977*^9}, {3.7468399320515795`*^9, 3.7468399545503645`*^9}, {
  3.7468399932827053`*^9, 3.7468400573430653`*^9}, {3.7468401814356*^9, 
  3.7468401962088795`*^9}, {3.7468404340277953`*^9, 3.7468405599952593`*^9}, {
  3.7468417391245327`*^9, 3.7468417484734135`*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"25f291a5-ac38-48ca-84eb-b4f276dc08bb"]
}, Closed]],

Cell[CellGroupData[{

Cell["Lattice", "Subsubsection",
 CellChangeTimes->{{3.7884565800771723`*^9, 3.7884565820931115`*^9}, {
  3.7884566156491647`*^9, 
  3.788456616693124*^9}},ExpressionUUID->"a9b2077e-fa86-4aa9-983d-\
42d8ae0e236a"],

Cell["\<\
Given a set of elements, creates a lattice ordered by inclusion
1. RelationGraph[] adds edges between elements when there is proper containment
2. TransitiveReductionGraph[] removes edges that are implied by transitivity
3. Then I have to figure out the coordinates for each vertex, which is \
tedious, since for large graphs it prints very ugly by default

In the graph, arrows point in the direction of smaller sets\
\>", "Text",
 CellChangeTimes->{{3.7884575976314416`*^9, 3.7884576646791077`*^9}, {
  3.788486288242863*^9, 3.788486296469872*^9}, {3.78848693375667*^9, 
  3.7884869662189016`*^9}},ExpressionUUID->"e863be38-c841-4185-9e02-\
63602de585ba"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Lattice", "[", "elements_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "vertices", ",", "g", ",", "layers", ",", "i", ",", "nextVertices", ",", 
      "verticesSeen", ",", "coordinates", ",", "verticesInLayer", ",", 
      "vertexIndex", ",", "vertex"}], "}"}], ",", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"vertices", "=", 
      RowBox[{"Sort", "[", "elements", "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Creates", " ", "the", " ", "graph"}], ",", " ", 
       RowBox[{"but", " ", "the", " ", "vertices", " ", 
        RowBox[{"won", "'"}], "t", " ", "be", " ", "in", " ", "nice", " ", 
        "locations", " ", "yet"}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"g", "=", 
      RowBox[{"TransitiveReductionGraph", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"RelationGraph", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"SubsetQ", "[", 
             RowBox[{"#1", ",", "#2"}], "]"}], "\[And]", 
            RowBox[{"(", 
             RowBox[{"#1", "\[NotEqual]", "#2"}], ")"}]}], "&"}], ",", 
          "vertices"}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"VertexLabels", "\[Rule]", "\"\<Name\>\""}]}], 
       "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
, "*)"}], "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"Determine", " ", "vertex", " ", "coordinates"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
, "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"Assign", " ", "vertices", " ", "to", " ", "layers"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"i", "=", "1"}], ";", "\[IndentingNewLine]", 
     RowBox[{"layers", "=", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"Last", "[", "vertices", "]"}], "}"}], "}"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Loop", " ", "until", " ", "all", " ", "vertices", " ", "are", " ", 
       "in", " ", "a", " ", "layer"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{"True", ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
         "Find", " ", "all", " ", "vertices", " ", "that", " ", "are", " ", 
          "neighbors", " ", "of", " ", "the", " ", "current", " ", "layer"}], 
         ",", " ", 
         RowBox[{
         "in", " ", "a", " ", "directed", " ", "graph", " ", "sense"}]}], 
        "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"nextVertices", "=", 
         RowBox[{"Union", "@@", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Delete", "[", 
              RowBox[{
               RowBox[{"VertexOutComponent", "[", 
                RowBox[{"g", ",", "#", ",", "1"}], "]"}], ",", "1"}], "]"}], 
             "&"}], "/@", 
            RowBox[{"layers", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], ")"}]}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"If", " ", "we", " ", "reached", " ", "the", " ", "top"}], 
          ",", " ", 
          RowBox[{"break", " ", "the", " ", "loop"}]}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"nextVertices", "\[Equal]", 
           RowBox[{"{", "}"}]}], ",", 
          RowBox[{"Break", "[", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
         "Add", " ", "them", " ", "to", " ", "the", " ", "next", " ", 
          "layer"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"layers", "=", 
         RowBox[{"Append", "[", 
          RowBox[{"layers", ",", "nextVertices"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"i", "++"}], ";"}]}], "\[IndentingNewLine]", 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
, "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
       "Make", " ", "sure", " ", "vertices", " ", "only", " ", "appear", " ", 
        "in", " ", "a", " ", "single", " ", "layer"}], ",", " ", 
       RowBox[{
       "the", " ", "lowest", " ", "one", " ", "they", " ", "are", " ", 
        "in"}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"verticesSeen", "=", 
      RowBox[{"Last", "[", "layers", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Do", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"layers", "[", 
          RowBox[{"[", "j", "]"}], "]"}], "=", 
         RowBox[{"Complement", "[", 
          RowBox[{
           RowBox[{"layers", "[", 
            RowBox[{"[", "j", "]"}], "]"}], ",", "verticesSeen"}], "]"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"verticesSeen", "=", 
         RowBox[{"Join", "[", 
          RowBox[{"verticesSeen", ",", 
           RowBox[{"layers", "[", 
            RowBox[{"[", "j", "]"}], "]"}]}], "]"}]}], ";"}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", 
         RowBox[{
          RowBox[{"Length", "[", "layers", "]"}], "-", "1"}], ",", "1", ",", 
         RowBox[{"-", "1"}]}], "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
, "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Assign", " ", "coordinates", " ", "to", " ", "each", " ", "vertex"}], 
      "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"coordinates", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"Length", "[", "vertices", "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Do", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"verticesInLayer", "=", 
         RowBox[{"Length", "[", 
          RowBox[{"layers", "[", 
           RowBox[{"[", "layerNumber", "]"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Do", "[", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"vertex", "=", 
            RowBox[{
             RowBox[{"layers", "[", 
              RowBox[{"[", "layerNumber", "]"}], "]"}], "[", 
             RowBox[{"[", "vertexNumber", "]"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"vertexIndex", "=", 
            RowBox[{
             RowBox[{"Position", "[", 
              RowBox[{"vertices", ",", "vertex"}], "]"}], "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"coordinates", "[", 
             RowBox[{"[", "vertexIndex", "]"}], "]"}], "=", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"vertexNumber", "-", 
               RowBox[{"verticesInLayer", "/", "2"}]}], ",", 
              RowBox[{"-", "layerNumber"}]}], "}"}]}], ";"}], 
          "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
          RowBox[{"{", 
           RowBox[{"vertexNumber", ",", "1", ",", "verticesInLayer"}], 
           "}"}]}], "]"}]}], "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"layerNumber", ",", "1", ",", 
         RowBox[{"Length", "[", "layers", "]"}]}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
, "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"Set", " ", "the", " ", "vertex", " ", "coordinates"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"SetProperty", "[", 
      RowBox[{"g", ",", 
       RowBox[{"VertexCoordinates", "\[Rule]", "coordinates"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.788456584482133*^9, 3.788456610073662*^9}, {
   3.788456837901365*^9, 3.788456875245923*^9}, {3.78845692555527*^9, 
   3.7884569512721643`*^9}, {3.788456999841297*^9, 3.788457005718259*^9}, {
   3.788457055030669*^9, 3.788457112651493*^9}, {3.7884572635179033`*^9, 
   3.7884572665317774`*^9}, {3.7884574663448253`*^9, 
   3.7884574945804367`*^9}, {3.7884575257522197`*^9, 3.788457526758273*^9}, {
   3.7884852008167686`*^9, 3.7884852091554646`*^9}, {3.78848529866906*^9, 
   3.788485300708605*^9}, 3.788485425289464*^9, {3.788485495769989*^9, 
   3.7884855546555233`*^9}, {3.788485601716714*^9, 3.78848563507152*^9}, {
   3.7884857672640224`*^9, 3.7884857723444347`*^9}, {3.7884858236522*^9, 
   3.7884859502267666`*^9}, {3.7884860255214186`*^9, 3.788486122547922*^9}, {
   3.788486162075226*^9, 3.7884862710478525`*^9}, {3.7884863033534646`*^9, 
   3.788486916359234*^9}, {3.788486998229265*^9, 3.7884870334162045`*^9}, {
   3.78848706941229*^9, 3.7884871423372803`*^9}, {3.7884871739657*^9, 
   3.7884872035515785`*^9}, {3.788487243729109*^9, 3.788487366316298*^9}, {
   3.7884874170177183`*^9, 3.7884874370850935`*^9}, {3.7884874999878836`*^9, 
   3.788487500273118*^9}, {3.7884875506234426`*^9, 3.7884875660442424`*^9}, {
   3.7884876140468764`*^9, 3.7884876306404696`*^9}, {3.788487685631457*^9, 
   3.788487695008379*^9}, {3.788487847581807*^9, 3.7884878708435993`*^9}, {
   3.7884880931920204`*^9, 3.7884881171439714`*^9}, {3.7884882127054224`*^9, 
   3.7884882283027225`*^9}, {3.7884883683142776`*^9, 3.788488373453535*^9}, {
   3.788488411591586*^9, 3.7884884212357607`*^9}, {3.788488453229206*^9, 
   3.788488459294027*^9}, {3.7884885287662497`*^9, 3.7884885377402163`*^9}, {
   3.788488591917366*^9, 3.7884886040040407`*^9}, {3.788488654528932*^9, 
   3.7884886731311927`*^9}, {3.788488721149787*^9, 3.788488841000289*^9}, {
   3.788488880231386*^9, 3.7884888950048428`*^9}, {3.788488933256591*^9, 
   3.788489112971016*^9}, {3.788489156895521*^9, 3.788489213339585*^9}, {
   3.788489459775631*^9, 3.7884894616705227`*^9}, {3.788489639930875*^9, 
   3.788489641302208*^9}, {3.7884901918100977`*^9, 3.788490232419505*^9}, {
   3.7885302250614195`*^9, 3.7885302259959593`*^9}, {3.788530673895193*^9, 
   3.7885307630118856`*^9}, {3.7885308569537106`*^9, 
   3.7885310427129374`*^9}, {3.788531123281491*^9, 3.7885311425778904`*^9}, {
   3.7885312298096404`*^9, 3.788531247257017*^9}, {3.788531471679887*^9, 
   3.788531496614178*^9}, {3.7885315894080706`*^9, 3.7885316415516343`*^9}, {
   3.788532218512126*^9, 3.788532309091216*^9}, {3.7885323435495205`*^9, 
   3.7885323521779556`*^9}, {3.788532387328368*^9, 3.788532426928643*^9}, {
   3.7885327387219334`*^9, 3.788532738832675*^9}, {3.7885329125205765`*^9, 
   3.7885329126651554`*^9}, {3.788533111994853*^9, 
   3.7885331121155677`*^9}},ExpressionUUID->"d16b0284-17cf-4630-bdac-\
17daca134acd"]
}, Closed]],

Cell[CellGroupData[{

Cell["MatrixWedge", "Subsubsection",
 CellChangeTimes->{{3.748538447336913*^9, 
  3.748538449044354*^9}},ExpressionUUID->"acac4f1c-d32a-4d8b-b591-\
ac10c95f1b75"],

Cell["\<\
Given a matrix with full row rank, the span of its rows represents a linear \
space. Take a wedge power of this linear space by wedging rows together.
There\[CloseCurlyQuote]s actually a Mathematica function perfect for this, \
but I\[CloseCurlyQuote]ll still have this method as a wrapper.\
\>", "Text",
 CellChangeTimes->{{3.748538463508423*^9, 3.7485385264104567`*^9}, {
  3.7485387125282106`*^9, 
  3.7485387467596693`*^9}},ExpressionUUID->"bc924875-f79d-40dd-a58f-\
8a595a5ee6a1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"MatrixWedge", "[", 
   RowBox[{"A_", ",", "k_"}], "]"}], ":=", 
  RowBox[{"Minors", "[", 
   RowBox[{"A", ",", "k"}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.748538449935978*^9, 3.748538461465909*^9}, {
  3.7485385297813067`*^9, 3.7485386009436746`*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"6bdbdf29-deed-44bc-8dc9-9ca8a9796ebb"]
}, Closed]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Tropical", "Section",
 CellChangeTimes->{{3.741307867049391*^9, 3.7413078679893494`*^9}, {
  3.741307939388401*^9, 3.7413079400565214`*^9}, {3.7455416887533197`*^9, 
  3.745541688866494*^9}},ExpressionUUID->"1c4f6208-c82b-40d7-a09d-\
9803492beed6"],

Cell[TextData[{
 "The ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["Q", "M"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "93609b49-2201-440d-bcba-d56a8f64be13"],
 " section is probably the most useful. I think I originally used many of \
these functions when I was figuring out the correspondence between Pl\
\[UDoubleDot]cker vectors and matroids, so they may be largely obsolete\n\n\
Note that all of this is over the booleans (idempotent semifield), so \
coefficients are either 0 or 1"
}], "Text",
 CellChangeTimes->{{3.7468438179729185`*^9, 3.746843871806533*^9}, {
  3.7884528361220174`*^9, 3.78845286509916*^9}, {3.7884530255252743`*^9, 
  3.7884530882285595`*^9}},ExpressionUUID->"e4d66b3f-c58d-4201-98a7-\
0265ce6ff11e"],

Cell[CellGroupData[{

Cell["Basics", "Subsection",
 CellChangeTimes->{{3.745541683826359*^9, 
  3.7455416843934565`*^9}},ExpressionUUID->"2815db58-63af-44cf-8d9e-\
c04fe88a89ef"],

Cell[CellGroupData[{

Cell["PluckerQ", "Subsubsection",
 CellChangeTimes->{{3.739819112607463*^9, 
  3.739819113826269*^9}},ExpressionUUID->"ab631eb0-4835-4248-bb47-\
f5cd186ba378"],

Cell["\<\
Checks if a vector is a Pl\[UDoubleDot]cker vector. The vector is represented \
by a matroid.\
\>", "Text",
 CellChangeTimes->{{3.739819294012532*^9, 3.73981930806154*^9}, {
  3.7468436849863443`*^9, 
  3.746843698942274*^9}},ExpressionUUID->"7679abec-1893-42fd-b479-\
8b56388ead3a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"PluckerQ", "[", "M_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"E", ",", "B", ",", "d", ",", "summation"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"E", ",", "B"}], "}"}], "=", "M"}], ";", "\[IndentingNewLine]", 
     RowBox[{"d", "=", 
      RowBox[{"Length", "[", 
       RowBox[{"B", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Catch", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Do", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"summation", "=", 
           RowBox[{"Table", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"MemberQ", "[", 
               RowBox[{"B", ",", 
                RowBox[{"DeleteCases", "[", 
                 RowBox[{"A", ",", "i"}], "]"}]}], "]"}], "\[And]", 
              RowBox[{"MemberQ", "[", 
               RowBox[{"B", ",", 
                RowBox[{"Union", "[", 
                 RowBox[{"B", ",", 
                  RowBox[{"{", "i", "}"}]}], "]"}]}], "]"}]}], 
             "\[IndentingNewLine]", ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", 
               RowBox[{"Complement", "[", 
                RowBox[{"A", ",", "B"}], "]"}]}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Count", "[", 
              RowBox[{"summation", ",", "True"}], "]"}], "\[Equal]", "1"}], 
            ",", 
            RowBox[{"Throw", "[", "False", "]"}]}], "]"}]}], 
         "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"A", ",", 
           RowBox[{"Subsets", "[", 
            RowBox[{"E", ",", 
             RowBox[{"d", "+", "1"}]}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"B", ",", 
           RowBox[{"Subsets", "[", 
            RowBox[{"E", ",", 
             RowBox[{"d", "-", "1"}]}], "]"}]}], "}"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Throw", "[", "True", "]"}]}], "\[IndentingNewLine]", 
      "]"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7394881409766097`*^9, 3.739488157814655*^9}, {
  3.7394881954457874`*^9, 3.739488213670929*^9}, {3.739488319969757*^9, 
  3.7394884427667284`*^9}, {3.7394885029275894`*^9, 3.7394887894714465`*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"3e5e9a7d-b1af-4b34-9a47-8394c727e688"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 FormBox[
  SubscriptBox["L", "M"], 
  TraditionalForm]],ExpressionUUID->"2a68ba15-b68d-4e2d-84e9-a2ec5a16b9b7"]], \
"Subsection",
 CellChangeTimes->{{3.7413079473600883`*^9, 
  3.741307948222314*^9}},ExpressionUUID->"1c05a681-8446-47cf-8dcc-\
75514ad21fa9"],

Cell[CellGroupData[{

Cell["TropicalHyperplane", "Subsubsection",
 CellChangeTimes->{{3.7398191282820797`*^9, 
  3.739819130516553*^9}},ExpressionUUID->"1f0745ca-f67d-4aef-8f0a-\
af467c2a48bf"],

Cell["\<\
Calculates the tropical hyperplane corresponding to a Pl\[UDoubleDot]cker \
vector
ie tropker(\[Dash]\[Wedge][M])\
\>", "Text",
 CellChangeTimes->{{3.739819426636668*^9, 3.7398194420918827`*^9}, {
  3.7398195031796618`*^9, 3.739819524604768*^9}, {3.739933140925024*^9, 
  3.739933208685983*^9}, {3.7884528226503053`*^9, 
  3.788452830043131*^9}},ExpressionUUID->"bd2bcd1d-ace6-4813-ac6c-\
3fe5f4311041"],

Cell[BoxData[
 RowBox[{
  RowBox[{"TropicalHyperplane", "[", "M_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"E", ",", "B", ",", "forms", ",", "in", ",", "out"}], "}"}], ",",
     "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"E", "=", 
      RowBox[{"First", "[", "M", "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"get", " ", "the", " ", "linear", " ", "forms"}], ",", " ", 
       RowBox[{
        RowBox[{"Union", "[", "]"}], " ", "to", " ", "avoid", " ", 
        "redundant", " ", "ones"}], ",", " ", 
       RowBox[{
        RowBox[{"Complement", "[", "]"}], " ", "to", " ", "remove", " ", 
        "the", " ", "trivial", " ", "one"}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"forms", "=", 
      RowBox[{"Complement", "[", 
       RowBox[{
        RowBox[{"Union", "@", 
         RowBox[{"LinearForms", "[", "M", "]"}]}], ",", 
        RowBox[{"{", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"Intersection", "@@", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Tropker", "[", 
         RowBox[{"E", ",", "form"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"form", ",", "forms"}], "}"}]}], "]"}]}]}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7396554813471794`*^9, 3.739655487171635*^9}, {
  3.7396555881144896`*^9, 3.739655924616409*^9}, {3.7396560277134857`*^9, 
  3.7396560608856487`*^9}, {3.739656110107354*^9, 3.7396561113883047`*^9}, {
  3.7396563241173153`*^9, 3.7396563734638195`*^9}, {3.739656438295641*^9, 
  3.7396565090005455`*^9}, {3.7396565658325605`*^9, 3.7396566448250227`*^9}, {
  3.7398266510463576`*^9, 3.739826675934428*^9}, {3.7403480265455093`*^9, 
  3.740348133443771*^9}, {3.7404391851214294`*^9, 3.740439191129607*^9}, {
  3.740439235746954*^9, 3.740439246087509*^9}, {3.7455430423629913`*^9, 
  3.7455430434297*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"9141d63f-edb8-4c56-9690-531858209cf7"]
}, Closed]],

Cell[CellGroupData[{

Cell["LinearForms", "Subsubsection",
 CellChangeTimes->{{3.7398191177642403`*^9, 
  3.739819118842518*^9}},ExpressionUUID->"7faf1d59-d776-445b-836b-\
568237c80219"],

Cell["\<\
Finds the linear forms corresponding to a Pl\[UDoubleDot]cker vector (using \
the |J| = d+1 thing)
\[OpenCurlyDoubleQuote]Output\[CloseCurlyDoubleQuote] corresponds to whether \
it should echo the J that give trivial linear forms\
\>", "Text",
 CellChangeTimes->{{3.7398193290029507`*^9, 3.7398193410986137`*^9}, {
  3.7398202129768944`*^9, 3.7398202264323125`*^9}, {3.7411979248052464`*^9, 
  3.7411979483989058`*^9}, {3.741197992308405*^9, 
  3.741197994113017*^9}},ExpressionUUID->"7a477613-24d1-4aa5-b8ea-\
ecd496b1ad33"],

Cell[BoxData[
 RowBox[{
  RowBox[{"LinearForms", "[", 
   RowBox[{"M_", ",", 
    RowBox[{"Output_:", "False"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"E", ",", "B", ",", "d", ",", "temp", ",", "forms"}], "}"}], ",",
     "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"E", ",", "B"}], "}"}], "=", "M"}], ";", "\[IndentingNewLine]", 
     RowBox[{"d", "=", 
      RowBox[{"Length", "[", 
       RowBox[{"B", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "find", " ", "the", " ", "linear", " ", "form", " ", "for", " ", "each",
        " ", "J"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"forms", "=", 
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"temp", "=", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"MemberQ", "[", 
               RowBox[{"B", ",", 
                RowBox[{"DeleteCases", "[", 
                 RowBox[{"J", ",", "i"}], "]"}]}], "]"}], ",", "i", ",", 
              "Nothing"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "J"}], "}"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"Output", "\[And]", 
            RowBox[{
             RowBox[{"Length", "@", "temp"}], "\[Equal]", "0"}]}], ",", 
           RowBox[{"Echo", "@", "J"}]}], "]"}], ";", "\[IndentingNewLine]", 
         "temp"}], "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"J", ",", 
          RowBox[{"Subsets", "[", 
           RowBox[{"E", ",", 
            RowBox[{"{", 
             RowBox[{"d", "+", "1"}], "}"}]}], "]"}]}], "}"}]}], "]"}]}], ";",
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "remove", " ", "duplicates", " ", "and", " ", "the", " ", "trivial"}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Complement", "[", 
      RowBox[{
       RowBox[{"Union", "[", "forms", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"{", "}"}], "}"}]}], "]"}]}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.739489144444028*^9, 3.7394893260406303`*^9}, {
   3.739489381972685*^9, 3.7394894167638826`*^9}, {3.739489736733212*^9, 
   3.739489786191162*^9}, {3.7396554444061637`*^9, 3.739655447391077*^9}, 
   3.739655509097703*^9, {3.7396564006652174`*^9, 3.7396564085723*^9}, {
   3.7411979168725576`*^9, 3.741197923239228*^9}, {3.7411979549961786`*^9, 
   3.7411979640954275`*^9}, {3.7411979956091805`*^9, 
   3.7411980046540995`*^9}, {3.741198069055215*^9, 3.74119808982755*^9}, {
   3.741308751941025*^9, 3.7413087841734505`*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"c6709803-5d58-4137-87f0-f28546c595a5"]
}, Closed]],

Cell[CellGroupData[{

Cell["Tropker", "Subsubsection",
 CellChangeTimes->{{3.740438787996355*^9, 
  3.740438791411853*^9}},ExpressionUUID->"d8c9ddfc-7477-4413-833c-\
7891523ae4a0"],

Cell[TextData[{
 "Finds the tropical kernel of a linear form. This code is pretty terse, so \
here\[CloseCurlyQuote]s what\[CloseCurlyQuote]s going on:\n\n- From GG2017 p. \
5 definition 2.4.1, the tropical kernel of a linear form is all elements for \
which dropping a single term of the element does not affect its image under \
the linear form.\n\tSo if ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "a9adb4b2-149b-46c1-9235-54fe532c107f"],
 " is the linear form, it is all ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Sum]", "i"], 
    RowBox[{
     SubscriptBox["a", "i"], 
     SubscriptBox["e", "i"]}]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "31ca3919-97db-4099-b836-7c588de83431"],
 " such that for all ",
 Cell[BoxData[
  FormBox["j", TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "9cac6d10-6e4f-4b4d-b3c0-f31f044955c9"],
 " we have ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", 
     RowBox[{
      SubscriptBox["\[Sum]", "i"], 
      RowBox[{
       SubscriptBox["a", "i"], 
       SubscriptBox["e", "i"]}]}], ")"}], "=", 
    RowBox[{"f", "(", 
     RowBox[{
      SubscriptBox["\[Sum]", 
       RowBox[{"i", "\[NotEqual]", "j"}]], 
      RowBox[{
       SubscriptBox["a", "i"], 
       SubscriptBox["e", "i"]}]}], ")"}]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "e32ade74-cf53-4c86-bb89-e7082691cd6d"],
 "\n\t\n- Since we are just looking over the booleans and linear forms can be \
represented by sets, say ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "4"}], "}"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "861010ed-7eb9-4f1b-aa60-02990187ef0c"],
 " is the linear form ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["x", "1"], "+", 
    SubscriptBox["x", "2"], "+", 
    SubscriptBox["x", "4"]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "0c346efe-2dad-4366-ba2f-b3ea031fc9fd"],
 ", this amounts to finding all sets that overlap our linear form by 2 \
elements or not at all. These are the two cases ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", 
     RowBox[{
      SubscriptBox["\[Sum]", "i"], 
      RowBox[{
       SubscriptBox["a", "i"], 
       SubscriptBox["e", "i"]}]}], ")"}], "=", "1"}], TraditionalForm]],
  ExpressionUUID->"44789836-e207-4c9b-9ea2-f119bcc4d80e"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", 
     RowBox[{
      SubscriptBox["\[Sum]", "i"], 
      RowBox[{
       SubscriptBox["a", "i"], 
       SubscriptBox["e", "i"]}]}], ")"}], "=", "0"}], TraditionalForm]],
  ExpressionUUID->"ec4cbc32-3d93-4b21-a67a-f068844b6cef"],
 ", respectively.\n\tAs an example, if the linear form is ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "=", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "4"}], "}"}]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "e8cd3ab0-2fd4-4bc5-b745-9df78f8e1b1f"],
 " and we look at the element ",
 Cell[BoxData[
  FormBox[
   RowBox[{"v", "=", 
    RowBox[{"{", 
     RowBox[{"2", ",", "4", ",", "5"}], "}"}]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "5de83d92-a6ff-44f0-ab23-ba0e85db4f06"],
 " we have ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "v", ")"}], "=", "1"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "1fd2a0e8-5f00-4a4c-9567-f261d8aae7ca"],
 ". Since when we drop a single term from ",
 Cell[BoxData[
  FormBox["v", TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "aeae2cf8-5d7b-4d26-9fbf-558a34ac1f6f"],
 " we still have nontrivial overlap with ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "1c95264e-c506-4a83-bedb-739493ef1fe8"],
 ", we will still have the quantity equal to 1. So it satisfies the above \
condition, and thus ",
 Cell[BoxData[
  FormBox[
   RowBox[{"v", "\[Element]", 
    RowBox[{"tropker", "(", "f", ")"}]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "899e87ad-fd5c-40a4-b86e-c507a7bdc2a6"],
 ".\n\t\n- So in the code, \[OpenCurlyDoubleQuote]in\[CloseCurlyDoubleQuote] \
is all ways of picking at least 2 terms of the linear form, \
\[OpenCurlyDoubleQuote]out\[CloseCurlyDoubleQuote] is all ways of picking \
terms not in the linear form, and the Union[] selects all elements that are \
either\n\t",
 StyleBox["=0 case:",
  FontWeight->"Bold"],
 " do not overlap the linear form, so ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "v", ")"}], "=", "0"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "5041e58a-fea1-45f0-bfa6-dbe389ae26b0"],
 "\n\t",
 StyleBox["=1 case:",
  FontWeight->"Bold"],
 " overlap the linear form in at least 2 elements, so ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "(", "v", ")"}], "=", "1"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "ab2459d1-3741-4ab5-9f6f-63a3eaf28d94"]
}], "Text",
 CellChangeTimes->{{3.740438794449974*^9, 3.740438800238636*^9}, {
  3.7885344098062906`*^9, 3.788534659355976*^9}, {3.788534825114796*^9, 
  3.7885352008636055`*^9}},ExpressionUUID->"1f30d9ed-6ffc-4153-b491-\
afd5258a2751"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Tropker", "[", 
   RowBox[{"E_", ",", "form_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"in", ",", "out"}], "}"}], ",", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"Read", " ", "what", " ", "happens", " ", "in", " ", "the", " ", 
       RowBox[{"Union", "[", "]"}]}], ",", " ", 
      RowBox[{
      "then", " ", "these", " ", "should", " ", "make", " ", "more", " ", 
       "sense"}]}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"in", "=", 
      RowBox[{"Subsets", "[", 
       RowBox[{"form", ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", 
          RowBox[{"Length", "@", "form"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"out", "=", 
      RowBox[{"Subsets", "[", 
       RowBox[{"Complement", "[", 
        RowBox[{"E", ",", "form"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Union", "[", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"=", 
        RowBox[{"0", " ", 
         RowBox[{"case", ":", " ", 
          RowBox[{
          "pick", " ", "from", " ", "things", " ", "not", " ", "in", " ", 
           "the", " ", "form"}]}]}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"out", ",", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"=", 
         RowBox[{"1", " ", 
          RowBox[{"case", ":", " ", 
           RowBox[{
           "pick", " ", "at", " ", "least", " ", "two", " ", "things", " ", 
            "in", " ", "the", " ", "form"}]}]}]}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"Union", "@@", "#"}], ")"}], "&"}], "/@", 
        RowBox[{"Tuples", "[", 
         RowBox[{"{", 
          RowBox[{"in", ",", "out"}], "}"}], "]"}]}]}], "\[IndentingNewLine]",
       "]"}]}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7404388222343283`*^9, 3.7404388704349794`*^9}, {
  3.7404389211400285`*^9, 3.7404389384967318`*^9}, {3.74043897190933*^9, 
  3.740439144746587*^9}, {3.7885343096492805`*^9, 
  3.7885343323652434`*^9}},ExpressionUUID->"8de92983-2a94-448e-8858-\
b8ac7a8ba5bd"]
}, Closed]],

Cell[CellGroupData[{

Cell["OrthogonalDual", "Subsubsection",
 CellChangeTimes->{{3.7578737246593456`*^9, 
  3.757873726818121*^9}},ExpressionUUID->"bd4265e6-9455-4812-8bb5-\
7deb84441014"],

Cell["\<\
Given a list of linear forms, find their orthogonal dual as defined in GG2017 \
p.11\
\>", "Text",
 CellChangeTimes->{{3.757873728540433*^9, 
  3.7578737502014737`*^9}},ExpressionUUID->"5abbc8c2-e1a1-4c25-adbc-\
a4309a665e26"],

Cell[BoxData[
 RowBox[{
  RowBox[{"OrthogonalDual", "[", 
   RowBox[{"E_", ",", "forms_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "nontrivialForms", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"nontrivialForms", "=", 
      RowBox[{"Complement", "[", 
       RowBox[{"forms", ",", 
        RowBox[{"{", 
         RowBox[{"{", "}"}], "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "nontrivialForms", "]"}], "\[Equal]", "0"}], 
       ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
         "If", " ", "there", " ", "are", " ", "no", " ", "linear", " ", 
          "forms"}], ",", " ", 
         RowBox[{
         "it", " ", "is", " ", "the", " ", "empty", " ", "intersection", " ", 
          RowBox[{"(", 
           RowBox[{"whole", " ", "space"}], ")"}]}]}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"Subsets", "[", "E", "]"}], ",", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Otherwise", " ", "intersect", " ", "over", " ", "all", " ", 
         "tropical", " ", "kernels", " ", "of", " ", "these", " ", "linear", 
         " ", "forms"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"Intersection", "@@", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Tropker", "[", 
           RowBox[{"E", ",", "form"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"form", ",", "nontrivialForms"}], "}"}]}], "]"}]}]}], 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.757873751743492*^9, 3.7578738252057915`*^9}, {
  3.7578738675872993`*^9, 3.7578738679513164`*^9}, {3.7578739041227484`*^9, 
  3.757873912465318*^9}, {3.7588094226016874`*^9, 3.7588094247242393`*^9}, {
  3.7884529935787845`*^9, 3.788453007077879*^9}, {3.788534029339978*^9, 
  3.7885341140894985`*^9}},ExpressionUUID->"a4d67714-ca1b-454a-a8e3-\
5af581adfc2f"]
}, Closed]],

Cell[CellGroupData[{

Cell["DoubleOrthogonalDual", "Subsubsection",
 CellChangeTimes->{{3.758812919115095*^9, 
  3.7588129225744114`*^9}},ExpressionUUID->"73917b85-a3fe-4187-8b1f-\
1244df7559c5"],

Cell["Does the above function twice", "Text",
 CellChangeTimes->{{3.758812925784655*^9, 
  3.758812930956314*^9}},ExpressionUUID->"def4afe4-14fb-49d6-8af2-\
5cca33ae69d8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"DoubleOrthogonalDual", "[", 
   RowBox[{"E_", ",", "forms_"}], "]"}], ":=", 
  RowBox[{"OrthogonalDual", "[", 
   RowBox[{"E", ",", 
    RowBox[{"OrthogonalDual", "[", 
     RowBox[{"E", ",", "forms"}], "]"}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7588129316634645`*^9, 3.7588129513964367`*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"a3ee3abf-8b74-4d4f-ba4e-7e9bfe8943fc"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 FormBox[
  SubscriptBox["Q", "M"], 
  TraditionalForm]],ExpressionUUID->"a2cc7cca-1e23-403f-9663-993d87379b4a"]], \
"Subsection",
 CellChangeTimes->{{3.741307953235168*^9, 
  3.741307954055058*^9}},ExpressionUUID->"bf8124b6-bfb5-4b76-95c3-\
efd3eebe7dd8"],

Cell[CellGroupData[{

Cell["QuotientModule", "Subsubsection",
 CellChangeTimes->{{3.740871993550888*^9, 3.7408719960191236`*^9}, {
  3.7413081141778173`*^9, 
  3.7413081172628455`*^9}},ExpressionUUID->"ff6886c3-90e5-4c03-b58c-\
d71b9b470a83"],

Cell[TextData[{
 "Generates ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["Q", "M"], TraditionalForm]],ExpressionUUID->
  "378d57c4-a635-4461-b5bd-2655073303de"],
 " corresponding to a Pl\[UDoubleDot]cker vector\nie B(\[Dash]\[Wedge][M])\n\
Uses that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[ScriptCapitalL]", "(", "M", ")"}], "\[TildeFullEqual]", 
    SubscriptBox["Q", "M"]}], TraditionalForm]],ExpressionUUID->
  "c0ea346a-2a5a-4ca1-bbb1-2be2e8cf36ed"],
 ", G+2 Thm. 3.3\nCurrently, outputs it as an association of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"F", "\[Rule]", 
    RowBox[{"{", 
     SubscriptBox["S", "i"], "}"}]}], TraditionalForm]],ExpressionUUID->
  "d3511c7a-5588-4d99-bd50-1e567abc14ae"],
 " associating flats to the sets in their equivalence class"
}], "Text",
 CellChangeTimes->{{3.740872026392275*^9, 3.7408721080357466`*^9}, {
  3.740872857417776*^9, 3.740873038135987*^9}, {3.7408730985690327`*^9, 
  3.740873162787035*^9}, {3.7408746610718327`*^9, 3.740874719610676*^9}, {
  3.741308121923781*^9, 3.7413081399788632`*^9}, {3.7413082066912355`*^9, 
  3.7413083295531816`*^9}, {3.745539329593011*^9, 3.745539351744078*^9}, {
  3.745542234503456*^9, 3.745542236726237*^9}, {3.788453117826399*^9, 
  3.78845311997985*^9}},ExpressionUUID->"7700d8b3-4e89-43aa-99d6-\
947de1da52f9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"QuotientModule", "[", "M_", "]"}], ":=", 
  RowBox[{"FlatsCongruences", "[", "M", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7408721108536067`*^9, 3.7408723326508245`*^9}, {
   3.740872394274045*^9, 3.7408724102327557`*^9}, {3.7408724454522343`*^9, 
   3.740872494192605*^9}, {3.7408725418330164`*^9, 3.740872669192954*^9}, {
   3.7408727086257334`*^9, 3.7408728088429704`*^9}, {3.740873060726945*^9, 
   3.740873096591277*^9}, {3.7408731693829746`*^9, 3.740873461070258*^9}, {
   3.740873510346451*^9, 3.7408735848486156`*^9}, 3.740873617922221*^9, {
   3.7408738088799357`*^9, 3.740874051059147*^9}, {3.740874230094244*^9, 
   3.740874235077849*^9}, {3.740874289483527*^9, 3.7408744274643326`*^9}, {
   3.7413081703914547`*^9, 3.7413081872577686`*^9}, {3.745539554469452*^9, 
   3.745539702230482*^9}, {3.745542242645276*^9, 3.7455422555754347`*^9}, {
   3.7455430091021795`*^9, 3.745543016153282*^9}, {3.788453111050999*^9, 
   3.7884531147894263`*^9}, {3.7884533536988044`*^9, 3.7884533596288433`*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"cbcf87d3-eb1a-47a1-b276-fc5184303eb9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"QuotientModule", "[", 
  RowBox[{"UniformMatroid", "[", 
   RowBox[{"3", ",", "6"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7884533612578535`*^9, 3.788453369247029*^9}},
 CellLabel->"In[74]:=",ExpressionUUID->"533cfa80-7c50-4f9c-be02-40b76ea8ac22"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{
    RowBox[{"{", "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"{", "}"}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", "1", "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"{", "1", "}"}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", "2", "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"{", "2", "}"}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", "3", "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"{", "3", "}"}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", "4", "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"{", "4", "}"}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", "5", "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"{", "5", "}"}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", "6", "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"{", "6", "}"}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "3"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3"}], "}"}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "4"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"1", ",", "4"}], "}"}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "5"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"1", ",", "5"}], "}"}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "6"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"1", ",", "6"}], "}"}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"2", ",", "3"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3"}], "}"}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"2", ",", "4"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"2", ",", "4"}], "}"}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"2", ",", "5"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"2", ",", "5"}], "}"}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"2", ",", "6"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"2", ",", "6"}], "}"}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"3", ",", "4"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"3", ",", "4"}], "}"}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"3", ",", "5"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"3", ",", "5"}], "}"}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"3", ",", "6"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"3", ",", "6"}], "}"}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"4", ",", "5"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"4", ",", "5"}], "}"}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"4", ",", "6"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"4", ",", "6"}], "}"}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"5", ",", "6"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"5", ",", "6"}], "}"}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6"}], "}"}], 
    "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2", ",", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2", ",", "5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2", ",", "6"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "3", ",", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "3", ",", "5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "3", ",", "6"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "4", ",", "5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "4", ",", "6"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "5", ",", "6"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "3", ",", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "3", ",", "5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "3", ",", "6"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "4", ",", "5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "4", ",", "6"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "5", ",", "6"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3", ",", "4", ",", "5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3", ",", "4", ",", "6"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3", ",", "5", ",", "6"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"4", ",", "5", ",", "6"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2", ",", "3", ",", "5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2", ",", "3", ",", "6"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2", ",", "4", ",", "5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2", ",", "4", ",", "6"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2", ",", "5", ",", "6"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "3", ",", "4", ",", "5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "3", ",", "4", ",", "6"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "3", ",", "5", ",", "6"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "4", ",", "5", ",", "6"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "3", ",", "4", ",", "5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "3", ",", "4", ",", "6"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "3", ",", "5", ",", "6"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "4", ",", "5", ",", "6"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3", ",", "4", ",", "5", ",", "6"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "6"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2", ",", "3", ",", "5", ",", "6"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2", ",", "4", ",", "5", ",", "6"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "3", ",", "4", ",", "5", ",", "6"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "3", ",", "4", ",", "5", ",", "6"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6"}], 
       "}"}]}], "}"}]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.788453367093118*^9, 3.788453369556389*^9}},
 CellLabel->"Out[74]=",ExpressionUUID->"05799106-e64a-4fb9-a0a2-7d86ef247f0e"]
}, Open  ]]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Congruences", "Section",
 CellChangeTimes->{{3.7413083603505583`*^9, 
  3.7413083710119247`*^9}},ExpressionUUID->"5dd3d38d-7a22-4ed5-9a3e-\
4fdc6278a9c2"],

Cell[TextData[{
 "A set of congruence classes will be represented by an association of the \
from ",
 Cell[BoxData[
  FormBox[
   RowBox[{"<|", 
    RowBox[{
     RowBox[{
      SubscriptBox["r", "1"], "\[Rule]", 
      RowBox[{"{", 
       SubscriptBox["s", 
        RowBox[{"1", ",", "..."}]], "}"}]}], ",", "..."}], "|>"}], 
   TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "3c37a74b-9a4f-477d-a1f6-f208e40a465a"],
 " which associates each congruence class representative to its congruence \
class."
}], "Text",
 CellChangeTimes->{{3.788482165901716*^9, 
  3.788482219062559*^9}},ExpressionUUID->"847637a8-e1ce-4d58-a00a-\
9e5743614440"],

Cell[CellGroupData[{

Cell["Main", "Subsection",
 CellChangeTimes->{{3.7468415619921713`*^9, 
  3.746841562283242*^9}},ExpressionUUID->"079f8598-1777-44e1-ae2d-\
56f3005dc2c1"],

Cell[CellGroupData[{

Cell["MatroidalQ", "Subsubsection",
 CellChangeTimes->{{3.7625464670016565`*^9, 
  3.7625464685140314`*^9}},ExpressionUUID->"6365942d-be39-4aea-8589-\
f7d14c38c530"],

Cell["\<\
Checks if a pair (M,k) is matroidal, by computing congruence classes (with \
WedgeCongruences[] and BendCongruences[]) and then checking the flat axioms \
with FQ[]\
\>", "Text",
 CellChangeTimes->{{3.762546473873186*^9, 3.7625465480725336`*^9}, {
  3.7884534559635057`*^9, 
  3.7884534650400567`*^9}},ExpressionUUID->"16b7124c-8def-43cb-b353-\
dea23d7a8d7d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"MatroidalQ", "[", 
   RowBox[{"M_", ",", "k_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "groundM", ",", "groundN", ",", "congruenceClassRepresentatives"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
     "Give", " ", "an", " ", "estimate", " ", "for", " ", "the", " ", "time", 
      " ", "needed"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"To", " ", "edit", " ", "this", " ", "estimate"}], ",", " ", 
      RowBox[{
      "change", " ", "the", " ", "function", " ", 
       "MatoridalQTimeEstimate"}]}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"Echo", "[", 
       RowBox[{
        RowBox[{"TimeToString", "@", 
         RowBox[{"MatroidalQTimeEstimate", "[", 
          RowBox[{"M", ",", "k"}], "]"}]}], ",", "\"\<ETA\>\""}], "]"}], 
      ";"}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{"Ground", " ", "set", " ", "of", " ", "input", " ", "matroid"}], 
     "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"groundM", "=", 
      RowBox[{"First", "[", "M", "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Ground", " ", "set", " ", "of", " ", "the", " ", "wedge", " ", 
       "power"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"groundN", "=", 
      RowBox[{"Subsets", "[", 
       RowBox[{"groundM", ",", 
        RowBox[{"{", "k", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"congruenceClassRepresentatives", "=", 
      RowBox[{"Keys", "@", 
       RowBox[{"WedgeCongruences", "[", 
        RowBox[{"M", ",", "k", ",", "False"}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"FQ", "[", 
      RowBox[{"groundN", ",", "congruenceClassRepresentatives"}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7625465507172437`*^9, 3.762546576727087*^9}, {
  3.762546694358101*^9, 3.762546838685458*^9}, {3.762547626290888*^9, 
  3.7625476446474237`*^9}, {3.7625476970967655`*^9, 3.7625476979739184`*^9}, {
  3.762557176492126*^9, 3.7625571792284584`*^9}, {3.7884534369900894`*^9, 
  3.788453483874668*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"612106ff-7137-401d-9d48-dc81077dc6f3"]
}, Closed]],

Cell[CellGroupData[{

Cell["MatroidalQTimeEstimate", "Subsubsection",
 CellChangeTimes->{{3.7625472562644563`*^9, 
  3.7625472590497026`*^9}},ExpressionUUID->"3d1e0498-c63f-4206-abf9-\
92a19dc16dac"],

Cell[BoxData[
 RowBox[{
  RowBox[{"MatroidalQTimeEstimate", "[", 
   RowBox[{"M_", ",", "k_"}], "]"}], ":=", "\"\<FIXME\>\""}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7625472667895317`*^9, 3.7625472832150664`*^9}, {
  3.788453417859903*^9, 3.788453418277793*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"c3407913-d618-4aa2-b9e2-533198299981"]
}, Closed]],

Cell[CellGroupData[{

Cell["BendCongruences", "Subsubsection",
 CellChangeTimes->{{3.7398191343611145`*^9, 3.739819137814238*^9}, {
  3.739826161526616*^9, 3.7398261651204987`*^9}, {3.7398284907469497`*^9, 
  3.7398284935507975`*^9}, {3.7408719753645005`*^9, 3.740871984645501*^9}, {
  3.7411946220401115`*^9, 3.741194624866495*^9}, {3.741303174958145*^9, 
  3.7413031870986223`*^9}, {3.741307798494377*^9, 3.741307807384468*^9}, {
  3.7413078374789333`*^9, 
  3.741307837784236*^9}},ExpressionUUID->"b8955a4e-671f-413e-9f7c-\
2a65b763877c"],

Cell[TextData[{
 "Generates the congruences corresponding to a set of linear forms and a \
ground set E. ie. ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[ScriptCapitalB]", "(", 
    RowBox[{
     SubscriptBox["x", "1"], "+", 
     SubscriptBox["x", "2"], "+", 
     SubscriptBox["x", "3"]}], ")"}], TraditionalForm]],ExpressionUUID->
  "0fac31e2-d94f-4bbd-b35c-6374ca2185ea"],
 " kind of stuff.\nEach form should be given as a list, ie. ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["x", "1"], "+", 
     SubscriptBox["x", "2"], "+", 
     SubscriptBox["x", "3"]}], "=", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], TraditionalForm]],
  ExpressionUUID->"0700c9b5-8339-42e4-a103-bb36f7a7fdec"],
 ". This matches how I represent things like circuits, which can also be \
viewed as linear forms.\n\nNote that this can produce the same results as \
QuotientModule[], but QuotientModule[] uses the isomorphism to the lattice of \
flats to greatly simplify things.\nThis function is for more general settings \
where a matroidal interpretation may not exist, such as ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["\[Wedge]", "k"], 
    SubscriptBox["Q", "M"]}], TraditionalForm]],ExpressionUUID->
  "a944f7e2-91f7-427f-be47-1db4b8bd4512"],
 " kinds of things.\n\nSetting the 3rd parameter to False suppresses outputs, \
and only returns the congruences classes as a list (no graph of the \
congruences is printed)."
}], "Text",
 CellChangeTimes->{{3.739819459438512*^9, 3.7398194937722044`*^9}, {
   3.741194632316579*^9, 3.741194638758173*^9}, {3.741194669930271*^9, 
   3.74119467612047*^9}, {3.7411947172050576`*^9, 3.7411947427628756`*^9}, {
   3.7413083804514074`*^9, 3.7413084742033405`*^9}, {3.7413085759777966`*^9, 
   3.7413086198101573`*^9}, {3.746843537530808*^9, 3.7468436605873146`*^9}, {
   3.755886739987491*^9, 3.755886748730733*^9}, {3.7588139066214523`*^9, 
   3.758813920995383*^9}, {3.7588139847708673`*^9, 3.758813993922758*^9}, {
   3.7588566252291927`*^9, 3.7588566445509605`*^9}, {3.75885704164168*^9, 
   3.7588570888114214`*^9}, 3.758857131053373*^9, {3.7588571753312206`*^9, 
   3.7588572077789035`*^9}, {3.7597958548883*^9, 3.759795855075861*^9}, 
   3.7884536225195136`*^9},ExpressionUUID->"d4704d73-2277-40c2-b6e3-\
29894a1bf323"],

Cell[TextData[{
 StyleBox["How it works: ",
  FontWeight->"Bold"],
 "see Nicolas Bolle\[CloseCurlyQuote]s honors thesis, TCNJ 2019 under Dr. \
Marcus\nInput: a ground set ",
 Cell[BoxData[
  FormBox["E", TraditionalForm]],ExpressionUUID->
  "7251f872-0d5c-428a-a384-339cc0263be2"],
 " and set of linear forms ",
 StyleBox["forms",
  FontSlant->"Italic"],
 "\nOutput: a list of elements ",
 Cell[BoxData[
  FormBox[
   RowBox[{"r", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["s", "1"], ",", "..."}], "}"}]}], TraditionalForm]],
  ExpressionUUID->"a76cf897-8fd7-4f2e-8291-1ce6d5350f3c"],
 " associating a representative ",
 Cell[BoxData[
  FormBox["r", TraditionalForm]],ExpressionUUID->
  "7430bd63-5b09-4e81-9f35-41c4c22b93ae"],
 " to its congruence class of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["s", "i"], TraditionalForm]],ExpressionUUID->
  "31712375-41ac-42db-a4ff-787619db00ed"],
 "\n\nOne step that isn\[CloseCurlyQuote]t totally explained in the honor\
\[CloseCurlyQuote]s thesis is when it loops over pairs ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["s", "1"], ",", 
    SubscriptBox["s", "2"]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "a8eaf437-4e4a-4130-806a-4bb1bff04812"],
 " and merges the trees of ",
 Cell[BoxData[
  FormBox[
   OverscriptBox[
    RowBox[{
     OverscriptBox[
      SubscriptBox["s", "1"], "_"], "+", 
     OverscriptBox[
      SubscriptBox["s", "2"], "_"]}], "_"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "2e3b59f4-2719-41fb-9869-97200f276cb5"],
 " and ",
 Cell[BoxData[
  FormBox[
   OverscriptBox[
    RowBox[{
     SubscriptBox["s", "1"], "+", 
     SubscriptBox["s", "2"]}], "_"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "6bdd8c45-0423-4aec-912d-3d1eba739e6c"],
 ". The thinking is that we have the congruences ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["s", "1"], "~", 
    OverscriptBox[
     SubscriptBox["s", "1"], "_"]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "49e58b68-2608-4613-841b-da7e1a38717a"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["s", "2"], "~", 
    OverscriptBox[
     SubscriptBox["s", "2"], "_"]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "31abd4da-8aee-410a-a3f3-5192402ef8fd"],
 " so for it to be closed as a submodule we would want the congruence ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["s", "1"], "+", 
    RowBox[{
     SubscriptBox["s", "2"], "~", 
     OverscriptBox[
      SubscriptBox["s", "1"], "_"]}], "+", 
    OverscriptBox[
     SubscriptBox["s", "2"], "_"]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "dd562bbe-b02f-423f-bc06-d3c5b2f392d0"],
 ". But remember that when we add congruences we don\[CloseCurlyQuote]t add \
them directly: we merge the ",
 StyleBox["trees",
  FontSlant->"Italic"],
 " of the relevant elements. Those trees are represented by the elements ",
 Cell[BoxData[
  FormBox[
   OverscriptBox[
    RowBox[{
     OverscriptBox[
      SubscriptBox["s", "1"], "_"], "+", 
     OverscriptBox[
      SubscriptBox["s", "2"], "_"]}], "_"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "cb295524-0100-4605-bbc4-727dd58c894b"],
 " and ",
 Cell[BoxData[
  FormBox[
   OverscriptBox[
    RowBox[{
     SubscriptBox["s", "1"], "+", 
     SubscriptBox["s", "2"]}], "_"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "b2ee5dec-7669-43a6-a4c7-a03f27b38f70"],
 ".\n"
}], "Text",
 CellChangeTimes->{{3.7597970974082546`*^9, 3.759797156314124*^9}, {
  3.7597972616799946`*^9, 3.7597973217507696`*^9}, {3.759797363142026*^9, 
  3.7597977310638723`*^9}, {3.7597977654594507`*^9, 3.759798194233296*^9}, {
  3.7597991316889286`*^9, 3.7597995176723847`*^9}, {3.759863444442212*^9, 
  3.759863446564642*^9}, {3.7598876684461927`*^9, 3.7598876704174824`*^9}, {
  3.788453540397242*^9, 3.78845357030619*^9}, {3.788453628651311*^9, 
  3.7884536306395254`*^9}, {3.788453672847124*^9, 3.7884537379064817`*^9}, {
  3.7884793110158963`*^9, 3.7884793431918545`*^9}, {3.7884793816868773`*^9, 
  3.788479458430694*^9}, {3.788479493837989*^9, 3.78847965995576*^9}, {
  3.788479702809165*^9, 3.7884797321277637`*^9}, {3.7884822342240143`*^9, 
  3.788482249136176*^9}},ExpressionUUID->"1e307ae6-20dd-42f5-b4eb-\
a19ddb7aa0e2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"BendCongruences", "[", 
   RowBox[{"E_", ",", "forms_", ",", 
    RowBox[{"debug_:", "True"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "t1", ",", "t2", ",", "subsets", ",", "l", ",", "reps", ",", "getRoot", 
      ",", "bend", ",", "\[IndentingNewLine]", "s1", ",", "s2", ",", "r1", 
      ",", "r2", ",", "noChangeCount", ",", "totalPairs", ",", "i", ",", 
      "lastChangeIndex", ",", "lastChangePair", ",", "\[IndentingNewLine]", 
      "classes", ",", "keys", ",", "data"}], "}"}], ",", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"t1", "=", 
      RowBox[{"AbsoluteTime", "[", "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"Useful", " ", "variables"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"subsets", "=", 
      RowBox[{"Subsets", "[", "E", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"l", "=", 
      SuperscriptBox["2", 
       RowBox[{"Length", "[", "E", "]"}]]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"Set", " ", "trivial", " ", "representatives"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"reps", "=", 
      RowBox[{"Association", "@", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"s", "\[Rule]", "s"}], ",", 
         RowBox[{"{", 
          RowBox[{"s", ",", "subsets"}], "}"}]}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Define", " ", "a", " ", "function", " ", "to", " ", "simplify", " ", 
       "things"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"getRoot", "[", "s_", "]"}], ":=", 
      RowBox[{"FixedPoint", "[", 
       RowBox[{"reps", ",", "s"}], "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
, "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Set", " ", "bend", " ", "congruences", " ", "representatives"}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Loop", " ", "over", " ", "linear", " ", "forms", " ", "and", " ", 
       "bends", " ", "of", " ", "the", " ", "linear", " ", "forms"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"Do", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"bend", "=", 
         RowBox[{"Drop", "[", 
          RowBox[{"form", ",", 
           RowBox[{"{", "i", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"reps", "[", "bend", "]"}], "\[Equal]", "bend"}], ",", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"Case", " ", "1"}], ":", " ", 
            RowBox[{
            "the", " ", "bend", " ", "is", " ", "in", " ", "a", " ", 
             "singleton", " ", "tree"}]}], "*)"}], "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"reps", "[", "bend", "]"}], "=", "form"}], ",", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"Case", " ", "2"}], ":", " ", 
            RowBox[{
            "the", " ", "bend", " ", "is", " ", "in", " ", "a", " ", 
             "nontrivial", " ", "tree"}]}], "*)"}], "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"r1", "=", 
            RowBox[{"getRoot", "[", "bend", "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"r2", "=", 
            RowBox[{"getRoot", "[", "form", "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"reps", "[", "r1", "]"}], "=", 
            RowBox[{
             RowBox[{"reps", "[", "r2", "]"}], "=", 
             RowBox[{"Union", "[", 
              RowBox[{"r1", ",", "r2"}], "]"}]}]}]}]}], "\[IndentingNewLine]",
          "\[IndentingNewLine]", "]"}]}], ",", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"form", ",", "forms"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "form", "]"}]}], "}"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
, "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Print", " ", "how", " ", "long", " ", "the", " ", "first", " ", "part",
        " ", "took"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{"debug", ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"t2", "=", 
         RowBox[{"AbsoluteTime", "[", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Echo", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"ToString", "[", 
            RowBox[{"Round", "[", 
             RowBox[{
              RowBox[{"t2", "-", "t1"}], ",", "0.01"}], "]"}], "]"}], "<>", 
           "\"\< seconds\>\""}], ",", "\"\<Trivial and bend relations\>\""}], 
         "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"Print", "[", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
     ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
, "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Generate", " ", "new", " ", "congruences", " ", "to", " ", "close", 
       " ", "it", " ", "as", " ", "a", " ", "submodule"}], "*)"}], 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"So", " ", "that", " ", "we", " ", "know", " ", "when", " ", 
       RowBox[{"we", "'"}], "ve", " ", "checked", " ", "every", " ", "pair"}],
       "*)"}], "\[IndentingNewLine]", 
     RowBox[{"i", "=", "0"}], ";", "\[IndentingNewLine]", 
     RowBox[{"noChangeCount", "=", "0"}], ";", "\[IndentingNewLine]", 
     RowBox[{"totalPairs", "=", 
      RowBox[{"Binomial", "[", 
       RowBox[{"l", ",", "2"}], "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"Loop", " ", "until", " ", "the", " ", 
       RowBox[{"Throw", "[", "]"}], " ", "statement", " ", "exits", " ", 
       "the", " ", "loop"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Catch", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"While", "[", 
        RowBox[{"True", ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Do", "[", "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"i", "++"}], ";", "\[IndentingNewLine]", 
             "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{"The", " ", "sets", " ", "involved"}], "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{"s1", "=", 
              RowBox[{"subsets", "[", 
               RowBox[{"[", "i1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"s2", "=", 
              RowBox[{"subsets", "[", 
               RowBox[{"[", "i2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"r1", "=", 
              RowBox[{"getRoot", "[", 
               RowBox[{"Union", "[", 
                RowBox[{"s1", ",", "s2"}], "]"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"r2", "=", 
              RowBox[{"getRoot", "[", 
               RowBox[{"Union", "[", 
                RowBox[{
                 RowBox[{"getRoot", "[", "s1", "]"}], ",", 
                 RowBox[{"getRoot", "[", "s2", "]"}]}], "]"}], "]"}]}], ";", 
             "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{"Merge", " ", "trees", " ", "if", " ", "necessary"}], 
              "*)"}], "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"r1", "\[Equal]", "r2"}], ",", "\[IndentingNewLine]", 
               "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{
                "If", " ", "no", " ", "merging", " ", "was", " ", 
                 "necessary"}], "*)"}], "\[IndentingNewLine]", 
               RowBox[{"noChangeCount", "++"}], ",", "\[IndentingNewLine]", 
               "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{
                "If", " ", "we", " ", "need", " ", "to", " ", "merge", " ", 
                 "trees"}], "*)"}], "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"noChangeCount", "=", "0"}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"lastChangeIndex", "=", "i"}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"lastChangePair", "=", 
                 RowBox[{"{", 
                  RowBox[{"i1", ",", "i2"}], "}"}]}], ";", 
                "\[IndentingNewLine]", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"reps", "[", "r1", "]"}], "=", 
                 RowBox[{
                  RowBox[{"reps", "[", "r2", "]"}], "=", 
                  RowBox[{"Union", "[", 
                   RowBox[{"r1", ",", "r2"}], "]"}]}]}], ";"}]}], 
              "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";", 
             "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"noChangeCount", "\[Equal]", "totalPairs"}], ",", 
               RowBox[{"Throw", "[", "0", "]"}]}], "]"}]}], ",", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"i1", ",", "l"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"i2", ",", 
              RowBox[{"i1", "+", "1"}], ",", "l"}], "}"}]}], "]"}], ";"}]}], 
        "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";"}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
, "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Print", " ", "info", " ", "about", " ", "the", " ", "looping", " ", 
       "over", " ", "pairs"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{"debug", ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"t1", "=", "t2"}], ";", "\[IndentingNewLine]", 
        RowBox[{"t2", "=", 
         RowBox[{"AbsoluteTime", "[", "]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"Echo", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"ToString", "[", 
            RowBox[{"Round", "[", 
             RowBox[{
              RowBox[{"t2", "-", "t1"}], ",", "0.01"}], "]"}], "]"}], "<>", 
           "\"\< seconds\>\""}], ",", "\"\<Looping over pairs\>\""}], "]"}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"Echo", "[", 
         RowBox[{
          RowBox[{"Length", "[", "E", "]"}], ",", "\"\<Ground set size\>\""}],
          "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"Echo", "[", 
         RowBox[{"l", ",", "\"\<Number of subsets to consider\>\""}], "]"}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"Echo", "[", 
         RowBox[{"totalPairs", ",", "\"\<Number of pairs to consider\>\""}], 
         "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"Echo", "[", 
         RowBox[{"i", ",", "\"\<Pairs looped over\>\""}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Echo", "[", 
         RowBox[{
          RowBox[{"Round", "[", 
           RowBox[{
            FractionBox["i", 
             RowBox[{"t2", "-", "t1"}]], ",", "1"}], "]"}], ",", 
          "\"\<Avg. number of pairs per second\>\""}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Echo", "[", 
         RowBox[{"lastChangeIndex", ",", "\"\<Last change index\>\""}], "]"}],
         ";", "\[IndentingNewLine]", 
        RowBox[{"Echo", "[", 
         RowBox[{
          RowBox[{"subsets", "[", 
           RowBox[{"[", "lastChangePair", "]"}], "]"}], ",", 
          "\"\<Last change pair\>\""}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"Print", "[", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
     ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
, "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Collapse", " ", "trees", " ", "into", " ", "direct", " ", "links", " ",
        "to", " ", "representatives"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Do", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"reps", "[", "s", "]"}], "=", 
        RowBox[{"reps", "[", 
         RowBox[{"reps", "[", "s", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"s", ",", 
         RowBox[{"Reverse", "[", "subsets", "]"}]}], "}"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
, "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Print", " ", "how", " ", "long", " ", "the", " ", "tree", " ", 
       "collapse", " ", "took"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{"debug", ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"t1", "=", "t2"}], ";", "\[IndentingNewLine]", 
        RowBox[{"t2", "=", 
         RowBox[{"AbsoluteTime", "[", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Echo", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"ToString", "[", 
            RowBox[{"Round", "[", 
             RowBox[{
              RowBox[{"t2", "-", "t1"}], ",", "0.01"}], "]"}], "]"}], "<>", 
           "\"\< seconds\>\""}], ",", "\"\<Tree collapse\>\""}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Print", "[", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
     ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
, "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"Reverse", "-", 
       RowBox[{"lookup", " ", "the", " ", "association"}]}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"classes", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"reps", "//", "Normal"}], "//", 
        RowBox[{"GroupBy", "[", 
         RowBox[{"Last", "\[Rule]", "First"}], "]"}]}], "//", "Sort"}]}], ";",
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
, "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Print", " ", "how", " ", "long", " ", "the", " ", "reverse"}],
        "-", 
       RowBox[{"lookup", " ", "took"}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{"debug", ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"t1", "=", "t2"}], ";", "\[IndentingNewLine]", 
        RowBox[{"t2", "=", 
         RowBox[{"AbsoluteTime", "[", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Echo", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"ToString", "[", 
            RowBox[{"Round", "[", 
             RowBox[{
              RowBox[{"t2", "-", "t1"}], ",", "0.01"}], "]"}], "]"}], "<>", 
           "\"\< seconds\>\""}], ",", "\"\<Reverse-lookup\>\""}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Print", "[", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
     ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
, "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Print", " ", "some", " ", "info", " ", "about", " ", "the", " ", 
       "classes"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{"debug", ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"For", " ", "each", " ", "congruence", " ", "class"}], ",", 
         " ", 
         RowBox[{"get", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"#", " ", "elements"}], ",", " ", 
            RowBox[{"max", " ", "element", " ", "size"}], ",", " ", 
            RowBox[{"min", " ", "element", " ", "size"}]}], "}"}]}]}], "*)"}],
        "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"keys", "=", 
         RowBox[{"Keys", "[", "classes", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"data", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"class", "=", 
             RowBox[{"classes", "[", "key", "]"}]}], ";", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Length", "[", "class", "]"}], ",", 
              RowBox[{"Length", "[", "key", "]"}], ",", 
              RowBox[{"Min", "[", 
               RowBox[{"Length", "/@", "class"}], "]"}]}], "}"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"key", ",", "keys"}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
         "Gather", " ", "by", " ", "the", " ", "first", " ", "element", " ", 
          RowBox[{"(", 
           RowBox[{
           "number", " ", "of", " ", "elements", " ", "in", " ", "the", " ", 
            "class"}], ")"}]}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"data", "=", 
         RowBox[{"GatherBy", "[", 
          RowBox[{"data", ",", "First"}], "]"}]}], ";", "\[IndentingNewLine]",
         "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"For", " ", "each", " ", "class", " ", "size"}], ",", " ", 
          RowBox[{"take", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"class", " ", "size"}], ",", " ", 
             RowBox[{
             "number", " ", "of", " ", "classes", " ", "of", " ", "this", " ",
               "size"}], ",", " ", 
             RowBox[{"max", " ", "element", " ", "size"}], ",", " ", 
             RowBox[{"min", " ", "element", " ", "size"}]}], "}"}]}]}], 
         "*)"}], "\[IndentingNewLine]", 
        RowBox[{"data", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"stats", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
             RowBox[{"Length", "[", "stats", "]"}], ",", 
             RowBox[{"Max", "[", 
              RowBox[{"stats", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], ",", 
             RowBox[{"Min", "[", 
              RowBox[{"stats", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "3"}], "]"}], "]"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"stats", ",", "data"}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"Print", " ", "it", " ", "to", " ", "a", " ", "table"}], 
         "*)"}], "\[IndentingNewLine]", 
        RowBox[{"Print", "@", 
         RowBox[{"TableForm", "[", 
          RowBox[{"Prepend", "[", 
           RowBox[{"data", ",", 
            RowBox[{"{", 
             RowBox[{
             "\"\<Class size\>\"", ",", 
              "\"\<Number of classes of this size\>\"", ",", 
              "\"\<Max elem. size\>\"", ",", "\"\<Min elem. size\>\""}], 
             "}"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"Print", "[", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<Longest linear form length: \>\"", ",", 
          RowBox[{"Max", "[", 
           RowBox[{"Length", "/@", "forms"}], "]"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Print", "[", "]"}], ";"}]}], "\[IndentingNewLine]", 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
, "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", "Return", "*)"}], "\[IndentingNewLine]", "classes"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.739657162121443*^9, 3.7396572108159075`*^9}, {
   3.73965891529156*^9, 3.739659250304077*^9}, {3.7396592820086694`*^9, 
   3.7396592932419243`*^9}, {3.739659323321437*^9, 3.739659430312687*^9}, {
   3.739659583944559*^9, 3.7396596450236464`*^9}, {3.739659711249222*^9, 
   3.739659767733537*^9}, {3.7398205262056885`*^9, 3.73982053730665*^9}, {
   3.739820620039943*^9, 3.739820620165097*^9}, {3.7398207818608856`*^9, 
   3.7398207841892176`*^9}, {3.7398208621411533`*^9, 3.739821198122527*^9}, {
   3.7398212623127174`*^9, 3.739821542447913*^9}, {3.739821697689906*^9, 
   3.7398218925231*^9}, {3.7398219466178923`*^9, 3.7398219757125545`*^9}, {
   3.7398220373864956`*^9, 3.7398220837339716`*^9}, {3.739822176424038*^9, 
   3.739822177174711*^9}, {3.7398223873099875`*^9, 3.739822522317992*^9}, {
   3.739822563539509*^9, 3.739822567463995*^9}, {3.7398226250222225`*^9, 
   3.7398227229905744`*^9}, {3.739822765017596*^9, 3.7398228000918703`*^9}, {
   3.7398239529122405`*^9, 3.7398239544310665`*^9}, {3.7398240270615454`*^9, 
   3.7398243693058124`*^9}, {3.739824777676885*^9, 3.739824787717001*^9}, {
   3.739824829673517*^9, 3.739824846228763*^9}, {3.739825011371374*^9, 
   3.7398250726071367`*^9}, {3.7398251768864655`*^9, 
   3.7398252485513153`*^9}, {3.7398252788032207`*^9, 3.739825285987414*^9}, {
   3.739825326500971*^9, 3.7398253292514343`*^9}, {3.7398272935222254`*^9, 
   3.739827294162695*^9}, {3.739827497471723*^9, 3.7398275191939464`*^9}, {
   3.7398276276248183`*^9, 3.7398276282031918`*^9}, {3.7398276794024334`*^9, 
   3.739827715516947*^9}, {3.7398281160421057`*^9, 3.739828136003452*^9}, {
   3.7406962979409237`*^9, 3.7406962981108255`*^9}, {3.740696373199278*^9, 
   3.740696373872428*^9}, {3.74119465350533*^9, 3.741194706501381*^9}, {
   3.7411947890188203`*^9, 3.74119479399639*^9}, {3.74119482511683*^9, 
   3.7411948263783293`*^9}, {3.74119486474852*^9, 3.7411949078604326`*^9}, {
   3.7411949502461157`*^9, 3.7411949539036455`*^9}, {3.741195014712055*^9, 
   3.7411950254667454`*^9}, {3.7411956724795027`*^9, 
   3.7411957937939167`*^9}, {3.7411961417391605`*^9, 
   3.7411961434037476`*^9}, {3.7411961789686103`*^9, 
   3.7411961961912947`*^9}, {3.741196494910161*^9, 3.74119649562933*^9}, {
   3.7411965349653416`*^9, 3.741196541916092*^9}, {3.741196590076883*^9, 
   3.7411965952204638`*^9}, {3.741197370170768*^9, 3.741197418991952*^9}, {
   3.7411974688409033`*^9, 3.741197469548561*^9}, {3.7413024448032503`*^9, 
   3.741302455342574*^9}, {3.7413049263390756`*^9, 3.7413049369525948`*^9}, {
   3.741306042012114*^9, 3.741306069619793*^9}, {3.7413068027022743`*^9, 
   3.741306901387655*^9}, {3.7413069473950415`*^9, 3.74130706821482*^9}, {
   3.7413071015091076`*^9, 3.7413072767779727`*^9}, {3.7413074708180046`*^9, 
   3.7413074738364925`*^9}, {3.7413075674979014`*^9, 
   3.7413076466178875`*^9}, {3.758809734953844*^9, 3.7588097360589385`*^9}, {
   3.758810191798527*^9, 3.758810195372614*^9}, {3.7588102764963517`*^9, 
   3.758810311223621*^9}, {3.758810544272314*^9, 3.7588105549346466`*^9}, {
   3.7588130445749702`*^9, 3.7588130473286386`*^9}, {3.7588137928038645`*^9, 
   3.7588139006082315`*^9}, {3.758814796385403*^9, 3.7588148021834664`*^9}, {
   3.7588149002847524`*^9, 3.75881490094447*^9}, {3.758814948700163*^9, 
   3.7588149492993383`*^9}, {3.7588567159745035`*^9, 
   3.7588569057789803`*^9}, {3.7588586667209*^9, 3.758858698241683*^9}, {
   3.759778004464902*^9, 3.759778144180566*^9}, {3.75977818445632*^9, 
   3.759778289331794*^9}, {3.7597783390691347`*^9, 3.7597783606433945`*^9}, {
   3.759778394390486*^9, 3.759778451787382*^9}, {3.7597890814059615`*^9, 
   3.7597891171203113`*^9}, {3.75978919914086*^9, 3.759789226487215*^9}, {
   3.75978935140639*^9, 3.7597893640025*^9}, {3.759789440578972*^9, 
   3.7597894880209846`*^9}, {3.7597895288389325`*^9, 
   3.7597895448329544`*^9}, {3.75979025373321*^9, 3.759790261800138*^9}, {
   3.759790797377412*^9, 3.7597908192311115`*^9}, {3.75979085363382*^9, 
   3.7597908884404306`*^9}, {3.759791032096551*^9, 3.759791033136301*^9}, {
   3.759791182540925*^9, 3.7597912098523407`*^9}, {3.7597912535821*^9, 
   3.759791291539196*^9}, {3.759791333093207*^9, 3.7597916113712893`*^9}, {
   3.7597916555247436`*^9, 3.7597916630494413`*^9}, {3.7597916978374333`*^9, 
   3.759791755015139*^9}, {3.7597918640687747`*^9, 3.759792187421211*^9}, {
   3.7597922511680827`*^9, 3.7597923003117313`*^9}, {3.7597926379870815`*^9, 
   3.759792722968795*^9}, {3.7597927652492895`*^9, 3.7597928398243313`*^9}, {
   3.7597929013209686`*^9, 3.759792939673715*^9}, {3.7597929783885417`*^9, 
   3.7597930108257575`*^9}, {3.7597930727569065`*^9, 3.759793148372652*^9}, {
   3.759793287071237*^9, 3.7597933126721582`*^9}, {3.7597933910318613`*^9, 
   3.7597936099873285`*^9}, {3.759793639995591*^9, 3.7597939168251953`*^9}, {
   3.7597942377059917`*^9, 3.7597942976232204`*^9}, {3.759794348173505*^9, 
   3.759794350859348*^9}, {3.759794596599536*^9, 3.7597945971506844`*^9}, {
   3.759794738793059*^9, 3.759794751343072*^9}, {3.7597948005101013`*^9, 
   3.7597949162819233`*^9}, {3.7597949592306986`*^9, 3.759795096434147*^9}, {
   3.7597952513128924`*^9, 3.7597953736248417`*^9}, {3.7597956694999685`*^9, 
   3.7597957930291185`*^9}, {3.759795905941003*^9, 3.759795923205026*^9}, {
   3.7597962860309196`*^9, 3.759796937207677*^9}, {3.7597970255375605`*^9, 
   3.7597970893327217`*^9}, {3.7597971629288425`*^9, 3.759797258153927*^9}, {
   3.7597973293881583`*^9, 3.759797357321482*^9}, {3.759797750463684*^9, 
   3.7597977571369324`*^9}, {3.7597988115910997`*^9, 
   3.7597988203267756`*^9}, {3.7597990085570354`*^9, 3.759799027119296*^9}, {
   3.759799058647063*^9, 3.7597991167959805`*^9}, {3.759863470902711*^9, 
   3.7598635064435635`*^9}, {3.7598826635983505`*^9, 3.759882708345831*^9}, {
   3.7598827445766497`*^9, 3.759882780048582*^9}, {3.759882815979077*^9, 
   3.75988292880902*^9}, {3.759882973932289*^9, 3.759882982897189*^9}, {
   3.7598836692053356`*^9, 3.759883675891887*^9}, {3.75988410893967*^9, 
   3.759884125437316*^9}, {3.759884161052729*^9, 3.75988431399816*^9}, {
   3.759884399681056*^9, 3.759884476404441*^9}, {3.7598858234403706`*^9, 
   3.759885837195244*^9}, {3.759886227384783*^9, 3.759886261153043*^9}, {
   3.7598863009312263`*^9, 3.759886408003977*^9}, {3.7598864537291403`*^9, 
   3.7598865802043047`*^9}, {3.7598866186771193`*^9, 3.759886632540333*^9}, {
   3.7598866661241894`*^9, 3.759886683323352*^9}, {3.7598867421197557`*^9, 
   3.759886782286008*^9}, {3.7598868258891373`*^9, 3.7598868861333804`*^9}, {
   3.7598871133736506`*^9, 3.759887122768029*^9}, {3.759887472468807*^9, 
   3.759887581731924*^9}, {3.7598876147406607`*^9, 3.759887617038866*^9}, {
   3.759959340803406*^9, 3.759959347890682*^9}, {3.759959576666585*^9, 
   3.759959596536339*^9}, {3.7599596330175457`*^9, 3.7599596555425014`*^9}, {
   3.759959761674302*^9, 3.759959787130278*^9}, {3.7599601221878757`*^9, 
   3.7599601338884816`*^9}, {3.7600070345427413`*^9, 3.760007035374004*^9}, {
   3.7600082661753373`*^9, 3.7600083170398216`*^9}, {3.7600083758325195`*^9, 
   3.7600084984059925`*^9}, {3.7600085536698866`*^9, 
   3.7600085539246283`*^9}, {3.760008642147493*^9, 3.7600087317798986`*^9}, {
   3.7600579191471233`*^9, 3.76005794742925*^9}, {3.7600582553518524`*^9, 
   3.7600582845527115`*^9}, {3.7600589382689567`*^9, 
   3.7600589656816626`*^9}, {3.7600591004773846`*^9, 
   3.7600592652473736`*^9}, {3.760059302645703*^9, 3.7600593036616936`*^9}, {
   3.7600593499316545`*^9, 3.7600593500847073`*^9}, {3.760059424154172*^9, 
   3.7600594313601894`*^9}, {3.760059480864492*^9, 3.7600594864059405`*^9}, {
   3.7600595212256303`*^9, 3.760059562277524*^9}, {3.7600599336330037`*^9, 
   3.7600599728046303`*^9}, {3.760060095516642*^9, 3.760060105410697*^9}, {
   3.760060968471569*^9, 3.76006102299461*^9}, {3.7600610873753586`*^9, 
   3.760061130578936*^9}, {3.760061215973153*^9, 3.7600612212316008`*^9}, {
   3.760061255033254*^9, 3.760061255475193*^9}, {3.7600613298953505`*^9, 
   3.760061420064084*^9}, {3.760061479059719*^9, 3.7600614845378866`*^9}, {
   3.760061548294913*^9, 3.7600616200738*^9}, {3.76006180662241*^9, 
   3.7600621014708805`*^9}, {3.7600621725341682`*^9, 3.760062176597193*^9}, {
   3.76006225590747*^9, 3.760062259869027*^9}, {3.7600623019665146`*^9, 
   3.760062482569672*^9}, 3.7600625365097203`*^9, {3.7600625704572444`*^9, 
   3.760062660840457*^9}, {3.7600627047347*^9, 3.760062816826657*^9}, {
   3.7601187677506523`*^9, 3.7601188699427805`*^9}, {3.760118944473979*^9, 
   3.760118951969629*^9}, 3.7601189875356417`*^9, {3.7601190650031676`*^9, 
   3.7601190661082077`*^9}, {3.7601190981939573`*^9, 
   3.7601191274254456`*^9}, {3.7601191645294933`*^9, 3.760119199771871*^9}, {
   3.7601192533007126`*^9, 3.760119274312143*^9}, {3.7601193120390635`*^9, 
   3.7601193277394896`*^9}, {3.7601193673205924`*^9, 
   3.7601193679078665`*^9}, {3.7601196604504423`*^9, 3.760119670524313*^9}, {
   3.7601197112061405`*^9, 3.7601197970827703`*^9}, {3.7601198365722103`*^9, 
   3.7601198451458874`*^9}, {3.7601200695013885`*^9, 3.760120102115967*^9}, {
   3.7601204131383233`*^9, 3.7601204307874064`*^9}, {3.7601204992085648`*^9, 
   3.760120655191596*^9}, {3.760120690755192*^9, 3.7601208496202497`*^9}, {
   3.7601209406453066`*^9, 3.7601209523708067`*^9}, {3.76012104782024*^9, 
   3.7601210705453815`*^9}, {3.760121204320199*^9, 3.7601212346168118`*^9}, {
   3.7601215033868775`*^9, 3.7601215471788816`*^9}, {3.7601215860214977`*^9, 
   3.7601216518195715`*^9}, {3.760122075487773*^9, 3.7601220828289795`*^9}, {
   3.7602314182254934`*^9, 3.7602314426721525`*^9}, {3.7602315239298553`*^9, 
   3.760231552774646*^9}, {3.760295689166211*^9, 3.760295699350108*^9}, {
   3.762558701625296*^9, 3.76255874272283*^9}, {3.7625588507674227`*^9, 
   3.7625589875847273`*^9}, {3.762559026082881*^9, 3.7625590488541985`*^9}, {
   3.7625591337596636`*^9, 3.762559141276527*^9}, {3.7626007479027357`*^9, 
   3.762600748918664*^9}, {3.7884798332134504`*^9, 3.7884802683269525`*^9}, {
   3.7884803180290437`*^9, 3.7884803193145676`*^9}, {3.788480428082754*^9, 
   3.788480428674163*^9}, {3.7884804802342863`*^9, 3.788480486476593*^9}, {
   3.788480536149729*^9, 3.7884805438621445`*^9}, {3.7884805917889442`*^9, 
   3.7884806437939167`*^9}, {3.7884807051139402`*^9, 
   3.7884807236952133`*^9}, {3.788480970068404*^9, 3.788480992725904*^9}, {
   3.78848103492609*^9, 3.78848107538686*^9}, {3.788481188713855*^9, 
   3.788481254945702*^9}, {3.7884812928693285`*^9, 3.7884815475682*^9}, {
   3.7884816373640776`*^9, 3.788482059283858*^9}, {3.7884820987941976`*^9, 
   3.788482109865561*^9}, {3.7884823189095564`*^9, 3.7884823254560504`*^9}, {
   3.78848236180485*^9, 3.7884823757495975`*^9}, {3.7884824109185157`*^9, 
   3.7884824969893885`*^9}, {3.788482566071657*^9, 3.7884826489460425`*^9}, {
   3.788483678142885*^9, 3.7884836987447596`*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"cec98484-980a-44c5-94ac-eecf5f7c5aee"]
}, Open  ]],

Cell[CellGroupData[{

Cell["WedgeCongruences", "Subsubsection",
 CellChangeTimes->{{3.746840864991587*^9, 
  3.7468408678997583`*^9}},ExpressionUUID->"6e538c29-4609-40ab-a297-\
c75d7c69ed56"],

Cell["\<\
Applies bend congruences for a wedge power of a matroid

Note: this would work just as well if it used PreExpectedCircuits[]. I haven\
\[CloseCurlyQuote]t noticed any significant differences in computation time, \
so I\[CloseCurlyQuote]m just using ExpectedCircuits[] since it avoids the \
minimality computation in PreExpectedCircuits[]. But maybe for bigger \
matroids there is some difference.\
\>", "Text",
 CellChangeTimes->{{3.746840872594556*^9, 3.7468408823145847`*^9}, {
  3.788453776862331*^9, 3.7884538055757227`*^9}, {3.788454143476985*^9, 
  3.7884542126625896`*^9}},ExpressionUUID->"5ea7ad73-da27-48d0-8604-\
ec25f3126f22"],

Cell[BoxData[
 RowBox[{
  RowBox[{"WedgeCongruences", "[", 
   RowBox[{"M_", ",", "k_", ",", 
    RowBox[{"output_:", "True"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"Cpre", ",", "wedgeE"}], "}"}], ",", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{"The", " ", "ground", " ", "set"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"wedgeE", "=", 
      RowBox[{"Subsets", "[", 
       RowBox[{
        RowBox[{"Ground", "[", "M", "]"}], ",", 
        RowBox[{"{", "k", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"The", " ", "linear", " ", "forms"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"Cpre", "=", 
      RowBox[{"PreExpectedCircuits", "[", 
       RowBox[{"M", ",", "k"}], "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"BendCongruences", "[", 
      RowBox[{"wedgeE", ",", "Cpre", ",", "output"}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7468408844839144`*^9, 3.7468409357361135`*^9}, {
  3.7468409717774725`*^9, 3.74684103942756*^9}, {3.7588096566619377`*^9, 
  3.7588096845796404`*^9}, {3.7588103467412252`*^9, 3.7588103776670675`*^9}, {
  3.758810440532033*^9, 3.758810450105767*^9}, {3.7588105610670195`*^9, 
  3.758810561206781*^9}, {3.758813953758422*^9, 3.7588139633437223`*^9}, {
  3.758819856139143*^9, 3.7588198695645742`*^9}, {3.7588199735880337`*^9, 
  3.7588199741716876`*^9}, {3.75979550800587*^9, 3.7597955252012424`*^9}, {
  3.7884536037978983`*^9, 3.7884536055243216`*^9}, {3.7884539227050023`*^9, 
  3.7884539230103273`*^9}, {3.7884540520102673`*^9, 3.7884540522720685`*^9}, {
  3.788454111673383*^9, 3.7884541391842346`*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"51148694-e3e3-418b-a116-a770e441136d"]
}, Closed]],

Cell[CellGroupData[{

Cell["WedgeLattice", "Subsubsection",
 CellChangeTimes->{{3.7475331551090193`*^9, 3.747533157640185*^9}, {
  3.7475344520402527`*^9, 
  3.7475344526936197`*^9}},ExpressionUUID->"cef45ad3-9106-46e0-b9f4-\
89bc8a2df8a6"],

Cell["\<\
Similar to WedgeCongruences, but also displays a lattice
Maybe this could be used to guess if a wedge power is matroidal, by checking \
if its lattice of congruence class representatives looks like a lattice of \
flats\
\>", "Text",
 CellChangeTimes->{{3.758856445971117*^9, 3.7588564768431263`*^9}, {
  3.758856655859412*^9, 3.758856679534443*^9}, {3.7884542965704255`*^9, 
  3.788454359191267*^9}, {3.7884544343329906`*^9, 3.788454448342947*^9}, {
  3.788456535462331*^9, 3.7884565550913935`*^9}, {3.7884577224776597`*^9, 
  3.7884577859535646`*^9}},ExpressionUUID->"024ceefe-1a79-4037-b6b9-\
be1002292b90"],

Cell[BoxData[
 RowBox[{
  RowBox[{"WedgeLattice", "[", 
   RowBox[{"M_", ",", "k_", ",", 
    RowBox[{"output_:", "True"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "Cexp", ",", "wedgeE", ",", "components", ",", "representatives", ",", 
      "CexpDD", ",", "Cwedge", ",", "Mwedge", ",", "f", ",", "levels"}], 
     "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{"First", " ", "apply", " ", "WedgeCongruences"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"components", "=", 
      RowBox[{"WedgeCongruences", "[", 
       RowBox[{"M", ",", "k", ",", "output"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"Pick", " ", "the", " ", "representatives"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"representatives", "=", 
      RowBox[{"Sort", "@", 
       RowBox[{"Keys", "@", "components"}]}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"Print", " ", "the", " ", "lattice"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "@", 
      RowBox[{"Lattice", "[", "representatives", "]"}]}], ";", 
     "\[IndentingNewLine]", "components"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7475331639089913`*^9, 3.747533181213303*^9}, {
   3.747533451943647*^9, 3.7475334676893144`*^9}, {3.7475335204695196`*^9, 
   3.7475336554220676`*^9}, {3.747533748011592*^9, 3.7475337676222353`*^9}, {
   3.747534059802114*^9, 3.7475340622712083`*^9}, {3.7475341233101006`*^9, 
   3.7475341288693204`*^9}, {3.7475341833623066`*^9, 
   3.7475342061361675`*^9}, {3.74753445520537*^9, 3.747534455809127*^9}, {
   3.758809901986705*^9, 3.758809902118641*^9}, 3.758809945076169*^9, 
   3.758810771302493*^9, {3.758814516263775*^9, 3.7588145229707975`*^9}, {
   3.758814568372563*^9, 3.758814569070931*^9}, {3.758853018227323*^9, 
   3.758853020834548*^9}, {3.7588563937096047`*^9, 3.75885639405114*^9}, {
   3.758856486102512*^9, 3.758856598695657*^9}, {3.758857020600465*^9, 
   3.7588570291780653`*^9}, {3.7588572275740643`*^9, 
   3.7588574847974033`*^9}, {3.7588575292754154`*^9, 
   3.7588575298548555`*^9}, {3.758857668684163*^9, 3.758857677215567*^9}, {
   3.7588579461457844`*^9, 3.758857947265192*^9}, {3.758858023976697*^9, 
   3.7588580268006587`*^9}, {3.7588583087071733`*^9, 3.758858309406496*^9}, {
   3.7884542199789467`*^9, 3.7884542760554433`*^9}, {3.788454454113367*^9, 
   3.7884544635205984`*^9}, {3.7884545421995993`*^9, 3.788454617561805*^9}, {
   3.788455431278588*^9, 3.7884554559882174`*^9}, {3.7884555388133764`*^9, 
   3.7884555798060665`*^9}, {3.7884556144609613`*^9, 3.788455618512663*^9}, {
   3.7884556791488843`*^9, 3.7884557005406375`*^9}, {3.7884558280224752`*^9, 
   3.788455848118964*^9}, {3.7884559027822914`*^9, 3.7884559358621235`*^9}, {
   3.7884560041996517`*^9, 3.788456021788562*^9}, {3.7884560524337215`*^9, 
   3.7884560546019506`*^9}, {3.7884561332666655`*^9, 
   3.7884562259453535`*^9}, {3.788456339531266*^9, 3.7884563673297057`*^9}, {
   3.788456422823141*^9, 3.7884564353362083`*^9}, {3.7884564790055723`*^9, 
   3.788456525875896*^9}, {3.788457682948045*^9, 3.788457713575964*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"ab1c380c-3de7-479f-8ba8-d7467bffa598"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"WedgeLattice", "[", 
  RowBox[{
   RowBox[{"UniformMatroid", "[", 
    RowBox[{"3", ",", "4"}], "]"}], ",", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.747533771181258*^9, 3.7475337819422464`*^9}, {
  3.7475340445891294`*^9, 3.747534045924466*^9}, {3.7475344647647867`*^9, 
  3.747534466876733*^9}, {3.7884543832730675`*^9, 3.788454398954069*^9}, {
  3.7884544667227907`*^9, 3.788454466800074*^9}},
 CellLabel->
  "In[318]:=",ExpressionUUID->"76b932bc-843c-46b8-b51f-9a2b82561267"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Trivial and bend relations\"\>",
   "EchoLabel"], " ", "\<\"0. seconds\"\>"}]], "Echo",
 CellChangeTimes->{
  3.78848265399454*^9},ExpressionUUID->"0f4cdea5-a5d1-408e-b6bc-71ff8f138810"],

Cell[BoxData["\<\"\"\>"], "Print",
 CellChangeTimes->{{3.758857463520957*^9, 3.7588575327060757`*^9}, {
   3.7884543842030272`*^9, 3.7884543994365444`*^9}, 3.788454467178577*^9, 
   3.788454506587119*^9, 3.788455582596337*^9, 3.7884556197670717`*^9, 
   3.7884557074150734`*^9, {3.7884558329173927`*^9, 3.788455849816594*^9}, 
   3.7884559194712887`*^9, 3.78845598931124*^9, 3.7884560564365945`*^9, 
   3.788456235796981*^9, 3.7884563471073513`*^9, 3.788456436337221*^9, 
   3.788456494124179*^9, 3.788457715257083*^9, {3.7884822587883596`*^9, 
   3.788482277357671*^9}, 3.7884824409282665`*^9, 3.7884825018214483`*^9, {
   3.7884826248265057`*^9, 3.788482654032441*^9}},
 CellLabel->
  "During evaluation of \
In[318]:=",ExpressionUUID->"a8ab1be0-16df-458e-b5b6-dad12efea688"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Looping over pairs\"\>",
   "EchoLabel"], " ", "\<\"0.11 seconds\"\>"}]], "Echo",
 CellChangeTimes->{
  3.7884826541171775`*^9},ExpressionUUID->"adb1b9c7-ccc2-4001-af5f-\
e10f78beae23"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Ground set size\"\>",
   "EchoLabel"], " ", "6"}]], "Echo",
 CellChangeTimes->{
  3.788482654152085*^9},ExpressionUUID->"92e30ce3-218f-46cd-a090-\
3ea51a78147e"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Number of subsets to consider\"\>",
   "EchoLabel"], " ", "64"}]], "Echo",
 CellChangeTimes->{
  3.788482654197962*^9},ExpressionUUID->"78e0cd37-2638-49f4-88b7-\
2a2c39366734"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Number of pairs to consider\"\>",
   "EchoLabel"], " ", "2016"}]], "Echo",
 CellChangeTimes->{
  3.788482654232902*^9},ExpressionUUID->"022d51ea-29d3-44ba-880c-\
cd354683fbea"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Pairs looped over\"\>",
   "EchoLabel"], " ", "2295"}]], "Echo",
 CellChangeTimes->{
  3.7884826542787476`*^9},ExpressionUUID->"f2be1d0f-b11e-46a6-8758-\
89c6833b7c91"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Avg time spent per pair\"\>",
   "EchoLabel"], " ", "\<\"0.000046 seconds\"\>"}]], "Echo",
 CellChangeTimes->{
  3.788482654313652*^9},ExpressionUUID->"8bfff427-2082-452b-b341-\
e6c3e9718d6c"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Last change index\"\>",
   "EchoLabel"], " ", "279"}]], "Echo",
 CellChangeTimes->{
  3.7884826543595667`*^9},ExpressionUUID->"17c05a10-082b-4a50-aa42-\
1dadd61a0a93"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Last change pair\"\>",
   "EchoLabel"], " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3"}], "}"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3", ",", "4"}], "}"}]}], "}"}]}], "}"}]}]], "Echo",
 CellChangeTimes->{
  3.7884826543974285`*^9},ExpressionUUID->"45d833fd-0851-4e2a-bd50-\
ec70ed27f9d7"],

Cell[BoxData["\<\"\"\>"], "Print",
 CellChangeTimes->{{3.758857463520957*^9, 3.7588575327060757`*^9}, {
   3.7884543842030272`*^9, 3.7884543994365444`*^9}, 3.788454467178577*^9, 
   3.788454506587119*^9, 3.788455582596337*^9, 3.7884556197670717`*^9, 
   3.7884557074150734`*^9, {3.7884558329173927`*^9, 3.788455849816594*^9}, 
   3.7884559194712887`*^9, 3.78845598931124*^9, 3.7884560564365945`*^9, 
   3.788456235796981*^9, 3.7884563471073513`*^9, 3.788456436337221*^9, 
   3.788456494124179*^9, 3.788457715257083*^9, {3.7884822587883596`*^9, 
   3.788482277357671*^9}, 3.7884824409282665`*^9, 3.7884825018214483`*^9, {
   3.7884826248265057`*^9, 3.788482654440335*^9}},
 CellLabel->
  "During evaluation of \
In[318]:=",ExpressionUUID->"008aa6c3-4a5a-402c-8954-2f5a0445032a"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Tree collapse\"\>",
   "EchoLabel"], " ", "\<\"0.34 seconds\"\>"}]], "Echo",
 CellChangeTimes->{
  3.7884826544492893`*^9},ExpressionUUID->"a484288b-4d68-40fa-8175-\
b1203a3431ab"],

Cell[BoxData["\<\"\"\>"], "Print",
 CellChangeTimes->{{3.758857463520957*^9, 3.7588575327060757`*^9}, {
   3.7884543842030272`*^9, 3.7884543994365444`*^9}, 3.788454467178577*^9, 
   3.788454506587119*^9, 3.788455582596337*^9, 3.7884556197670717`*^9, 
   3.7884557074150734`*^9, {3.7884558329173927`*^9, 3.788455849816594*^9}, 
   3.7884559194712887`*^9, 3.78845598931124*^9, 3.7884560564365945`*^9, 
   3.788456235796981*^9, 3.7884563471073513`*^9, 3.788456436337221*^9, 
   3.788456494124179*^9, 3.788457715257083*^9, {3.7884822587883596`*^9, 
   3.788482277357671*^9}, 3.7884824409282665`*^9, 3.7884825018214483`*^9, {
   3.7884826248265057`*^9, 3.7884826544802065`*^9}},
 CellLabel->
  "During evaluation of \
In[318]:=",ExpressionUUID->"577359c5-69ad-4cd3-8de9-89def52ed64e"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Reverse-lookup\"\>",
   "EchoLabel"], " ", "\<\"0.05 seconds\"\>"}]], "Echo",
 CellChangeTimes->{
  3.7884826544901805`*^9},ExpressionUUID->"7d93024e-9346-46f6-bd5d-\
6ac860bdfb59"],

Cell[BoxData["\<\"\"\>"], "Print",
 CellChangeTimes->{{3.758857463520957*^9, 3.7588575327060757`*^9}, {
   3.7884543842030272`*^9, 3.7884543994365444`*^9}, 3.788454467178577*^9, 
   3.788454506587119*^9, 3.788455582596337*^9, 3.7884556197670717`*^9, 
   3.7884557074150734`*^9, {3.7884558329173927`*^9, 3.788455849816594*^9}, 
   3.7884559194712887`*^9, 3.78845598931124*^9, 3.7884560564365945`*^9, 
   3.788456235796981*^9, 3.7884563471073513`*^9, 3.788456436337221*^9, 
   3.788456494124179*^9, 3.788457715257083*^9, {3.7884822587883596`*^9, 
   3.788482277357671*^9}, 3.7884824409282665`*^9, 3.7884825018214483`*^9, {
   3.7884826248265057`*^9, 3.7884826545310707`*^9}},
 CellLabel->
  "During evaluation of \
In[318]:=",ExpressionUUID->"46da05d7-f5ec-45e6-9d3a-b413c9feba97"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"Class size\"\>", "\<\"Number of classes of this size\"\>", "\<\"Max \
elem. size\"\>", "\<\"Min elem. size\"\>"},
    {"1", "10", "2", "0"},
    {"4", "4", "3", "2"},
    {"38", "1", "6", "3"}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Print",
 CellChangeTimes->{{3.758857463520957*^9, 3.7588575327060757`*^9}, {
   3.7884543842030272`*^9, 3.7884543994365444`*^9}, 3.788454467178577*^9, 
   3.788454506587119*^9, 3.788455582596337*^9, 3.7884556197670717`*^9, 
   3.7884557074150734`*^9, {3.7884558329173927`*^9, 3.788455849816594*^9}, 
   3.7884559194712887`*^9, 3.78845598931124*^9, 3.7884560564365945`*^9, 
   3.788456235796981*^9, 3.7884563471073513`*^9, 3.788456436337221*^9, 
   3.788456494124179*^9, 3.788457715257083*^9, {3.7884822587883596`*^9, 
   3.788482277357671*^9}, 3.7884824409282665`*^9, 3.7884825018214483`*^9, {
   3.7884826248265057`*^9, 3.788482654538052*^9}},
 CellLabel->
  "During evaluation of \
In[318]:=",ExpressionUUID->"e62755e2-fd16-4115-a5f9-baec5a1a4e73"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Longest linear form length: \"\>", "\[InvisibleSpace]", "3"}],
  SequenceForm["Longest linear form length: ", 3],
  Editable->False]], "Print",
 CellChangeTimes->{{3.758857463520957*^9, 3.7588575327060757`*^9}, {
   3.7884543842030272`*^9, 3.7884543994365444`*^9}, 3.788454467178577*^9, 
   3.788454506587119*^9, 3.788455582596337*^9, 3.7884556197670717`*^9, 
   3.7884557074150734`*^9, {3.7884558329173927`*^9, 3.788455849816594*^9}, 
   3.7884559194712887`*^9, 3.78845598931124*^9, 3.7884560564365945`*^9, 
   3.788456235796981*^9, 3.7884563471073513`*^9, 3.788456436337221*^9, 
   3.788456494124179*^9, 3.788457715257083*^9, {3.7884822587883596`*^9, 
   3.788482277357671*^9}, 3.7884824409282665`*^9, 3.7884825018214483`*^9, {
   3.7884826248265057`*^9, 3.788482654542055*^9}},
 CellLabel->
  "During evaluation of \
In[318]:=",ExpressionUUID->"d5355a1a-12ad-4b49-968b-32aca7a28e30"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{{}, {{1, 2}}, {{1, 3}}, {{1, 4}}, {{2, 3}}, {{2, 4}}, {{3, 4}}, {{
       1, 2}, {3, 4}}, {{1, 3}, {2, 4}}, {{1, 4}, {2, 3}}, {{1, 2}, {1, 3}, {
       1, 4}}, {{1, 2}, {2, 3}, {2, 4}}, {{1, 3}, {2, 3}, {3, 4}}, {{1, 4}, {
       2, 4}, {3, 4}}, {{1, 2}, {1, 3}, {1, 4}, {2, 3}, {2, 4}, {3, 4}}}, {
       SparseArray[
       Automatic, {15, 15}, 0, {
        1, {{0, 0, 1, 2, 3, 4, 5, 6, 8, 10, 12, 15, 18, 21, 24, 31}, {{1}, {
          1}, {1}, {1}, {1}, {1}, {2}, {7}, {3}, {6}, {4}, {5}, {2}, {3}, {
          4}, {2}, {5}, {6}, {3}, {5}, {7}, {4}, {6}, {7}, {8}, {9}, {10}, {
          11}, {12}, {13}, {14}}}, Pattern}], Null}, {
      GraphLayout -> {"PackingLayout" -> "Layered"}, 
       VertexLabels -> {"Name"}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
        ArrowBox[{{-3., 1.}, {0., 0.}}, 0.04847715736040609], 
        ArrowBox[{{-2., 1.}, {0., 0.}}, 0.04847715736040609], 
        ArrowBox[{{1., 1.}, {0., 0.}}, 0.04847715736040609], 
        ArrowBox[{{2., 1.}, {0., 0.}}, 0.04847715736040609], 
        ArrowBox[{{0., 1.}, {0., 0.}}, 0.04847715736040609], 
        ArrowBox[{{-1., 1.}, {0., 0.}}, 0.04847715736040609], 
        ArrowBox[{{-4., 2.}, {-3., 1.}}, 0.04847715736040609], 
        ArrowBox[{{-4., 2.}, {-1., 1.}}, 0.04847715736040609], 
        ArrowBox[{{-2., 2.}, {-2., 1.}}, 0.04847715736040609], 
        ArrowBox[{{-2., 2.}, {0., 1.}}, 0.04847715736040609], 
        ArrowBox[{{2., 2.}, {1., 1.}}, 0.04847715736040609], 
        ArrowBox[{{2., 2.}, {2., 1.}}, 0.04847715736040609], 
        ArrowBox[{{-3., 2.}, {-3., 1.}}, 0.04847715736040609], 
        ArrowBox[{{-3., 2.}, {-2., 1.}}, 0.04847715736040609], 
        ArrowBox[{{-3., 2.}, {1., 1.}}, 0.04847715736040609], 
        ArrowBox[{{-1., 2.}, {-3., 1.}}, 0.04847715736040609], 
        ArrowBox[{{-1., 2.}, {2., 1.}}, 0.04847715736040609], 
        ArrowBox[{{-1., 2.}, {0., 1.}}, 0.04847715736040609], 
        ArrowBox[{{0., 2.}, {-2., 1.}}, 0.04847715736040609], 
        ArrowBox[{{0., 2.}, {2., 1.}}, 0.04847715736040609], 
        ArrowBox[{{0., 2.}, {-1., 1.}}, 0.04847715736040609], 
        ArrowBox[{{1., 2.}, {1., 1.}}, 0.04847715736040609], 
        ArrowBox[{{1., 2.}, {0., 1.}}, 0.04847715736040609], 
        ArrowBox[{{1., 2.}, {-1., 1.}}, 0.04847715736040609], 
        ArrowBox[{{-1., 3.}, {-4., 2.}}, 0.04847715736040609], 
        ArrowBox[{{-1., 3.}, {-2., 2.}}, 0.04847715736040609], 
        ArrowBox[{{-1., 3.}, {2., 2.}}, 0.04847715736040609], 
        ArrowBox[{{-1., 3.}, {-3., 2.}}, 0.04847715736040609], 
        ArrowBox[{{-1., 3.}, {-1., 2.}}, 0.04847715736040609], 
        ArrowBox[{{-1., 3.}, {0., 2.}}, 0.04847715736040609], 
        ArrowBox[{{-1., 3.}, {1., 2.}}, 0.04847715736040609]}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {DiskBox[{0., 0.}, 0.04847715736040609], InsetBox[
          RowBox[{"{", "}"}], 
          Offset[{2, 2}, {0.04847715736040609, 0.04847715736040609}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{-3., 1.}, 0.04847715736040609], 
         InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "2"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {-2.951522842639594, 1.0484771573604061}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{-2., 1.}, 0.04847715736040609], 
         InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "3"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {-1.9515228426395939, 1.0484771573604061}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{1., 1.}, 0.04847715736040609], 
         InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "4"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {1.0484771573604061, 1.0484771573604061}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{2., 1.}, 0.04847715736040609], 
         InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"2", "3"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {2.048477157360406, 1.0484771573604061}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{0., 1.}, 0.04847715736040609], 
         InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"2", "4"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {0.04847715736040609, 1.0484771573604061}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{-1., 1.}, 0.04847715736040609], 
         InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"3", "4"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {-0.9515228426395939, 1.0484771573604061}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{-4., 2.}, 0.04847715736040609], 
         InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "2"},
             {"3", "4"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {-3.951522842639594, 2.048477157360406}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{-2., 2.}, 0.04847715736040609], 
         InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "3"},
             {"2", "4"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {-1.9515228426395939, 2.048477157360406}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{2., 2.}, 0.04847715736040609], 
         InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "4"},
             {"2", "3"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {2.048477157360406, 2.048477157360406}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{-3., 2.}, 0.04847715736040609], 
         InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "2"},
             {"1", "3"},
             {"1", "4"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {-2.951522842639594, 2.048477157360406}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{-1., 2.}, 0.04847715736040609], 
         InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "2"},
             {"2", "3"},
             {"2", "4"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {-0.9515228426395939, 2.048477157360406}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{0., 2.}, 0.04847715736040609], 
         InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "3"},
             {"2", "3"},
             {"3", "4"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {0.04847715736040609, 2.048477157360406}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{1., 2.}, 0.04847715736040609], 
         InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "4"},
             {"2", "4"},
             {"3", "4"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {1.0484771573604061, 2.048477157360406}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{-1., 3.}, 0.04847715736040609], 
         InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "2"},
             {"1", "3"},
             {"1", "4"},
             {"2", "3"},
             {"2", "4"},
             {"3", "4"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {-0.9515228426395939, 3.048477157360406}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Print",
 CellChangeTimes->{{3.758857463520957*^9, 3.7588575327060757`*^9}, {
   3.7884543842030272`*^9, 3.7884543994365444`*^9}, 3.788454467178577*^9, 
   3.788454506587119*^9, 3.788455582596337*^9, 3.7884556197670717`*^9, 
   3.7884557074150734`*^9, {3.7884558329173927`*^9, 3.788455849816594*^9}, 
   3.7884559194712887`*^9, 3.78845598931124*^9, 3.7884560564365945`*^9, 
   3.788456235796981*^9, 3.7884563471073513`*^9, 3.788456436337221*^9, 
   3.788456494124179*^9, 3.788457715257083*^9, {3.7884822587883596`*^9, 
   3.788482277357671*^9}, 3.7884824409282665`*^9, 3.7884825018214483`*^9, {
   3.7884826248265057`*^9, 3.788482654612853*^9}},
 CellLabel->
  "During evaluation of \
In[318]:=",ExpressionUUID->"4af9e5e4-35a4-4548-83aa-7109702817ee"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{
    RowBox[{"{", "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"{", "}"}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2"}], "}"}], "}"}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3"}], "}"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"1", ",", "3"}], "}"}], "}"}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"1", ",", "4"}], "}"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"1", ",", "4"}], "}"}], "}"}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3"}], "}"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"2", ",", "3"}], "}"}], "}"}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"2", ",", "4"}], "}"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"2", ",", "4"}], "}"}], "}"}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"3", ",", "4"}], "}"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"3", ",", "4"}], "}"}], "}"}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3", ",", "4"}], "}"}]}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "4"}], "}"}]}], "}"}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "4"}], "}"}]}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "4"}], "}"}]}], "}"}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "3"}], "}"}]}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "3"}], "}"}]}], "}"}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "4"}], "}"}]}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "3"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "4"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "4"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "4"}], "}"}]}], "}"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "4"}], "}"}]}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "4"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "4"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "4"}], "}"}]}], "}"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3", ",", "4"}], "}"}]}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "4"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "4"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "4"}], "}"}]}], "}"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3", ",", "4"}], "}"}]}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "4"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "4"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "4"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "4"}], "}"}]}], "}"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3", ",", "4"}], "}"}]}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "4"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "4"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "4"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "4"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "4"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "4"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "4"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "4"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "4"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "4"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "4"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "4"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "4"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "4"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "4"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "4"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "4"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "4"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "4"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "4"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "4"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "4"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "4"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "4"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "4"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "4"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "4"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "4"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "4"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "4"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "4"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "4"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "4"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "4"}], "}"}]}], "}"}]}], "}"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.747534041189295*^9, 3.747534064092928*^9}, 
   3.7475341307366247`*^9, 3.7475341861675806`*^9, 3.747534218942893*^9, 
   3.747534259577983*^9, {3.7475343843493786`*^9, 3.7475344041365023`*^9}, 
   3.7475344678047724`*^9, {3.7588574635457554`*^9, 3.7588575327219477`*^9}, 
   3.7884543848742313`*^9, 3.7884544162061253`*^9, 3.788454467841716*^9, 
   3.7884545072702303`*^9, 3.7884555832212763`*^9, 3.78845562038243*^9, 
   3.7884557080658417`*^9, {3.7884558335756845`*^9, 3.7884558504794855`*^9}, 
   3.788455920159858*^9, 3.788455989958191*^9, 3.7884560571019373`*^9, 
   3.7884562364663677`*^9, 3.78845634781812*^9, 3.788456436959008*^9, 
   3.788456494763601*^9, 3.788457715921252*^9, {3.788482259269047*^9, 
   3.78848227797602*^9}, 3.7884824415805607`*^9, 3.7884825025136156`*^9, {
   3.788482625505689*^9, 3.788482654665713*^9}},
 CellLabel->
  "Out[318]=",ExpressionUUID->"943e6e5b-4902-468a-8331-9367c8a1e056"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["VisualizeCongruences", "Subsubsection",
 CellChangeTimes->{{3.7615260536751933`*^9, 
  3.7615260563469906`*^9}},ExpressionUUID->"63f84fee-95af-4b4b-b0bf-\
ac914ac8bdc7"],

Cell["Prints two graphs visualizing a set of congruence classes", "Text",
 CellChangeTimes->{{3.7615260597637587`*^9, 3.7615260664748535`*^9}, {
  3.788457829962778*^9, 3.788457832455026*^9}, {3.7884821541282177`*^9, 
  3.7884821549509983`*^9}},ExpressionUUID->"c9e6086c-bb02-487d-86c7-\
c10b2d92cf55"],

Cell[BoxData[
 RowBox[{
  RowBox[{"VisualizeCongruences", "[", "classes_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"reps", ",", "E", ",", "edges"}], "}"}], ",", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
     "One", " ", "that", " ", "connects", " ", "congruence", " ", "classes"}],
      "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"reps", "=", 
      RowBox[{"Keys", "[", "classes", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"E", "=", 
      RowBox[{"Last", "[", "reps", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"edges", "=", 
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"child", "\[DirectedEdge]", "rep"}], ",", 
        RowBox[{"{", 
         RowBox[{"rep", ",", "reps"}], "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"child", ",", 
          RowBox[{"Complement", "[", 
           RowBox[{
            RowBox[{"classes", "[", "rep", "]"}], ",", 
            RowBox[{"{", "rep", "}"}]}], "]"}]}], "}"}]}], 
       "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"edges", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{"edges", ",", "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "@", 
      RowBox[{"Graph", "[", 
       RowBox[{
        RowBox[{"Subsets", "[", "E", "]"}], ",", "edges", ",", 
        RowBox[{"VertexLabels", "\[Rule]", "Automatic"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"And", " ", "one", " ", "for", " ", "the", " ", "lattice"}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Print", "@", 
      RowBox[{"Lattice", "@", "reps"}]}]}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7615260679912105`*^9, 3.761526163372296*^9}, {
   3.761526195340914*^9, 3.7615264291001463`*^9}, {3.7884578374965954`*^9, 
   3.7884578844939184`*^9}, 3.788482144807161*^9},
 CellLabel->"In[41]:=",ExpressionUUID->"3b65c432-b311-4daa-9a1d-5b4a46a5bacf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"classes", "=", 
   RowBox[{"WedgeCongruences", "[", 
    RowBox[{
     RowBox[{"UniformMatroid", "[", 
      RowBox[{"3", ",", "4"}], "]"}], ",", "2"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7625464133770885`*^9, 3.7625464302839365`*^9}},
 CellLabel->
  "In[185]:=",ExpressionUUID->"b0667fc5-ecec-49d6-b63c-0059114c0253"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Trivial and bend\"\>",
   "EchoLabel"], " ", "0``7.451544993495973"}]], "Echo",
 CellChangeTimes->{
  3.78845788712442*^9},ExpressionUUID->"992501f6-6ac5-48d7-b422-edba0f8899ce"],

Cell[BoxData["\<\"\"\>"], "Print",
 CellChangeTimes->{3.7625464310148773`*^9, 3.788457887158927*^9},
 CellLabel->
  "During evaluation of \
In[185]:=",ExpressionUUID->"462ff15a-6811-46fb-b064-6a9eed6f83fc"],

Cell[BoxData["\<\"\"\>"], "Print",
 CellChangeTimes->{3.7625464310148773`*^9, 3.7884578872229137`*^9},
 CellLabel->
  "During evaluation of \
In[185]:=",ExpressionUUID->"fd77b2da-0ae3-4833-898e-41a6ad15eb12"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Remaining set\"\>",
   "EchoLabel"], " ", "0.0933482`6.421650941516429"}]], "Echo",
 CellChangeTimes->{
  3.788457887232812*^9},ExpressionUUID->"e94ac703-4a43-4c9c-97ee-\
19c067efa6c4"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Ground set size\"\>",
   "EchoLabel"], " ", "6"}]], "Echo",
 CellChangeTimes->{
  3.7884578872681894`*^9},ExpressionUUID->"922b869a-ace6-4b31-8551-\
f44171060e2a"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Number of subsets\"\>",
   "EchoLabel"], " ", "64"}]], "Echo",
 CellChangeTimes->{
  3.788457887315064*^9},ExpressionUUID->"bda78841-1f59-4d1a-8c37-\
5d910f450d9a"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Number of pairs\"\>",
   "EchoLabel"], " ", "2016"}]], "Echo",
 CellChangeTimes->{
  3.7884578873509684`*^9},ExpressionUUID->"476d5abe-3ce9-44ba-8ed1-\
a6c9ab8baaac"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Iterations needed\"\>",
   "EchoLabel"], " ", "2295"}]], "Echo",
 CellChangeTimes->{
  3.7884578873958483`*^9},ExpressionUUID->"bad4247f-ac8e-4f45-b20b-\
aef27baf4c2a"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Avg time per iteration\"\>",
   "EchoLabel"], " ", "0.0000406745969498911`3."}]], "Echo",
 CellChangeTimes->{
  3.7884578874307547`*^9},ExpressionUUID->"1c161caa-612c-4007-a178-\
9e6031a8ab29"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Loops done\"\>",
   "EchoLabel"], " ", "1.1383928571428572`"}]], "Echo",
 CellChangeTimes->{
  3.7884578874767637`*^9},ExpressionUUID->"c63506fc-9950-4b00-8620-\
f2312165a089"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Changes done each loop\"\>",
   "EchoLabel"], " ", 
  RowBox[{"{", 
   RowBox[{"34", ",", "0"}], "}"}]}]], "Echo",
 CellChangeTimes->{
  3.7884578875118065`*^9},ExpressionUUID->"f03709fb-a654-4626-a006-\
40dfd431ce65"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Last change index\"\>",
   "EchoLabel"], " ", "279"}]], "Echo",
 CellChangeTimes->{
  3.7884578875638733`*^9},ExpressionUUID->"998b2daa-209b-4cab-9bee-\
1bdc1eb344f6"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Last change pair\"\>",
   "EchoLabel"], " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3"}], "}"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3", ",", "4"}], "}"}]}], "}"}]}], "}"}]}]], "Echo",
 CellChangeTimes->{
  3.788457887600775*^9},ExpressionUUID->"36db89c0-ecb2-472c-94fe-\
7a74d15d9595"],

Cell[BoxData["\<\"\"\>"], "Print",
 CellChangeTimes->{3.7625464310148773`*^9, 3.788457887641665*^9},
 CellLabel->
  "During evaluation of \
In[185]:=",ExpressionUUID->"efe17ebc-6744-45ae-937f-af93463f9039"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Tree collapsed\"\>",
   "EchoLabel"], " ", "0.423895`7.078803287428629"}]], "Echo",
 CellChangeTimes->{
  3.78845788765182*^9},ExpressionUUID->"e111121d-28ff-4d79-8082-695825990bd8"],

Cell[BoxData["\<\"\"\>"], "Print",
 CellChangeTimes->{3.7625464310148773`*^9, 3.7884578876817026`*^9},
 CellLabel->
  "During evaluation of \
In[185]:=",ExpressionUUID->"e2f0347f-9016-45e8-b6c7-ed9415675ade"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"Class size\"\>", "\<\"#\"\>", "\<\"Max elem. size\"\>", "\<\"Min \
elem. size\"\>"},
    {"1", "10", "2", "0"},
    {"4", "4", "3", "2"},
    {"38", "1", "6", "3"}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Print",
 CellChangeTimes->{3.7625464310148773`*^9, 3.7884578876885405`*^9},
 CellLabel->
  "During evaluation of \
In[185]:=",ExpressionUUID->"9f6de093-fb72-4f91-a764-4275d82b8ecc"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Longest linear form length: \"\>", "\[InvisibleSpace]", "3"}],
  SequenceForm["Longest linear form length: ", 3],
  Editable->False]], "Print",
 CellChangeTimes->{3.7625464310148773`*^9, 3.788457887693527*^9},
 CellLabel->
  "During evaluation of \
In[185]:=",ExpressionUUID->"d7aa72f7-6f1d-4626-a810-06689b08e9ad"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"VisualizeCongruences", "[", "classes", "]"}]], "Input",
 CellChangeTimes->{{3.7615264057391405`*^9, 3.7615264088811464`*^9}, {
  3.7625464369845457`*^9, 3.7625464384698486`*^9}},
 CellLabel->
  "In[186]:=",ExpressionUUID->"8a97b5ce-071a-4e3a-aed2-380781930b73"],

Cell[CellGroupData[{

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{{}, {{1, 2}}, {{1, 3}}, {{1, 4}}, {{2, 3}}, {{2, 4}}, {{3, 4}}, {{
       1, 2}, {1, 3}}, {{1, 2}, {1, 4}}, {{1, 2}, {2, 3}}, {{1, 2}, {2, 
       4}}, {{1, 2}, {3, 4}}, {{1, 3}, {1, 4}}, {{1, 3}, {2, 3}}, {{1, 3}, {2,
        4}}, {{1, 3}, {3, 4}}, {{1, 4}, {2, 3}}, {{1, 4}, {2, 4}}, {{1, 4}, {
       3, 4}}, {{2, 3}, {2, 4}}, {{2, 3}, {3, 4}}, {{2, 4}, {3, 4}}, {{1, 
       2}, {1, 3}, {1, 4}}, {{1, 2}, {1, 3}, {2, 3}}, {{1, 2}, {1, 3}, {2, 
       4}}, {{1, 2}, {1, 3}, {3, 4}}, {{1, 2}, {1, 4}, {2, 3}}, {{1, 2}, {1, 
       4}, {2, 4}}, {{1, 2}, {1, 4}, {3, 4}}, {{1, 2}, {2, 3}, {2, 4}}, {{1, 
       2}, {2, 3}, {3, 4}}, {{1, 2}, {2, 4}, {3, 4}}, {{1, 3}, {1, 4}, {2, 
       3}}, {{1, 3}, {1, 4}, {2, 4}}, {{1, 3}, {1, 4}, {3, 4}}, {{1, 3}, {2, 
       3}, {2, 4}}, {{1, 3}, {2, 3}, {3, 4}}, {{1, 3}, {2, 4}, {3, 4}}, {{1, 
       4}, {2, 3}, {2, 4}}, {{1, 4}, {2, 3}, {3, 4}}, {{1, 4}, {2, 4}, {3, 
       4}}, {{2, 3}, {2, 4}, {3, 4}}, {{1, 2}, {1, 3}, {1, 4}, {2, 3}}, {{1, 
       2}, {1, 3}, {1, 4}, {2, 4}}, {{1, 2}, {1, 3}, {1, 4}, {3, 4}}, {{1, 
       2}, {1, 3}, {2, 3}, {2, 4}}, {{1, 2}, {1, 3}, {2, 3}, {3, 4}}, {{1, 
       2}, {1, 3}, {2, 4}, {3, 4}}, {{1, 2}, {1, 4}, {2, 3}, {2, 4}}, {{1, 
       2}, {1, 4}, {2, 3}, {3, 4}}, {{1, 2}, {1, 4}, {2, 4}, {3, 4}}, {{1, 
       2}, {2, 3}, {2, 4}, {3, 4}}, {{1, 3}, {1, 4}, {2, 3}, {2, 4}}, {{1, 
       3}, {1, 4}, {2, 3}, {3, 4}}, {{1, 3}, {1, 4}, {2, 4}, {3, 4}}, {{1, 
       3}, {2, 3}, {2, 4}, {3, 4}}, {{1, 4}, {2, 3}, {2, 4}, {3, 4}}, {{1, 
       2}, {1, 3}, {1, 4}, {2, 3}, {2, 4}}, {{1, 2}, {1, 3}, {1, 4}, {2, 3}, {
       3, 4}}, {{1, 2}, {1, 3}, {1, 4}, {2, 4}, {3, 4}}, {{1, 2}, {1, 3}, {2, 
       3}, {2, 4}, {3, 4}}, {{1, 2}, {1, 4}, {2, 3}, {2, 4}, {3, 4}}, {{1, 
       3}, {1, 4}, {2, 3}, {2, 4}, {3, 4}}, {{1, 2}, {1, 3}, {1, 4}, {2, 3}, {
       2, 4}, {3, 4}}}, {{{8, 23}, {9, 23}, {13, 23}, {10, 30}, {11, 30}, {20,
        30}, {14, 37}, {16, 37}, {21, 37}, {18, 41}, {19, 41}, {22, 41}, {24, 
       64}, {25, 64}, {26, 64}, {27, 64}, {28, 64}, {29, 64}, {31, 64}, {32, 
       64}, {33, 64}, {34, 64}, {35, 64}, {36, 64}, {38, 64}, {39, 64}, {40, 
       64}, {42, 64}, {43, 64}, {44, 64}, {45, 64}, {46, 64}, {47, 64}, {48, 
       64}, {49, 64}, {50, 64}, {51, 64}, {52, 64}, {53, 64}, {54, 64}, {55, 
       64}, {56, 64}, {57, 64}, {58, 64}, {59, 64}, {60, 64}, {61, 64}, {62, 
       64}, {63, 64}}, Null}, {VertexLabels -> {Automatic}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.025602832693438653`], 
        ArrowBox[CompressedData["
1:eJxTTMoPSmVmYGAwBGImKJ6RlCewiuWDfcyusk61V+IH5I51FQkof7Bf92tr
UvtL4QMe6p5HJVcesmewnKbT+VgQQ37tglOz7HbxOHxqadzC08Z3oPDSjdOF
J3kcprEypJ9rYTtwjfGFXvUjVgerpgO/LlYwYcjv/Ff3YAP/P/uc6RJzdn/C
bX6klvaaGfm/9sP0O4UHKFncerIfZj7UnRjyMP91L3Oc8H2HANz8XWcZL28o
4IT7L87rUNqWFFYM+fjyTMaH9wUdhOyP3jSbjul+mPyBL1O2pvcfwbAf5j8z
9uOuks2Y5vdM1Qp89+C5PYcT180JTRf2T5yWb/G99Yv9uzqee67/Pu/nXvEh
4mvvY/uONLnr6//exZAXz9rGMeHTP/sGB24fdp63GPLOX+dyNh39aS+Q0MWS
NuEIhrx0nJqF2PGH9kJXTxpmR//CkNd6djLo6+oX9nNefjH3EH2FIX/41OFf
6V+/2/99G1hiwPAPQz7jr5mf4b2f9i/8/lYULGY8gC5vtkBVM+8Rk8MbnmL/
ltrXGPoZL299saL+n73KuZ13i/f9wZBfdiapU3LLFfs4ERm+UHdM+xNezFp1
59kX+wBo+kCX7zuxdwVL7Rv7Kg1vyzx1TPP/bng/M+cQk0OlgcQvTv3fGPJs
dYvurBS8br9HoKT0VvQjDHmvTUVXHvt+sy9VldSbyM+M4X93LYMsLtl/9reS
1I28H2OGzyZuAwG18zfsRRp8503lxwyfVbvYvMKFPtkbn9bo8ZFiwNAf4fo9
Y2XLI3uVma0njszHlPd4d3ePuekp+zZTJoakjJ8Y5r9fHmRmtOelPVP6yUNl
2kwY+idbmR86b//J/hjrq0ZGiYcY+mdfe3NZR/+PfcLZ8tqNGl8x5AW53EL8
sj7a60T/L1h6D9P8suKlNYt5GR0O+t/WDMTivw+bLGK65T7YX7hidLRZCDN9
G9kEKDXY/7e/cSzYi+33JQz5BbcUPLjCfthfur9wkofOA8z08aSOMfQSg0O0
8LbJTtY/MOSh6cpebu2EtEdGHzDkPVbN8lLbftKe81KZ2o9NXzDk1f/lhp7h
Z3Io+ORw6R3LJwz5t3fsvoX3Mju0OnY4Tu3ADD/1mjf3RLIf2Yv6+3OJnv2M
IT+x8KRHcPhf+xk3M5peFGOmT+vX4omn1jA6SGyZdO6+42MMeQAsOFAc
         "], 0.04760852992210135]}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {
         DiskBox[{4.79454164844179, -0.14578554280370273}, 
          0.04760852992210135], InsetBox[
          RowBox[{"{", "}"}], 
          Offset[{2, 2}, {4.842150178363891, -0.09817701288160138}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{4.502970562834384, -5.2254327986433236}, 
          0.04760852992210135], InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "2"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {4.550579092756485, -5.177824268721222}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.6282573060121677, -5.2254327986433236}, 
          0.04760852992210135], InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "3"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {3.675865835934269, -5.177824268721222}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.045115134797357, -5.2254327986433236}, 
          0.04760852992210135], InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "4"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {3.092723664719458, -5.177824268721222}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.7535440491899514, -5.2254327986433236}, 
          0.04760852992210135], InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"2", "3"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {2.8011525791120526, -5.177824268721222}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.1704018779751406, -5.2254327986433236}, 
          0.04760852992210135], InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"2", "4"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {2.218010407897242, -5.177824268721222}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.461972963582546, -5.2254327986433236}, 
          0.04760852992210135], InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"3", "4"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {2.509581493504647, -5.177824268721222}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.001138748344749, -5.9786626318660545}, 
          0.04760852992210135], InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "2"},
             {"1", "3"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {1.0487472782668503, -5.931054101943953}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.1457855428037027, -4.472202965420593}, 
          0.04760852992210135], InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "2"},
             {"1", "4"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {0.19339407272580406, -4.424594435498491}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.5909397214018868, -3.8154539205576095}, 
          0.04760852992210135], InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "2"},
             {"2", "3"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {3.638548251323988, -3.7678453906355083}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.735586515860841, -2.3089942541121475}, 
          0.04760852992210135], InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "2"},
             {"2", "4"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {2.783195045782942, -2.2613857241900464}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.3366862204047623, -5.2254327986433236}, 
          0.04760852992210135], InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "2"},
             {"3", "4"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {3.3842947503268634, -5.177824268721222}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.878830792367735, -4.487043799401231}, 
          0.04760852992210135], InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "3"},
             {"1", "4"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {1.9264393222898364, -4.43943526947913}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.5909397214018868, -1.6522452092491646}, 
          0.04760852992210135], InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "3"},
             {"2", "3"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {3.638548251323988, -1.6046366793270632}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.919828391619573, -5.2254327986433236}, 
          0.04760852992210135], InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "3"},
             {"2", "4"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {3.9674369215416743, -5.177824268721222}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.735586515860841, -0.1457855428037027}, 
          0.04760852992210135], InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "3"},
             {"3", "4"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {2.783195045782942, -0.09817701288160136}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{4.211399477226978, -5.2254327986433236}, 
          0.04760852992210135], InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "4"},
             {"2", "3"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {4.259008007149079, -5.177824268721222}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.001138748344749, -4.180631879813187}, 
          0.04760852992210135], InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "4"},
             {"2", "4"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {1.0487472782668503, -4.1330233498910856}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.1457855428037027, -2.674172213367725}, 
          0.04760852992210135], InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "4"},
             {"3", "4"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {0.19339407272580406, -2.6265636834456236}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{4.468631765424873, -2.3238350880927863}, 
          0.04760852992210135], InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"2", "3"},
             {"2", "4"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {4.516240295346974, -2.276226558170685}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{4.468631765424873, -0.16062637678434122}, 
          0.04760852992210135], InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"2", "3"},
             {"3", "4"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {4.516240295346974, -0.11301784686223987}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.878830792367735, -2.6890130473483635}, 
          0.04760852992210135], InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"2", "4"},
             {"3", "4"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {1.9264393222898364, -2.6414045174262624}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.0085606073665825, -4.978055517537241}, 
          0.04760852992210135], InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "2"},
             {"1", "3"},
             {"1", "4"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {1.056169137288684, -4.93044698761514}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.74620738842775, -0.25796910472220747}, 
          0.04760852992210135], InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "2"},
             {"1", "3"},
             {"2", "3"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {0.7938159183498514, -0.21036057480010611}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.6110789048300388, -0.46860881812754274}, 
          0.04760852992210135], InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "2"},
             {"1", "3"},
             {"2", "4"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {0.6586874347521401, -0.4210002882054414}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.934219392808364, -0.9077183232530075}, 
          0.04760852992210135], InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "2"},
             {"1", "3"},
             {"3", "4"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {1.9818279227304654, -0.8601097933309061}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.6107197166123377, -0.16065669271188243}, 
          0.04760852992210135], InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "2"},
             {"1", "4"},
             {"2", "3"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {1.658328246534439, -0.11304816278978108}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.5555525871922699, -1.6473190255031267}, 
          0.04760852992210135], InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "2"},
             {"1", "4"},
             {"2", "4"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {0.6031611171143711, -1.5997104955810253}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.7709910027471711, -0.8150979130653471}, 
          0.04760852992210135], InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "2"},
             {"1", "4"},
             {"3", "4"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {0.8185995326692725, -0.7674893831432457}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.598361580423721, -2.814846806228796}, 
          0.04760852992210135], InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "2"},
             {"2", "3"},
             {"2", "4"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {3.645970110345822, -2.7672382763066947}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.4974136157513136, -1.8750462096930953}, 
          0.04760852992210135], InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "2"},
             {"2", "3"},
             {"3", "4"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {1.545022145673415, -1.827437679770994}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.616746240164355, -2.2048043682387863}, 
          0.04760852992210135], InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "2"},
             {"2", "4"},
             {"3", "4"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {1.6643547700864565, -2.157195838316685}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.3605616774184695, -0.859071879553452}, 
          0.04760852992210135], InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "3"},
             {"1", "4"},
             {"2", "3"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {2.4081702073405706, -0.8114633496313506}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.9061669435733963, -1.7964972172893647}, 
          0.04760852992210135], InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "3"},
             {"1", "4"},
             {"2", "4"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {1.9537754734954977, -1.7488886873672633}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.3234924165401004, -1.89241509925457}, 
          0.04760852992210135], InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "3"},
             {"1", "4"},
             {"3", "4"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {0.37110094646220176, -1.8448065693324687}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.306362787653164, -0.14578554280370293}, 
          0.04760852992210135], InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "3"},
             {"2", "3"},
             {"2", "4"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {1.3539713175752655, -0.09817701288160158}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.598361580423721, -0.6516380949203511}, 
          0.04760852992210135], InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "3"},
             {"2", "3"},
             {"3", "4"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {3.645970110345822, -0.6040295649982497}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.890261010716374, -1.7596266019850462}, 
          0.04760852992210135], InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "3"},
             {"2", "4"},
             {"3", "4"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {0.9378695406384754, -1.7120180720629448}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.344933703067112, -1.6989841241184236}, 
          0.04760852992210135], InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "4"},
             {"2", "3"},
             {"2", "4"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {2.392542232989213, -1.6513755941963222}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.36045309587822805, -0.5737125677119574}, 
          0.04760852992210135], InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "4"},
             {"2", "3"},
             {"3", "4"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {0.4080616258003294, -0.526104037789856}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.0085606073665825, -3.180024765484373}, 
          0.04760852992210135], InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "4"},
             {"2", "4"},
             {"3", "4"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {1.056169137288684, -3.132416235562272}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.3940161036254204, -2.3826011277603194}, 
          0.04760852992210135], InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"2", "3"},
             {"2", "4"},
             {"3", "4"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {1.4416246335475218, -2.334992597838218}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.8820900104498308, -2.2359832685727783}, 
          0.04760852992210135], InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "2"},
             {"1", "3"},
             {"1", "4"},
             {"2", "3"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {1.9296985403719322, -2.188374738650677}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.38764335232570624, -0.8456523982858948}, 
          0.04760852992210135], InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "2"},
             {"1", "3"},
             {"1", "4"},
             {"2", "4"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {0.4352518822478076, -0.7980438683637934}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.1294777766849315, -2.0128413152646316}, 
          0.04760852992210135], InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "2"},
             {"1", "3"},
             {"1", "4"},
             {"3", "4"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {1.177086306607033, -1.9652327853425302}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.5786940622439642, -2.07801205308637}, 
          0.04760852992210135], InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "2"},
             {"1", "3"},
             {"2", "3"},
             {"2", "4"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {0.6263025921660657, -2.030403523164269}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.20474907609956206, -1.587984085115154}, 
          0.04760852992210135], InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "2"},
             {"1", "3"},
             {"2", "3"},
             {"3", "4"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {0.2523576060216634, -1.5403755551930527}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.8042231617921497, -2.2712226121628882}, 
          0.04760852992210135], InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "2"},
             {"1", "3"},
             {"2", "4"},
             {"3", "4"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {0.851831691714251, -2.223614082240787}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.140578993468499, -0.5341804063211206}, 
          0.04760852992210135], InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "2"},
             {"1", "4"},
             {"2", "3"},
             {"2", "4"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {1.1881875233906003, -0.4865718763990193}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.7615173605276258, -1.3224348927586433}, 
          0.04760852992210135], InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "2"},
             {"1", "4"},
             {"2", "3"},
             {"3", "4"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {1.8091258904497272, -1.274826362836542}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.088453606790271, -2.3587139919212827}, 
          0.04760852992210135], InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "2"},
             {"1", "4"},
             {"2", "4"},
             {"3", "4"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {1.1360621367123724, -2.3111054619991815}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.131659482764401, -2.012850119595868}, 
          0.04760852992210135], InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "2"},
             {"2", "3"},
             {"2", "4"},
             {"3", "4"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {2.179268012686502, -1.9652415896737667}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.0074571230317666, -0.15681502465091635}, 
          0.04760852992210135], InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "3"},
             {"1", "4"},
             {"2", "3"},
             {"2", "4"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {1.055065652953868, -0.109206494728815}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.953003057514945, -0.2965713239528731}, 
          0.04760852992210135], InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "3"},
             {"1", "4"},
             {"2", "3"},
             {"3", "4"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {2.0006115874370463, -0.24896279403077176}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.5210058991921542, -0.505405699149373}, 
          0.04760852992210135], InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "3"},
             {"1", "4"},
             {"2", "4"},
             {"3", "4"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {1.5686144291142556, -0.4577971692272716}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.102701198277436, -1.5144677896471055}, 
          0.04760852992210135], InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "3"},
             {"2", "3"},
             {"2", "4"},
             {"3", "4"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {2.150309728199537, -1.466859259725004}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.14578554280370293, -1.0124229437304346}, 
          0.04760852992210135], InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "4"},
             {"2", "3"},
             {"2", "4"},
             {"3", "4"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {0.19339407272580428, -0.9648144138083332}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.20090178149014748, -1.2936936857705652}, 
          0.04760852992210135], InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "2"},
             {"1", "3"},
             {"1", "4"},
             {"2", "3"},
             {"2", "4"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {0.24851031141224883, -1.2460851558484638}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.257713954371656, -1.126204320243371}, 
          0.04760852992210135], InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "2"},
             {"1", "3"},
             {"1", "4"},
             {"2", "3"},
             {"3", "4"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {2.305322484293757, -1.0785957903212695}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.4440154302534354, -1.3458454665997988}, 
          0.04760852992210135], InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "2"},
             {"1", "3"},
             {"1", "4"},
             {"2", "4"},
             {"3", "4"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {2.4916239601755366, -1.2982369366776974}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.5755714754085418, -1.2375688936926441}, 
          0.04760852992210135], InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "2"},
             {"1", "3"},
             {"2", "3"},
             {"2", "4"},
             {"3", "4"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {0.6231800053306431, -1.1899603637705427}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.8338196604955537, -0.5766489550649565}, 
          0.04760852992210135], InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "2"},
             {"1", "4"},
             {"2", "3"},
             {"2", "4"},
             {"3", "4"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {1.881428190417655, -0.5290404251428551}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.2093703828262767, -0.6017912897710884}, 
          0.04760852992210135], InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "3"},
             {"1", "4"},
             {"2", "3"},
             {"2", "4"},
             {"3", "4"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {2.256978912748378, -0.554182759848987}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.2827064709212304, -1.2495783494741164}, 
          0.04760852992210135], InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "2"},
             {"1", "3"},
             {"1", "4"},
             {"2", "3"},
             {"2", "4"},
             {"3", "4"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {1.3303150008433318, -1.201969819552015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Print",
 CellChangeTimes->{3.788457893040772*^9},
 CellLabel->
  "During evaluation of \
In[186]:=",ImageCache->GraphicsData["CompressedBitmap", "\<\
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
4T2V4UMnPb4a8oU1syxQpGG5th2VaHZDknDDCBdIDrZihJOX2y7CmyTDE0bz
LeGQJvK2CMqB7jSM2LZ0guKJemlMbqgptFt+77oTzEV8iWeEN0OGD4wNVZJB
cnFivzwcoGWotS5SnLRt/wqWk0hGVX5kHn3yuWC7sGbgGoeaa8UI1y7yqyHD
RwgLW1piMF4y7vGnzurFIFtZlreSZaGkUI6d8HbOsHEYHsHF2IFp5gqFG23F
CGau3Qx5eNa8xR9m54z23AxpE2juzM+qh/N7LnMMxnw+zO43mEutbSJcykjr
WtTwLGUx5cnFhNiAnks4QenDs+c/wJdaIsAI+TVUbqOSTXgvsesOd8XyIpb8
iHSpw25AL2qLKf9PvBv6XJd9GllkfKl5CsJdlt6LdoVc0PS/shGuTQhYwyeg
qpJFUrCkpnediz2pMSb0ZlV8SiLSSMyQCMfP/OjBT1VC7BabEUpPxilaIrpr
BysbwUpK1wrM38qMLamCYEPlGvPUcjE8F1JiiLQKR1ETOSn4LtxmlpItiYg6
KSBTqwhfYY4PerJ1ovKW0t5VhPx8XTMjS1m5EAsnXT5w2aiFruQSRFnzDXte
saemxkS4gSXUcdojjE9fX93aTNCFH0E5o6JDwD8p6FaLMbYaYeIOShi455cL
TWnCgmvAE2BoZx4R5DRR3HA7c0MUYxJvTPAt/f6wUeP0A1ZdFeN2y30hClVy
oYzrfXwuIlXEdZSE/IYeDm9GmBr+dFhj7Bf9Ukhn7LRXfZZtegdxHcJ3y92B
yoEWysNlSfrCEYMKnfwn6TuwFUmxGVySArfwxeH3TMXlVCQZGAxGC/tS3ku5
2DwiiFZCLHYJFWmuvpxFLNc2t3Dl5qOFXXsNZmtG3sWqjCygzeBZa9q30ZYt
K/7mURqectrmwtnS1SQUjEKkcuGkLgUhHujh6RnS2QCTDo+H0LYEeJktdJep
qwvREhJEtI59wJ9wderuijh1DPTz5zab2asqXxln5hxjunnf3KtxZevf/9Yn
2X0H61vmT23ad6l18+ZNNku8p05AjYosmMDmSesz3pXrJJUiQyYTMkuskV7p
fIFEwGc0oSV4YL/KgJFWRiySiAE3Fgq4YIObsGbO7FeXbJjDzzgCh3i1BLOc
wWh+z5JNBfpptWPatGnoYq5iQpHVfu1krIORUSDXwUjncb4QMQEORbKONm8Y
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
JVdU4hHMCPCHYM4kvBRyiQL/Vg60kfhLOf1s0hWows0HTyO2GELnB5ldu8tj
zUubUwGynkZbaajFj6aA4PGfBkRjarQNWZDTKGq9QxC2mn2jxgelbQI5fHq+
eOlNjui5yzYVNmh8t2ElkEgzfI9iOeN1quJfKHynJ684/vCSJQ+iv2jVmVol
FALOmzi1j8fpU6b/S+98+o5/zj4OiGcWtGPpU6cFLlX37WDWNA0qB1fIqLBa
Rb4famXWvpyeqZQiTswdRy/g+9tNm7d0TVIeangkr0CC8lNMlS4Tn8UbdsWA
fSxJSlZ4ex1SUFNVqJLUrGHZpnEWUgryxoMsn2T1G8lRvHj1Xk5GTF6qTrIn
5YnUJuCl4uVOWX1Pznik4Okh/uEQQQwqVuUOi7PDJyzImz6rn5eKx+eve2rl
lqMX+U+citqyOt9zvSHv3g55rP4gmgH5UlyuW1K8UtXdG86P6xv1X0hqS+Hs
pRtIfHu1/4BBnKK64z8EOTwUhXyl0kJopoIrbLS9LrivUUbX4FTRaFslfUha
yurq8I0pLTLKvltjgpI4BsLFzQ6dsziuJYlJgbMk2Jg7NgitX+jVb9Djs9c8
eaVNu0742TzB/WyOJkq7N4RxMna4uxKfezT/O0n37JMPU3ev6GR26ew9NNKm
lh2y9NGbXXvmeBUPf0FBgSYf2Sy7saaL063FHsQHFig2W2rJkhlJp6es54ct
66mWH2MKDHc/wPetz0JUW/CPJBKk9N80bdaCL4G+l6W2ItBXwhtN46Xtk/5h
I89MWXH8l+lN7nZpG6Nz4ytZg++DniPBWxZFbdmIBffZvPkC7P3ywY34TPrV
ZVbiin7KBlgoWrGurNcjT/Dq1RbtQVch8T0PzIuLhLCxwaoMc9qWCktH7H8l
9epcXZcUXllYn6UM2E/7NCpCkkqWAs3//T79BxWOmTy/8K46DSlAq+5nN29J
k04Fj3c4gJ6Hx4695+yk5cdu31WviZqJ1+h07Kd/vt3DP809cxKemfrQiQUH
T74ZeNzJ17tWUkqs7lLhNHUeLdS2jCXlgNUZ9SSPffHRMSGa18mpHEFhyBlJ
mnuENIXw56m1mUjb2zhTC4WqrojoPBPH55WIR8FzQbvHx9074c8VklNPjZ8y
p//zl94lI5Ibkl5Kt87ojlAvGfHzrrwdZ7+tnNYAPxsxplL6OPinv7zab+RM
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\
\>"],ExpressionUUID->"bdf7eee3-ed4b-415a-bca0-eff4e48510ac"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{{}, {{1, 2}}, {{1, 3}}, {{1, 4}}, {{2, 3}}, {{2, 4}}, {{3, 4}}, {{
       1, 2}, {3, 4}}, {{1, 3}, {2, 4}}, {{1, 4}, {2, 3}}, {{1, 2}, {1, 3}, {
       1, 4}}, {{1, 2}, {2, 3}, {2, 4}}, {{1, 3}, {2, 3}, {3, 4}}, {{1, 4}, {
       2, 4}, {3, 4}}, {{1, 2}, {1, 3}, {1, 4}, {2, 3}, {2, 4}, {3, 4}}}, {
       SparseArray[
       Automatic, {15, 15}, 0, {
        1, {{0, 0, 1, 2, 3, 4, 5, 6, 8, 10, 12, 15, 18, 21, 24, 31}, {{1}, {
          1}, {1}, {1}, {1}, {1}, {2}, {7}, {3}, {6}, {4}, {5}, {2}, {3}, {
          4}, {2}, {5}, {6}, {3}, {5}, {7}, {4}, {6}, {7}, {8}, {9}, {10}, {
          11}, {12}, {13}, {14}}}, Pattern}], Null}, {
      GraphLayout -> {"PackingLayout" -> "Layered"}, 
       VertexLabels -> {"Name"}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
        ArrowBox[{{-3., 1.}, {0., 0.}}, 0.04847715736040609], 
        ArrowBox[{{-2., 1.}, {0., 0.}}, 0.04847715736040609], 
        ArrowBox[{{1., 1.}, {0., 0.}}, 0.04847715736040609], 
        ArrowBox[{{2., 1.}, {0., 0.}}, 0.04847715736040609], 
        ArrowBox[{{0., 1.}, {0., 0.}}, 0.04847715736040609], 
        ArrowBox[{{-1., 1.}, {0., 0.}}, 0.04847715736040609], 
        ArrowBox[{{-4., 2.}, {-3., 1.}}, 0.04847715736040609], 
        ArrowBox[{{-4., 2.}, {-1., 1.}}, 0.04847715736040609], 
        ArrowBox[{{-2., 2.}, {-2., 1.}}, 0.04847715736040609], 
        ArrowBox[{{-2., 2.}, {0., 1.}}, 0.04847715736040609], 
        ArrowBox[{{2., 2.}, {1., 1.}}, 0.04847715736040609], 
        ArrowBox[{{2., 2.}, {2., 1.}}, 0.04847715736040609], 
        ArrowBox[{{-3., 2.}, {-3., 1.}}, 0.04847715736040609], 
        ArrowBox[{{-3., 2.}, {-2., 1.}}, 0.04847715736040609], 
        ArrowBox[{{-3., 2.}, {1., 1.}}, 0.04847715736040609], 
        ArrowBox[{{-1., 2.}, {-3., 1.}}, 0.04847715736040609], 
        ArrowBox[{{-1., 2.}, {2., 1.}}, 0.04847715736040609], 
        ArrowBox[{{-1., 2.}, {0., 1.}}, 0.04847715736040609], 
        ArrowBox[{{0., 2.}, {-2., 1.}}, 0.04847715736040609], 
        ArrowBox[{{0., 2.}, {2., 1.}}, 0.04847715736040609], 
        ArrowBox[{{0., 2.}, {-1., 1.}}, 0.04847715736040609], 
        ArrowBox[{{1., 2.}, {1., 1.}}, 0.04847715736040609], 
        ArrowBox[{{1., 2.}, {0., 1.}}, 0.04847715736040609], 
        ArrowBox[{{1., 2.}, {-1., 1.}}, 0.04847715736040609], 
        ArrowBox[{{-1., 3.}, {-4., 2.}}, 0.04847715736040609], 
        ArrowBox[{{-1., 3.}, {-2., 2.}}, 0.04847715736040609], 
        ArrowBox[{{-1., 3.}, {2., 2.}}, 0.04847715736040609], 
        ArrowBox[{{-1., 3.}, {-3., 2.}}, 0.04847715736040609], 
        ArrowBox[{{-1., 3.}, {-1., 2.}}, 0.04847715736040609], 
        ArrowBox[{{-1., 3.}, {0., 2.}}, 0.04847715736040609], 
        ArrowBox[{{-1., 3.}, {1., 2.}}, 0.04847715736040609]}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {DiskBox[{0., 0.}, 0.04847715736040609], InsetBox[
          RowBox[{"{", "}"}], 
          Offset[{2, 2}, {0.04847715736040609, 0.04847715736040609}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{-3., 1.}, 0.04847715736040609], 
         InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "2"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {-2.951522842639594, 1.0484771573604061}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{-2., 1.}, 0.04847715736040609], 
         InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "3"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {-1.9515228426395939, 1.0484771573604061}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{1., 1.}, 0.04847715736040609], 
         InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "4"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {1.0484771573604061, 1.0484771573604061}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{2., 1.}, 0.04847715736040609], 
         InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"2", "3"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {2.048477157360406, 1.0484771573604061}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{0., 1.}, 0.04847715736040609], 
         InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"2", "4"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {0.04847715736040609, 1.0484771573604061}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{-1., 1.}, 0.04847715736040609], 
         InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"3", "4"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {-0.9515228426395939, 1.0484771573604061}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{-4., 2.}, 0.04847715736040609], 
         InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "2"},
             {"3", "4"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {-3.951522842639594, 2.048477157360406}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{-2., 2.}, 0.04847715736040609], 
         InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "3"},
             {"2", "4"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {-1.9515228426395939, 2.048477157360406}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{2., 2.}, 0.04847715736040609], 
         InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "4"},
             {"2", "3"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {2.048477157360406, 2.048477157360406}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{-3., 2.}, 0.04847715736040609], 
         InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "2"},
             {"1", "3"},
             {"1", "4"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {-2.951522842639594, 2.048477157360406}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{-1., 2.}, 0.04847715736040609], 
         InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "2"},
             {"2", "3"},
             {"2", "4"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {-0.9515228426395939, 2.048477157360406}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{0., 2.}, 0.04847715736040609], 
         InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "3"},
             {"2", "3"},
             {"3", "4"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {0.04847715736040609, 2.048477157360406}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{1., 2.}, 0.04847715736040609], 
         InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "4"},
             {"2", "4"},
             {"3", "4"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {1.0484771573604061, 2.048477157360406}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{-1., 3.}, 0.04847715736040609], 
         InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "2"},
             {"1", "3"},
             {"1", "4"},
             {"2", "3"},
             {"2", "4"},
             {"3", "4"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {-0.9515228426395939, 3.048477157360406}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Print",
 CellChangeTimes->{3.788457893228008*^9},
 CellLabel->
  "During evaluation of \
In[186]:=",ExpressionUUID->"426862b8-58ea-4bf6-8e65-152c95cbf5d4"]
}, Open  ]]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Conj", "Subsection",
 CellChangeTimes->{{3.7626017437561235`*^9, 3.76260174396599*^9}, {
  3.788458324996271*^9, 
  3.788458326571004*^9}},ExpressionUUID->"0ba000b5-27a5-468c-bdab-\
9d403a525df5"],

Cell[TextData[{
 "Stands for \[OpenCurlyDoubleQuote]conjecture\[CloseCurlyDoubleQuote], \
because all of these rely on the ",
 StyleBox["conjecture",
  FontWeight->"Bold"],
 " that we only need to run BendCongruences[] on elements with ",
 Cell[BoxData[
  FormBox[
   RowBox[{"|", 
    SubscriptBox["s", "1"], "|", 
    RowBox[{"\[LessEqual]", "1"}]}], TraditionalForm]],
  FontWeight->"Plain",ExpressionUUID->"8d9775e0-35a3-4678-be82-684098a84ef4"],
 ".",
 StyleBox["\n",
  FontWeight->"Bold"],
 "They are all identical, except they use the Conj versions of each other and \
BendCongruencesConj[] looks at waaay fewer pairs than BendCongruences[]."
}], "Text",
 CellChangeTimes->{{3.788458329221295*^9, 3.788458375401244*^9}, {
  3.7884785685337095`*^9, 3.7884785688219767`*^9}, {3.7884826943705406`*^9, 
  3.78848275989035*^9}},ExpressionUUID->"e2394ae3-b8e0-424d-bd10-\
d92fe52ce426"],

Cell[CellGroupData[{

Cell["MatroidalQConj", "Subsubsection",
 CellChangeTimes->{{3.7625464670016565`*^9, 3.7625464685140314`*^9}, {
  3.762601859595108*^9, 3.762601859845224*^9}, {3.788478503724016*^9, 
  3.7884785048809233`*^9}},ExpressionUUID->"9e6c352b-5181-4b60-b5fa-\
253f3925c7e6"],

Cell["\<\
Checks if a pair (M,k) is matroidal, by computing congruence classes (with \
WedgeCongruences[] and BendCongruences[]) and then checking the flat axioms \
with FQ[]\
\>", "Text",
 CellChangeTimes->{{3.762546473873186*^9, 
  3.7625465480725336`*^9}},ExpressionUUID->"433d475c-4e8a-44c5-be83-\
b3ec02f6dcaf"],

Cell[BoxData[
 RowBox[{
  RowBox[{"MatroidalQConj", "[", 
   RowBox[{"M_", ",", "k_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "groundM", ",", "groundN", ",", "congruenceClassRepresentatives"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
     "Give", " ", "an", " ", "estimate", " ", "for", " ", "the", " ", "time", 
      " ", "needed"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"To", " ", "edit", " ", "this", " ", "estimate"}], ",", " ", 
      RowBox[{
      "change", " ", "the", " ", "function", " ", 
       "MatoridalQTimeEstimate"}]}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"Echo", "[", 
       RowBox[{
        RowBox[{"TimeToString", "@", 
         RowBox[{"MatroidalQTimeEstimate", "[", 
          RowBox[{"M", ",", "k"}], "]"}]}], ",", "\"\<ETA\>\""}], "]"}], 
      ";"}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{"Ground", " ", "set", " ", "of", " ", "input", " ", "matroid"}], 
     "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"groundM", "=", 
      RowBox[{"First", "[", "M", "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Ground", " ", "set", " ", "of", " ", "the", " ", "wedge", " ", 
       "power"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"groundN", "=", 
      RowBox[{"Subsets", "[", 
       RowBox[{"groundM", ",", 
        RowBox[{"{", "k", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"congruenceClassRepresentatives", "=", 
      RowBox[{"Keys", "@", 
       RowBox[{"WedgeCongruencesConj", "[", 
        RowBox[{"M", ",", "k", ",", "False"}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"FQ", "[", 
      RowBox[{"groundN", ",", "congruenceClassRepresentatives"}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7625465507172437`*^9, 3.762546576727087*^9}, {
  3.762546694358101*^9, 3.762546838685458*^9}, {3.762547626290888*^9, 
  3.7625476446474237`*^9}, {3.7625476970967655`*^9, 3.7625476979739184`*^9}, {
  3.762557176492126*^9, 3.7625571792284584`*^9}, {3.7626018648987474`*^9, 
  3.7626018679358892`*^9}, {3.7884785919092364`*^9, 3.788478596862965*^9}, {
  3.7884787223145213`*^9, 3.78847874305107*^9}},
 CellLabel->"In[42]:=",ExpressionUUID->"8691961b-fa96-46ba-9938-81c7df25f7af"]
}, Closed]],

Cell[CellGroupData[{

Cell["BendCongruencesConj", "Subsubsection",
 CellChangeTimes->{{3.7398191343611145`*^9, 3.739819137814238*^9}, {
  3.739826161526616*^9, 3.7398261651204987`*^9}, {3.7398284907469497`*^9, 
  3.7398284935507975`*^9}, {3.7408719753645005`*^9, 3.740871984645501*^9}, {
  3.7411946220401115`*^9, 3.741194624866495*^9}, {3.741303174958145*^9, 
  3.7413031870986223`*^9}, {3.741307798494377*^9, 3.741307807384468*^9}, {
  3.7413078374789333`*^9, 3.741307837784236*^9}, {3.7626007075926175`*^9, 
  3.7626007077962294`*^9}, {3.7884785070421495`*^9, 
  3.788478508194065*^9}},ExpressionUUID->"df6d3bcc-13cd-4a91-b4c8-\
645bc2dbb824"],

Cell[BoxData[
 RowBox[{
  RowBox[{"BendCongruencesConj", "[", 
   RowBox[{"E_", ",", "forms_", ",", 
    RowBox[{"debug_:", "True"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "t1", ",", "t2", ",", "subsets", ",", "m", ",", "reps", ",", "getRoot", 
      ",", "bend", ",", "\[IndentingNewLine]", "s1", ",", "s2", ",", "r1", 
      ",", "r2", ",", "totalPairs", ",", "i", ",", "lastChangeIndex", ",", 
      "lastChangePair", ",", "\[IndentingNewLine]", "classes", ",", "keys", 
      ",", "data"}], "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"t1", "=", 
      RowBox[{"AbsoluteTime", "[", "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"Useful", " ", "variables"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"subsets", "=", 
      RowBox[{"Subsets", "[", "E", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"m", "=", 
      RowBox[{"Length", "[", "E", "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"Set", " ", "trivial", " ", "representatives"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"reps", "=", 
      RowBox[{"Association", "@", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"s", "\[Rule]", "s"}], ",", 
         RowBox[{"{", 
          RowBox[{"s", ",", "subsets"}], "}"}]}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Define", " ", "a", " ", "function", " ", "to", " ", "simplify", " ", 
       "things"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"getRoot", "[", "s_", "]"}], ":=", 
      RowBox[{"FixedPoint", "[", 
       RowBox[{"reps", ",", "s"}], "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
, "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Set", " ", "bend", " ", "congruences", " ", "representatives"}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Loop", " ", "over", " ", "linear", " ", "forms", " ", "and", " ", 
       "bends", " ", "of", " ", "the", " ", "linear", " ", "forms"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"Do", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"bend", "=", 
         RowBox[{"Drop", "[", 
          RowBox[{"form", ",", 
           RowBox[{"{", "i", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"reps", "[", "bend", "]"}], "\[Equal]", "bend"}], ",", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"Case", " ", "1"}], ":", " ", 
            RowBox[{
            "the", " ", "bend", " ", "is", " ", "in", " ", "a", " ", 
             "singleton", " ", "tree"}]}], "*)"}], "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"reps", "[", "bend", "]"}], "=", "form"}], ",", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"Case", " ", "2"}], ":", " ", 
            RowBox[{
            "the", " ", "bend", " ", "is", " ", "in", " ", "a", " ", 
             "nontrivial", " ", "tree"}]}], "*)"}], "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"r1", "=", 
            RowBox[{"getRoot", "[", "bend", "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"r2", "=", 
            RowBox[{"getRoot", "[", "form", "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"reps", "[", "r1", "]"}], "=", 
            RowBox[{
             RowBox[{"reps", "[", "r2", "]"}], "=", 
             RowBox[{"Union", "[", 
              RowBox[{"r1", ",", "r2"}], "]"}]}]}]}]}], "\[IndentingNewLine]",
          "\[IndentingNewLine]", "]"}]}], ",", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"form", ",", "forms"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "form", "]"}]}], "}"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
, "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Print", " ", "how", " ", "long", " ", "the", " ", "first", " ", "part",
        " ", "took"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{"debug", ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"t2", "=", 
         RowBox[{"AbsoluteTime", "[", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Echo", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"ToString", "[", 
            RowBox[{"Round", "[", 
             RowBox[{
              RowBox[{"t2", "-", "t1"}], ",", "0.01"}], "]"}], "]"}], "<>", 
           "\"\< seconds\>\""}], ",", "\"\<Trivial and bend relations\>\""}], 
         "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"Print", "[", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
     ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
, "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Generate", " ", "new", " ", "congruences", " ", "to", " ", "close", 
       " ", "it", " ", "as", " ", "a", " ", "submodule"}], "*)"}], 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Keeps", " ", "track", " ", "of", " ", "which", " ", "number", " ", 
       "pair", " ", 
       RowBox[{"we", "'"}], "re", " ", "on"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"i", "=", "0"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"No", " ", "looping", " ", "needed", " ", "since", " ", 
        RowBox[{"we", "'"}], "re", " ", "just", " ", "checking", " ", "all", 
        " ", "pairs", " ", "with"}], " ", "|", 
       SubscriptBox["s", "1"], "|", 
       RowBox[{"\[LessEqual]", "1"}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Do", "[", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"i", "++"}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"The", " ", "sets", " ", "involved"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"s1", "=", 
         RowBox[{"subsets", "[", 
          RowBox[{"[", "i1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"s2", "=", 
         RowBox[{"subsets", "[", 
          RowBox[{"[", "i2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"r1", "=", 
         RowBox[{"getRoot", "[", 
          RowBox[{"Union", "[", 
           RowBox[{"s1", ",", "s2"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"r2", "=", 
         RowBox[{"getRoot", "[", 
          RowBox[{"Union", "[", 
           RowBox[{
            RowBox[{"getRoot", "[", "s1", "]"}], ",", 
            RowBox[{"getRoot", "[", "s2", "]"}]}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"Merge", " ", "trees", " ", "if", " ", "necessary"}], "*)"}],
         "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"r1", "\[Equal]", "r2"}], ",", ",", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
           "If", " ", "we", " ", "need", " ", "to", " ", "merge", " ", 
            "trees"}], "*)"}], "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"lastChangeIndex", "=", "i"}], ";", "\[IndentingNewLine]", 
           RowBox[{"lastChangePair", "=", 
            RowBox[{"{", 
             RowBox[{"i1", ",", "i2"}], "}"}]}], ";", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"reps", "[", "r1", "]"}], "=", 
            RowBox[{
             RowBox[{"reps", "[", "r2", "]"}], "=", 
             RowBox[{"Union", "[", 
              RowBox[{"r1", ",", "r2"}], "]"}]}]}], ";"}]}], 
         "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], ",", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"i1", ",", "1", ",", 
         RowBox[{"1", "+", "m"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i2", ",", 
         RowBox[{"i1", "+", "1"}], ",", 
         SuperscriptBox["2", "m"]}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
, "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Total", " ", "number", " ", "of", " ", "pairs", " ", "looped", " ", 
       "over"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
       "My", " ", "number", " ", "for", " ", "this", " ", "in", " ", "the", 
        " ", 
        RowBox[{"honor", "'"}], "s", " ", "thesis", " ", "was", " ", "wrong", 
        " ", "by", " ", "about", " ", 
        SuperscriptBox["m", "2"]}], ",", " ", 
       RowBox[{"but", " ", "the", " ", 
        SuperscriptBox["m2", "m"], " ", "order", " ", "is", " ", "still", " ",
         "right"}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"totalPairs", "=", 
      RowBox[{
       SuperscriptBox["2", "m"], "-", "1", "+", 
       RowBox[{"m", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["2", "m"], "-", "m", "-", "1"}], ")"}]}], "+", 
       RowBox[{"Binomial", "[", 
        RowBox[{"m", ",", "2"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Print", " ", "info", " ", "about", " ", "the", " ", "looping", " ", 
       "over", " ", "pairs"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{"debug", ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"t1", "=", "t2"}], ";", "\[IndentingNewLine]", 
        RowBox[{"t2", "=", 
         RowBox[{"AbsoluteTime", "[", "]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"Echo", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"ToString", "[", 
            RowBox[{"Round", "[", 
             RowBox[{
              RowBox[{"t2", "-", "t1"}], ",", "0.01"}], "]"}], "]"}], "<>", 
           "\"\< seconds\>\""}], ",", "\"\<Looping over pairs\>\""}], "]"}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"Echo", "[", 
         RowBox[{"m", ",", "\"\<Ground set size\>\""}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Echo", "[", 
         RowBox[{
          SuperscriptBox["2", "m"], ",", 
          "\"\<Number of subsets to consider\>\""}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Echo", "[", 
         RowBox[{"totalPairs", ",", "\"\<Number of pairs considered\>\""}], 
         "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"Echo", "[", 
         RowBox[{
          RowBox[{"Round", "[", 
           RowBox[{
            FractionBox["totalPairs", 
             RowBox[{"t2", "-", "t1"}]], ",", "1"}], "]"}], ",", 
          "\"\<Avg. number of pairs per second\>\""}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Echo", "[", 
         RowBox[{"lastChangeIndex", ",", "\"\<Last change index\>\""}], "]"}],
         ";", "\[IndentingNewLine]", 
        RowBox[{"Echo", "[", 
         RowBox[{
          RowBox[{"subsets", "[", 
           RowBox[{"[", "lastChangePair", "]"}], "]"}], ",", 
          "\"\<Last change pair\>\""}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"Print", "[", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
     ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
, "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Collapse", " ", "trees", " ", "into", " ", "direct", " ", "links", " ",
        "to", " ", "representatives"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Do", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"reps", "[", "s", "]"}], "=", 
        RowBox[{"reps", "[", 
         RowBox[{"reps", "[", "s", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"s", ",", 
         RowBox[{"Reverse", "[", "subsets", "]"}]}], "}"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
, "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Print", " ", "how", " ", "long", " ", "the", " ", "tree", " ", 
       "collapse", " ", "took"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{"debug", ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"t1", "=", "t2"}], ";", "\[IndentingNewLine]", 
        RowBox[{"t2", "=", 
         RowBox[{"AbsoluteTime", "[", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Echo", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"ToString", "[", 
            RowBox[{"Round", "[", 
             RowBox[{
              RowBox[{"t2", "-", "t1"}], ",", "0.01"}], "]"}], "]"}], "<>", 
           "\"\< seconds\>\""}], ",", "\"\<Tree collapse\>\""}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Print", "[", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
     ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
, "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"Reverse", "-", 
       RowBox[{"lookup", " ", "the", " ", "association"}]}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"classes", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"reps", "//", "Normal"}], "//", 
        RowBox[{"GroupBy", "[", 
         RowBox[{"Last", "\[Rule]", "First"}], "]"}]}], "//", "Sort"}]}], ";",
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
, "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Print", " ", "how", " ", "long", " ", "the", " ", "reverse"}],
        "-", 
       RowBox[{"lookup", " ", "took"}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{"debug", ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"t1", "=", "t2"}], ";", "\[IndentingNewLine]", 
        RowBox[{"t2", "=", 
         RowBox[{"AbsoluteTime", "[", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Echo", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"ToString", "[", 
            RowBox[{"Round", "[", 
             RowBox[{
              RowBox[{"t2", "-", "t1"}], ",", "0.01"}], "]"}], "]"}], "<>", 
           "\"\< seconds\>\""}], ",", "\"\<Reverse-lookup\>\""}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Print", "[", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
     ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
, "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Print", " ", "some", " ", "info", " ", "about", " ", "the", " ", 
       "classes"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{"debug", ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"For", " ", "each", " ", "congruence", " ", "class"}], ",", 
         " ", 
         RowBox[{"get", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"#", " ", "elements"}], ",", " ", 
            RowBox[{"max", " ", "element", " ", "size"}], ",", " ", 
            RowBox[{"min", " ", "element", " ", "size"}]}], "}"}]}]}], "*)"}],
        "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"keys", "=", 
         RowBox[{"Keys", "[", "classes", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"data", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"class", "=", 
             RowBox[{"classes", "[", "key", "]"}]}], ";", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Length", "[", "class", "]"}], ",", 
              RowBox[{"Length", "[", "key", "]"}], ",", 
              RowBox[{"Min", "[", 
               RowBox[{"Length", "/@", "class"}], "]"}]}], "}"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"key", ",", "keys"}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
         "Gather", " ", "by", " ", "the", " ", "first", " ", "element", " ", 
          RowBox[{"(", 
           RowBox[{
           "number", " ", "of", " ", "elements", " ", "in", " ", "the", " ", 
            "class"}], ")"}]}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"data", "=", 
         RowBox[{"GatherBy", "[", 
          RowBox[{"data", ",", "First"}], "]"}]}], ";", "\[IndentingNewLine]",
         "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"For", " ", "each", " ", "class", " ", "size"}], ",", " ", 
          RowBox[{"take", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"class", " ", "size"}], ",", " ", 
             RowBox[{
             "number", " ", "of", " ", "classes", " ", "of", " ", "this", " ",
               "size"}], ",", " ", 
             RowBox[{"max", " ", "element", " ", "size"}], ",", " ", 
             RowBox[{"min", " ", "element", " ", "size"}]}], "}"}]}]}], 
         "*)"}], "\[IndentingNewLine]", 
        RowBox[{"data", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"stats", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
             RowBox[{"Length", "[", "stats", "]"}], ",", 
             RowBox[{"Max", "[", 
              RowBox[{"stats", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], ",", 
             RowBox[{"Min", "[", 
              RowBox[{"stats", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "3"}], "]"}], "]"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"stats", ",", "data"}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"Print", " ", "it", " ", "to", " ", "a", " ", "table"}], 
         "*)"}], "\[IndentingNewLine]", 
        RowBox[{"Print", "@", 
         RowBox[{"TableForm", "[", 
          RowBox[{"Prepend", "[", 
           RowBox[{"data", ",", 
            RowBox[{"{", 
             RowBox[{
             "\"\<Class size\>\"", ",", 
              "\"\<Number of classes of this size\>\"", ",", 
              "\"\<Max elem. size\>\"", ",", "\"\<Min elem. size\>\""}], 
             "}"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"Print", "[", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<Longest linear form length: \>\"", ",", 
          RowBox[{"Max", "[", 
           RowBox[{"Length", "/@", "forms"}], "]"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Print", "[", "]"}], ";"}]}], "\[IndentingNewLine]", 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
, "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", "Return", "*)"}], "\[IndentingNewLine]", "classes"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7884831096889877`*^9, 3.7884831444450464`*^9}, {
  3.7884832240012693`*^9, 3.7884832259171815`*^9}, {3.7884832669763813`*^9, 
  3.788483350924863*^9}, {3.788483389163645*^9, 3.7884833898388405`*^9}, {
  3.7884834426256714`*^9, 3.7884836655715036`*^9}, {3.788483711667205*^9, 
  3.7884838326187973`*^9}},
 CellLabel->"In[43]:=",ExpressionUUID->"5fac0707-9b04-40f5-ab6f-9aa6d06425ed"],

Cell[TextData[{
 "Verification that this agrees with BendCongruences for ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["U", 
     RowBox[{"3", ",", "4"}]], " ", ",", 
    RowBox[{"k", "=", "2"}]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "e1238d9d-0799-44a9-b97c-265a522122ac"],
 ":"
}], "Text",
 CellChangeTimes->{{3.788483953475608*^9, 
  3.7884839836229687`*^9}},ExpressionUUID->"a3553cb6-11bf-4b1f-a9f4-\
53cca20ac890"],

Cell[BoxData[
 RowBox[{
  RowBox[{"M", "=", 
   RowBox[{"UniformMatroid", "[", 
    RowBox[{"3", ",", "4"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.78848398517585*^9, 
  3.7884840074243555`*^9}},ExpressionUUID->"66d983d5-6330-479f-8c5c-\
a7d8b34b212f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"classes", "=", 
   RowBox[{"WedgeCongruences", "[", 
    RowBox[{"M", ",", "2"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.78848398517585*^9, 3.7884840131879377`*^9}},
 CellLabel->
  "In[379]:=",ExpressionUUID->"12d3179c-df5d-47e7-8607-b0c2b3a5f92a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Trivial and bend relations\"\>",
   "EchoLabel"], " ", "\<\"0. seconds\"\>"}]], "Echo",
 CellChangeTimes->{
  3.788484013706519*^9},ExpressionUUID->"b43f625f-d86e-434a-bfb6-\
a281c31bc9b3"],

Cell[BoxData["\<\"\"\>"], "Print",
 CellChangeTimes->{3.7884840137374697`*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"46149b6f-d2d0-42be-9a5f-9c8041697788"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Looping over pairs\"\>",
   "EchoLabel"], " ", "\<\"0.1 seconds\"\>"}]], "Echo",
 CellChangeTimes->{
  3.7884840138012652`*^9},ExpressionUUID->"7ee3fe02-3586-4c14-91b6-\
174d0e81c938"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Ground set size\"\>",
   "EchoLabel"], " ", "6"}]], "Echo",
 CellChangeTimes->{
  3.7884840138351765`*^9},ExpressionUUID->"da17007f-59c9-4841-b4ae-\
d85fdaabccdb"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Number of subsets to consider\"\>",
   "EchoLabel"], " ", "64"}]], "Echo",
 CellChangeTimes->{
  3.788484013881053*^9},ExpressionUUID->"fe91e5e7-af9d-496d-aa4c-\
93ecc270aacc"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Number of pairs to consider\"\>",
   "EchoLabel"], " ", "2016"}]], "Echo",
 CellChangeTimes->{
  3.7884840139209456`*^9},ExpressionUUID->"428d9d33-dc99-4c25-92ca-\
a0033cce7c61"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Pairs looped over\"\>",
   "EchoLabel"], " ", "2295"}]], "Echo",
 CellChangeTimes->{
  3.788484013965825*^9},ExpressionUUID->"3275a835-765b-4e2a-a6d4-\
e20c4b424e19"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Avg. number of pairs per second\"\>",
   "EchoLabel"], " ", "23716"}]], "Echo",
 CellChangeTimes->{
  3.788484014003724*^9},ExpressionUUID->"f9ee3171-4c97-4ae1-9ede-\
c3587eec4d24"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Last change index\"\>",
   "EchoLabel"], " ", "279"}]], "Echo",
 CellChangeTimes->{
  3.7884840140515985`*^9},ExpressionUUID->"b3e59076-a2da-411a-8a43-\
e07a80587d62"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Last change pair\"\>",
   "EchoLabel"], " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3"}], "}"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3", ",", "4"}], "}"}]}], "}"}]}], "}"}]}]], "Echo",
 CellChangeTimes->{
  3.7884840140894938`*^9},ExpressionUUID->"3af8594a-3759-40ab-858f-\
3a0c31422e77"],

Cell[BoxData["\<\"\"\>"], "Print",
 CellChangeTimes->{3.788484014129388*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"a78b9bf4-64c6-44f4-ab6f-10b791a00b4c"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Tree collapse\"\>",
   "EchoLabel"], " ", "\<\"0.33 seconds\"\>"}]], "Echo",
 CellChangeTimes->{
  3.7884840141393642`*^9},ExpressionUUID->"51817b4a-3efa-4d34-b13c-\
32e1b9026ebd"],

Cell[BoxData["\<\"\"\>"], "Print",
 CellChangeTimes->{3.7884840141692815`*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"9deddd21-a2f0-43a2-b424-7a5bc5ac82ec"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Reverse-lookup\"\>",
   "EchoLabel"], " ", "\<\"0.05 seconds\"\>"}]], "Echo",
 CellChangeTimes->{
  3.7884840141772614`*^9},ExpressionUUID->"fab7b340-b06e-4098-930f-\
42ff60b12b19"],

Cell[BoxData["\<\"\"\>"], "Print",
 CellChangeTimes->{3.788484014218151*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"cba918f4-5343-414d-a3a0-53edbecc9b96"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"Class size\"\>", "\<\"Number of classes of this size\"\>", "\<\"Max \
elem. size\"\>", "\<\"Min elem. size\"\>"},
    {"1", "10", "2", "0"},
    {"4", "4", "3", "2"},
    {"38", "1", "6", "3"}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Print",
 CellChangeTimes->{3.7884840142241364`*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"28ef9ae2-15b3-4c6f-8998-b65c79cbba7a"],

Cell[BoxData["\<\"\"\>"], "Print",
 CellChangeTimes->{3.788484014228126*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"d37c6d90-1610-4419-a6da-bcb3f2b39938"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Longest linear form length: \"\>", "\[InvisibleSpace]", "3"}],
  SequenceForm["Longest linear form length: ", 3],
  Editable->False]], "Print",
 CellChangeTimes->{3.7884840142321143`*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"0561606d-7a22-40bb-a6fa-1c4878e6de43"],

Cell[BoxData["\<\"\"\>"], "Print",
 CellChangeTimes->{3.7884840142361035`*^9},
 CellLabel->
  "During evaluation of \
In[379]:=",ExpressionUUID->"152eae64-5c3b-48e4-a820-9513f768cc79"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"classesConjecture", "=", 
   RowBox[{"WedgeCongruencesConj", "[", 
    RowBox[{"M", ",", "2"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7884840168202295`*^9, 3.7884840315208817`*^9}},
 CellLabel->
  "In[380]:=",ExpressionUUID->"bf6e5080-e08a-4caf-a5b6-bf67e47fbf18"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Trivial and bend relations\"\>",
   "EchoLabel"], " ", "\<\"0. seconds\"\>"}]], "Echo",
 CellChangeTimes->{
  3.7884840324683485`*^9},ExpressionUUID->"39ec0075-723d-49fe-b3d0-\
16a97a7b7a53"],

Cell[BoxData["\<\"\"\>"], "Print",
 CellChangeTimes->{3.788484032501293*^9},
 CellLabel->
  "During evaluation of \
In[380]:=",ExpressionUUID->"c35c444d-d5ae-4424-ad8a-f14e202e493d"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Looping over pairs\"\>",
   "EchoLabel"], " ", "\<\"0.05 seconds\"\>"}]], "Echo",
 CellChangeTimes->{
  3.7884840325162535`*^9},ExpressionUUID->"bcf312fa-6fdc-410f-bb6b-\
5fd670fa75f9"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Ground set size\"\>",
   "EchoLabel"], " ", "6"}]], "Echo",
 CellChangeTimes->{
  3.7884840325650897`*^9},ExpressionUUID->"a0bf2f21-304d-42c1-9eec-\
9bd19ae0f251"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Number of subsets to consider\"\>",
   "EchoLabel"], " ", "64"}]], "Echo",
 CellChangeTimes->{
  3.7884840325999956`*^9},ExpressionUUID->"181b30c9-4f6f-456e-8f30-\
64c22e89d9f3"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Number of pairs considered\"\>",
   "EchoLabel"], " ", "420"}]], "Echo",
 CellChangeTimes->{
  3.7884840326468706`*^9},ExpressionUUID->"8a3e2f4b-6c33-4f06-b902-\
b75978a5713d"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Avg. number of pairs per second\"\>",
   "EchoLabel"], " ", "7798"}]], "Echo",
 CellChangeTimes->{
  3.788484032683772*^9},ExpressionUUID->"30ffb844-9c21-467e-99ad-\
23946eed0cac"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Last change index\"\>",
   "EchoLabel"], " ", "279"}]], "Echo",
 CellChangeTimes->{
  3.7884840327296495`*^9},ExpressionUUID->"bb0e44dc-7804-4c14-aebb-\
092865359ddb"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Last change pair\"\>",
   "EchoLabel"], " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3"}], "}"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3", ",", "4"}], "}"}]}], "}"}]}], "}"}]}]], "Echo",
 CellChangeTimes->{
  3.7884840327655544`*^9},ExpressionUUID->"6a237570-cafe-4120-b1ee-\
8431a0703670"],

Cell[BoxData["\<\"\"\>"], "Print",
 CellChangeTimes->{3.788484032807441*^9},
 CellLabel->
  "During evaluation of \
In[380]:=",ExpressionUUID->"9c61beec-467f-4b78-a51a-7b7a7e434e18"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Tree collapse\"\>",
   "EchoLabel"], " ", "\<\"0.29 seconds\"\>"}]], "Echo",
 CellChangeTimes->{
  3.7884840328164167`*^9},ExpressionUUID->"09bcd66a-72b8-4c58-95b2-\
ce8bbb001210"],

Cell[BoxData["\<\"\"\>"], "Print",
 CellChangeTimes->{3.7884840328483324`*^9},
 CellLabel->
  "During evaluation of \
In[380]:=",ExpressionUUID->"d5f36518-49b3-43f9-882f-17f5f3499ff5"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Reverse-lookup\"\>",
   "EchoLabel"], " ", "\<\"0.05 seconds\"\>"}]], "Echo",
 CellChangeTimes->{
  3.788484032857309*^9},ExpressionUUID->"733f97b3-a3fe-4c5a-83e9-\
9d40726645a6"],

Cell[BoxData["\<\"\"\>"], "Print",
 CellChangeTimes->{3.7884840328991957`*^9},
 CellLabel->
  "During evaluation of \
In[380]:=",ExpressionUUID->"3c83ef77-8fb2-43c4-a636-a5dfe08fef7c"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"Class size\"\>", "\<\"Number of classes of this size\"\>", "\<\"Max \
elem. size\"\>", "\<\"Min elem. size\"\>"},
    {"1", "10", "2", "0"},
    {"4", "4", "3", "2"},
    {"38", "1", "6", "3"}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Print",
 CellChangeTimes->{3.7884840329061775`*^9},
 CellLabel->
  "During evaluation of \
In[380]:=",ExpressionUUID->"3f8d5916-4a2c-4e90-9525-0cfc83834b86"],

Cell[BoxData["\<\"\"\>"], "Print",
 CellChangeTimes->{3.7884840329092264`*^9},
 CellLabel->
  "During evaluation of \
In[380]:=",ExpressionUUID->"30852ae6-1f4a-4a55-bba9-094d6df6e661"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Longest linear form length: \"\>", "\[InvisibleSpace]", "3"}],
  SequenceForm["Longest linear form length: ", 3],
  Editable->False]], "Print",
 CellChangeTimes->{3.7884840329121933`*^9},
 CellLabel->
  "During evaluation of \
In[380]:=",ExpressionUUID->"02c198b9-242b-4524-9f34-1abec8b3fc60"],

Cell[BoxData["\<\"\"\>"], "Print",
 CellChangeTimes->{3.7884840329161825`*^9},
 CellLabel->
  "During evaluation of \
In[380]:=",ExpressionUUID->"0077da09-d48f-4eff-a79f-8354f6d429c0"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"classes", "\[Equal]", "classesConjecture"}]], "Input",
 CellChangeTimes->{{3.7884840341289406`*^9, 3.788484037431078*^9}},
 CellLabel->
  "In[381]:=",ExpressionUUID->"1a619823-8a82-4cb0-83e5-1715459e8ed3"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.788484038047429*^9},
 CellLabel->
  "Out[381]=",ExpressionUUID->"6757ba4d-001d-4e73-8148-bc600f8077b6"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["WedgeCongruencesConj", "Subsubsection",
 CellChangeTimes->{{3.746840864991587*^9, 3.7468408678997583`*^9}, {
  3.762601726324254*^9, 3.762601726528776*^9}, {3.78847851426583*^9, 
  3.7884785153429456`*^9}},ExpressionUUID->"9ba07c97-9ab2-480c-a684-\
324d085588f1"],

Cell["Applies bend congruences for a wedge power of a matroid", "Text",
 CellChangeTimes->{{3.746840872594556*^9, 
  3.7468408823145847`*^9}},ExpressionUUID->"190ab2eb-f2de-44b4-83af-\
03cf508413f1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"WedgeCongruencesConj", "[", 
   RowBox[{"M_", ",", "k_", ",", 
    RowBox[{"output_:", "True"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"Cpre", ",", "wedgeE"}], "}"}], ",", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{"The", " ", "ground", " ", "set"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"wedgeE", "=", 
      RowBox[{"Subsets", "[", 
       RowBox[{
        RowBox[{"Ground", "[", "M", "]"}], ",", 
        RowBox[{"{", "k", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"The", " ", "linear", " ", "forms"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"Cpre", "=", 
      RowBox[{"PreExpectedCircuits", "[", 
       RowBox[{"M", ",", "k"}], "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"BendCongruencesConj", "[", 
      RowBox[{"wedgeE", ",", "Cpre", ",", "output"}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7468408844839144`*^9, 3.7468409357361135`*^9}, {
  3.7468409717774725`*^9, 3.74684103942756*^9}, {3.7588096566619377`*^9, 
  3.7588096845796404`*^9}, {3.7588103467412252`*^9, 3.7588103776670675`*^9}, {
  3.758810440532033*^9, 3.758810450105767*^9}, {3.7588105610670195`*^9, 
  3.758810561206781*^9}, {3.758813953758422*^9, 3.7588139633437223`*^9}, {
  3.758819856139143*^9, 3.7588198695645742`*^9}, {3.7588199735880337`*^9, 
  3.7588199741716876`*^9}, {3.75979550800587*^9, 3.7597955252012424`*^9}, {
  3.762601728565259*^9, 3.762601732396876*^9}, {3.7884786069240513`*^9, 
  3.7884786115207586`*^9}, {3.7884787712356987`*^9, 3.788478778835376*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"9c63a222-d178-44f5-8009-33f8039c1261"]
}, Closed]],

Cell[CellGroupData[{

Cell["WedgeLatticeConj", "Subsubsection",
 CellChangeTimes->{{3.7475331551090193`*^9, 3.747533157640185*^9}, {
  3.7475344520402527`*^9, 3.7475344526936197`*^9}, {3.7626017484727507`*^9, 
  3.762601748686927*^9}, {3.7884785280090933`*^9, 
  3.7884785290732327`*^9}},ExpressionUUID->"e40f40f7-0064-496b-816a-\
d5f743f08348"],

Cell["\<\
Similar to WedgeCongruences, but also displays a lattice
If Cwedge satisfies C3, orders the lattice by rank
\tOtherwise, does it by length\
\>", "Text",
 CellChangeTimes->{{3.758856445971117*^9, 3.7588564768431263`*^9}, {
  3.758856655859412*^9, 
  3.758856679534443*^9}},ExpressionUUID->"f5b5f340-579a-4d37-ab8e-\
110d08a984bf"],

Cell[BoxData[
 RowBox[{
  RowBox[{"WedgeLatticeConj", "[", 
   RowBox[{"M_", ",", "k_", ",", 
    RowBox[{"output_:", "True"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "Cexp", ",", "wedgeE", ",", "components", ",", "representatives", ",", 
      "CexpDD", ",", "Cwedge", ",", "Mwedge", ",", "f", ",", "levels"}], 
     "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{"First", " ", "apply", " ", "WedgeCongruences"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"components", "=", 
      RowBox[{"WedgeCongruencesConj", "[", 
       RowBox[{"M", ",", "k", ",", "output"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"Pick", " ", "the", " ", "representatives"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"representatives", "=", 
      RowBox[{"Sort", "@", 
       RowBox[{"Keys", "@", "components"}]}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"Print", " ", "the", " ", "lattice"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "@", 
      RowBox[{"Lattice", "[", "representatives", "]"}]}], ";", 
     "\[IndentingNewLine]", "components"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7475331639089913`*^9, 3.747533181213303*^9}, {
   3.747533451943647*^9, 3.7475334676893144`*^9}, {3.7475335204695196`*^9, 
   3.7475336554220676`*^9}, {3.747533748011592*^9, 3.7475337676222353`*^9}, {
   3.747534059802114*^9, 3.7475340622712083`*^9}, {3.7475341233101006`*^9, 
   3.7475341288693204`*^9}, {3.7475341833623066`*^9, 
   3.7475342061361675`*^9}, {3.74753445520537*^9, 3.747534455809127*^9}, {
   3.758809901986705*^9, 3.758809902118641*^9}, 3.758809945076169*^9, 
   3.758810771302493*^9, {3.758814516263775*^9, 3.7588145229707975`*^9}, {
   3.758814568372563*^9, 3.758814569070931*^9}, {3.758853018227323*^9, 
   3.758853020834548*^9}, {3.7588563937096047`*^9, 3.75885639405114*^9}, {
   3.758856486102512*^9, 3.758856598695657*^9}, {3.758857020600465*^9, 
   3.7588570291780653`*^9}, {3.7588572275740643`*^9, 
   3.7588574847974033`*^9}, {3.7588575292754154`*^9, 
   3.7588575298548555`*^9}, {3.758857668684163*^9, 3.758857677215567*^9}, {
   3.7588579461457844`*^9, 3.758857947265192*^9}, {3.758858023976697*^9, 
   3.7588580268006587`*^9}, {3.7588583087071733`*^9, 3.758858309406496*^9}, {
   3.762601752981147*^9, 3.762601786200378*^9}, {3.7884566367652783`*^9, 
   3.788456654679693*^9}, {3.788478614902746*^9, 3.7884786202464237`*^9}, {
   3.788478811372336*^9, 3.7884788179347854`*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"524650e2-24ce-4c41-ab4c-b603c03989e1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"WedgeLattice", "[", 
  RowBox[{
   RowBox[{"UniformMatroid", "[", 
    RowBox[{"3", ",", "4"}], "]"}], ",", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.747533771181258*^9, 3.7475337819422464`*^9}, {
  3.7475340445891294`*^9, 3.747534045924466*^9}, {3.7475344647647867`*^9, 
  3.747534466876733*^9}},
 CellLabel->
  "In[536]:=",ExpressionUUID->"46e613fc-f5a4-42e8-b463-9430628aeb8d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TagBox["28",
   "EchoLabel"], 
  " ", "\<\"Set initial congruences from bend relations and \
self-congruences\"\>"}]], "Echo",
 CellChangeTimes->{
  3.7588575319938197`*^9},ExpressionUUID->"b7c4da4f-fbc1-4c19-95d6-\
92e254b7103b"],

Cell[BoxData[
 RowBox[{
  TagBox["226",
   "EchoLabel"], 
  " ", "\<\"Closed as a submodule, needs closing as an equivalence relation\"\
\>"}]], "Echo",
 CellChangeTimes->{
  3.758857532401532*^9},ExpressionUUID->"916fdc4b-4751-4848-b7e8-\
8743121f709a"],

Cell[BoxData[
 RowBox[{
  TagBox["226",
   "EchoLabel"], 
  " ", "\<\"Closed as both a submodule and equivalence relation\"\>"}]], \
"Echo",
 CellChangeTimes->{
  3.758857532453119*^9},ExpressionUUID->"932d5458-4255-4463-a893-\
85a221bf65f9"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{{}, {{1, 2, 3}}, {{1, 2, 4}}, {{1, 3, 4}}, {{2, 3, 4}}, {{1, 2, 
       3}, {1, 2, 4}}, {{1, 2, 3}, {1, 3, 4}}, {{1, 2, 3}, {2, 3, 4}}, {{1, 2,
        4}, {1, 3, 4}}, {{1, 2, 4}, {2, 3, 4}}, {{1, 3, 4}, {2, 3, 4}}, {{1, 
       2, 3}, {1, 2, 4}, {1, 3, 4}}, {{1, 2, 3}, {1, 2, 4}, {2, 3, 4}}, {{1, 
       2, 3}, {1, 3, 4}, {2, 3, 4}}, {{1, 2, 4}, {1, 3, 4}, {2, 3, 4}}, {{1, 
       2, 3}, {1, 2, 4}, {1, 3, 4}, {2, 3, 4}}}, {
      Null, {{2, 3}, {2, 4}, {2, 5}, {2, 6}, {2, 7}, {2, 8}, {2, 9}, {2, 
       10}, {2, 11}, {2, 12}, {2, 13}, {2, 14}, {2, 15}, {2, 16}, {3, 4}, {3, 
       5}, {3, 6}, {3, 7}, {3, 8}, {3, 9}, {3, 10}, {3, 11}, {3, 12}, {3, 
       13}, {3, 14}, {3, 15}, {3, 16}, {4, 5}, {4, 6}, {4, 7}, {4, 8}, {4, 
       9}, {4, 10}, {4, 11}, {4, 12}, {4, 13}, {4, 14}, {4, 15}, {4, 16}, {5, 
       6}, {5, 7}, {5, 8}, {5, 9}, {5, 10}, {5, 11}, {5, 12}, {5, 13}, {5, 
       14}, {5, 15}, {5, 16}, {6, 7}, {6, 8}, {6, 9}, {6, 10}, {6, 11}, {6, 
       12}, {6, 13}, {6, 14}, {6, 15}, {6, 16}, {7, 8}, {7, 9}, {7, 10}, {7, 
       11}, {7, 12}, {7, 13}, {7, 14}, {7, 15}, {7, 16}, {8, 9}, {8, 10}, {8, 
       11}, {8, 12}, {8, 13}, {8, 14}, {8, 15}, {8, 16}, {9, 10}, {9, 11}, {9,
        12}, {9, 13}, {9, 14}, {9, 15}, {9, 16}, {10, 11}, {10, 12}, {10, 
       13}, {10, 14}, {10, 15}, {10, 16}, {11, 12}, {11, 13}, {11, 14}, {11, 
       15}, {11, 16}, {12, 13}, {12, 14}, {12, 15}, {12, 16}, {13, 14}, {13, 
       15}, {13, 16}, {14, 15}, {14, 16}, {15, 16}}}, {
      VertexLabels -> {Automatic}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
        {Arrowheads[0.], 
         ArrowBox[{{0.6758134652335379, -0.7139860956500781}, {
          0.18675253020376137`, -1.0321298167466182`}}, 
          0.021487224073264893`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0.6758134652335379, -0.7139860956500781}, {
          1.3646880826618955`, -0.2832876394693673}}, 0.021487224073264893`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0.6758134652335379, -0.7139860956500781}, {
          0.9442682058905724, -0.18675253020376137`}}, 
          0.021487224073264893`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0.6758134652335379, -0.7139860956500781}, {
          0.713326866986652, -1.6759025099472382`}}, 0.021487224073264893`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0.6758134652335379, -0.7139860956500781}, {
          1.19195964612402, -1.1645550867615992`}}, 0.021487224073264893`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0.6758134652335379, -0.7139860956500781}, {
          1.6409765773646845`, -0.6403774986612216}}, 0.021487224073264893`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0.6758134652335379, -0.7139860956500781}, {
          0.7088066489955118, -1.1997079969664126`}}, 0.021487224073264893`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0.6758134652335379, -0.7139860956500781}, {
          1.6854830337204671`, -1.0538679593258677`}}, 
          0.021487224073264893`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0.6758134652335379, -0.7139860956500781}, {
          0.5324647673822538, -0.27491318738210535`}}, 
          0.021487224073264893`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0.6758134652335379, -0.7139860956500781}, {
          0.22859817657692916`, -0.6118255365198508}}, 
          0.021487224073264893`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0.6758134652335379, -0.7139860956500781}, {
          0.32818017875197136`, -1.4390921114332502`}}, 
          0.021487224073264893`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0.6758134652335379, -0.7139860956500781}, {
          1.1607311928258626`, -0.6806176528369875}}, 0.021487224073264893`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0.6758134652335379, -0.7139860956500781}, {
          1.1296362714004917`, -1.6725332638240262`}}, 
          0.021487224073264893`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0.6758134652335379, -0.7139860956500781}, {
          1.519734529291045, -1.466175125473834}}, 0.021487224073264893`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0.18675253020376137`, -1.0321298167466182`}, {
          1.3646880826618955`, -0.2832876394693673}}, 0.021487224073264893`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0.18675253020376137`, -1.0321298167466182`}, {
          0.9442682058905724, -0.18675253020376137`}}, 
          0.021487224073264893`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0.18675253020376137`, -1.0321298167466182`}, {
          0.713326866986652, -1.6759025099472382`}}, 0.021487224073264893`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0.18675253020376137`, -1.0321298167466182`}, {
          1.19195964612402, -1.1645550867615992`}}, 0.021487224073264893`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0.18675253020376137`, -1.0321298167466182`}, {
          1.6409765773646845`, -0.6403774986612216}}, 0.021487224073264893`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0.18675253020376137`, -1.0321298167466182`}, {
          0.7088066489955118, -1.1997079969664126`}}, 0.021487224073264893`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0.18675253020376137`, -1.0321298167466182`}, {
          1.6854830337204671`, -1.0538679593258677`}}, 
          0.021487224073264893`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0.18675253020376137`, -1.0321298167466182`}, {
          0.5324647673822538, -0.27491318738210535`}}, 
          0.021487224073264893`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0.18675253020376137`, -1.0321298167466182`}, {
          0.22859817657692916`, -0.6118255365198508}}, 
          0.021487224073264893`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0.18675253020376137`, -1.0321298167466182`}, {
          0.32818017875197136`, -1.4390921114332502`}}, 
          0.021487224073264893`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0.18675253020376137`, -1.0321298167466182`}, {
          1.1607311928258626`, -0.6806176528369875}}, 0.021487224073264893`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0.18675253020376137`, -1.0321298167466182`}, {
          1.1296362714004917`, -1.6725332638240262`}}, 
          0.021487224073264893`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0.18675253020376137`, -1.0321298167466182`}, {
          1.519734529291045, -1.466175125473834}}, 0.021487224073264893`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{1.3646880826618955`, -0.2832876394693673}, {
          0.9442682058905724, -0.18675253020376137`}}, 
          0.021487224073264893`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{1.3646880826618955`, -0.2832876394693673}, {
          0.713326866986652, -1.6759025099472382`}}, 0.021487224073264893`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{1.3646880826618955`, -0.2832876394693673}, {
          1.19195964612402, -1.1645550867615992`}}, 0.021487224073264893`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{1.3646880826618955`, -0.2832876394693673}, {
          1.6409765773646845`, -0.6403774986612216}}, 0.021487224073264893`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{1.3646880826618955`, -0.2832876394693673}, {
          0.7088066489955118, -1.1997079969664126`}}, 0.021487224073264893`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{1.3646880826618955`, -0.2832876394693673}, {
          1.6854830337204671`, -1.0538679593258677`}}, 
          0.021487224073264893`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{1.3646880826618955`, -0.2832876394693673}, {
          0.5324647673822538, -0.27491318738210535`}}, 
          0.021487224073264893`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{1.3646880826618955`, -0.2832876394693673}, {
          0.22859817657692916`, -0.6118255365198508}}, 
          0.021487224073264893`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{1.3646880826618955`, -0.2832876394693673}, {
          0.32818017875197136`, -1.4390921114332502`}}, 
          0.021487224073264893`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{1.3646880826618955`, -0.2832876394693673}, {
          1.1607311928258626`, -0.6806176528369875}}, 0.021487224073264893`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{1.3646880826618955`, -0.2832876394693673}, {
          1.1296362714004917`, -1.6725332638240262`}}, 
          0.021487224073264893`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{1.3646880826618955`, -0.2832876394693673}, {
          1.519734529291045, -1.466175125473834}}, 0.021487224073264893`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0.9442682058905724, -0.18675253020376137`}, {
          0.713326866986652, -1.6759025099472382`}}, 0.021487224073264893`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0.9442682058905724, -0.18675253020376137`}, {
          1.19195964612402, -1.1645550867615992`}}, 0.021487224073264893`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0.9442682058905724, -0.18675253020376137`}, {
          1.6409765773646845`, -0.6403774986612216}}, 0.021487224073264893`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0.9442682058905724, -0.18675253020376137`}, {
          0.7088066489955118, -1.1997079969664126`}}, 0.021487224073264893`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0.9442682058905724, -0.18675253020376137`}, {
          1.6854830337204671`, -1.0538679593258677`}}, 
          0.021487224073264893`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0.9442682058905724, -0.18675253020376137`}, {
          0.5324647673822538, -0.27491318738210535`}}, 
          0.021487224073264893`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0.9442682058905724, -0.18675253020376137`}, {
          0.22859817657692916`, -0.6118255365198508}}, 
          0.021487224073264893`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0.9442682058905724, -0.18675253020376137`}, {
          0.32818017875197136`, -1.4390921114332502`}}, 
          0.021487224073264893`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0.9442682058905724, -0.18675253020376137`}, {
          1.1607311928258626`, -0.6806176528369875}}, 0.021487224073264893`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0.9442682058905724, -0.18675253020376137`}, {
          1.1296362714004917`, -1.6725332638240262`}}, 
          0.021487224073264893`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0.9442682058905724, -0.18675253020376137`}, {
          1.519734529291045, -1.466175125473834}}, 0.021487224073264893`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0.713326866986652, -1.6759025099472382`}, {
          1.19195964612402, -1.1645550867615992`}}, 0.021487224073264893`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0.713326866986652, -1.6759025099472382`}, {
          1.6409765773646845`, -0.6403774986612216}}, 0.021487224073264893`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0.713326866986652, -1.6759025099472382`}, {
          0.7088066489955118, -1.1997079969664126`}}, 0.021487224073264893`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0.713326866986652, -1.6759025099472382`}, {
          1.6854830337204671`, -1.0538679593258677`}}, 
          0.021487224073264893`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0.713326866986652, -1.6759025099472382`}, {
          0.5324647673822538, -0.27491318738210535`}}, 
          0.021487224073264893`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0.713326866986652, -1.6759025099472382`}, {
          0.22859817657692916`, -0.6118255365198508}}, 
          0.021487224073264893`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0.713326866986652, -1.6759025099472382`}, {
          0.32818017875197136`, -1.4390921114332502`}}, 
          0.021487224073264893`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0.713326866986652, -1.6759025099472382`}, {
          1.1607311928258626`, -0.6806176528369875}}, 0.021487224073264893`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0.713326866986652, -1.6759025099472382`}, {
          1.1296362714004917`, -1.6725332638240262`}}, 
          0.021487224073264893`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0.713326866986652, -1.6759025099472382`}, {
          1.519734529291045, -1.466175125473834}}, 0.021487224073264893`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{1.19195964612402, -1.1645550867615992`}, {
          1.6409765773646845`, -0.6403774986612216}}, 0.021487224073264893`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{1.19195964612402, -1.1645550867615992`}, {
          0.7088066489955118, -1.1997079969664126`}}, 0.021487224073264893`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{1.19195964612402, -1.1645550867615992`}, {
          1.6854830337204671`, -1.0538679593258677`}}, 
          0.021487224073264893`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{1.19195964612402, -1.1645550867615992`}, {
          0.5324647673822538, -0.27491318738210535`}}, 
          0.021487224073264893`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{1.19195964612402, -1.1645550867615992`}, {
          0.22859817657692916`, -0.6118255365198508}}, 
          0.021487224073264893`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{1.19195964612402, -1.1645550867615992`}, {
          0.32818017875197136`, -1.4390921114332502`}}, 
          0.021487224073264893`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{1.19195964612402, -1.1645550867615992`}, {
          1.1607311928258626`, -0.6806176528369875}}, 0.021487224073264893`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{1.19195964612402, -1.1645550867615992`}, {
          1.1296362714004917`, -1.6725332638240262`}}, 
          0.021487224073264893`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{1.19195964612402, -1.1645550867615992`}, {
          1.519734529291045, -1.466175125473834}}, 0.021487224073264893`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{1.6409765773646845`, -0.6403774986612216}, {
          0.7088066489955118, -1.1997079969664126`}}, 0.021487224073264893`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{1.6409765773646845`, -0.6403774986612216}, {
          1.6854830337204671`, -1.0538679593258677`}}, 
          0.021487224073264893`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{1.6409765773646845`, -0.6403774986612216}, {
          0.5324647673822538, -0.27491318738210535`}}, 
          0.021487224073264893`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{1.6409765773646845`, -0.6403774986612216}, {
          0.22859817657692916`, -0.6118255365198508}}, 
          0.021487224073264893`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{1.6409765773646845`, -0.6403774986612216}, {
          0.32818017875197136`, -1.4390921114332502`}}, 
          0.021487224073264893`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{1.6409765773646845`, -0.6403774986612216}, {
          1.1607311928258626`, -0.6806176528369875}}, 0.021487224073264893`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{1.6409765773646845`, -0.6403774986612216}, {
          1.1296362714004917`, -1.6725332638240262`}}, 
          0.021487224073264893`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{1.6409765773646845`, -0.6403774986612216}, {
          1.519734529291045, -1.466175125473834}}, 0.021487224073264893`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0.7088066489955118, -1.1997079969664126`}, {
          1.6854830337204671`, -1.0538679593258677`}}, 
          0.021487224073264893`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0.7088066489955118, -1.1997079969664126`}, {
          0.5324647673822538, -0.27491318738210535`}}, 
          0.021487224073264893`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0.7088066489955118, -1.1997079969664126`}, {
          0.22859817657692916`, -0.6118255365198508}}, 
          0.021487224073264893`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0.7088066489955118, -1.1997079969664126`}, {
          0.32818017875197136`, -1.4390921114332502`}}, 
          0.021487224073264893`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0.7088066489955118, -1.1997079969664126`}, {
          1.1607311928258626`, -0.6806176528369875}}, 0.021487224073264893`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0.7088066489955118, -1.1997079969664126`}, {
          1.1296362714004917`, -1.6725332638240262`}}, 
          0.021487224073264893`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0.7088066489955118, -1.1997079969664126`}, {
          1.519734529291045, -1.466175125473834}}, 0.021487224073264893`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{1.6854830337204671`, -1.0538679593258677`}, {
          0.5324647673822538, -0.27491318738210535`}}, 
          0.021487224073264893`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{1.6854830337204671`, -1.0538679593258677`}, {
          0.22859817657692916`, -0.6118255365198508}}, 
          0.021487224073264893`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{1.6854830337204671`, -1.0538679593258677`}, {
          0.32818017875197136`, -1.4390921114332502`}}, 
          0.021487224073264893`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{1.6854830337204671`, -1.0538679593258677`}, {
          1.1607311928258626`, -0.6806176528369875}}, 0.021487224073264893`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{1.6854830337204671`, -1.0538679593258677`}, {
          1.1296362714004917`, -1.6725332638240262`}}, 
          0.021487224073264893`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{1.6854830337204671`, -1.0538679593258677`}, {
          1.519734529291045, -1.466175125473834}}, 0.021487224073264893`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0.5324647673822538, -0.27491318738210535`}, {
          0.22859817657692916`, -0.6118255365198508}}, 
          0.021487224073264893`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0.5324647673822538, -0.27491318738210535`}, {
          0.32818017875197136`, -1.4390921114332502`}}, 
          0.021487224073264893`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0.5324647673822538, -0.27491318738210535`}, {
          1.1607311928258626`, -0.6806176528369875}}, 0.021487224073264893`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0.5324647673822538, -0.27491318738210535`}, {
          1.1296362714004917`, -1.6725332638240262`}}, 
          0.021487224073264893`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0.5324647673822538, -0.27491318738210535`}, {
          1.519734529291045, -1.466175125473834}}, 0.021487224073264893`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0.22859817657692916`, -0.6118255365198508}, {
          0.32818017875197136`, -1.4390921114332502`}}, 
          0.021487224073264893`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0.22859817657692916`, -0.6118255365198508}, {
          1.1607311928258626`, -0.6806176528369875}}, 0.021487224073264893`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0.22859817657692916`, -0.6118255365198508}, {
          1.1296362714004917`, -1.6725332638240262`}}, 
          0.021487224073264893`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0.22859817657692916`, -0.6118255365198508}, {
          1.519734529291045, -1.466175125473834}}, 0.021487224073264893`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0.32818017875197136`, -1.4390921114332502`}, {
          1.1607311928258626`, -0.6806176528369875}}, 0.021487224073264893`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0.32818017875197136`, -1.4390921114332502`}, {
          1.1296362714004917`, -1.6725332638240262`}}, 
          0.021487224073264893`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0.32818017875197136`, -1.4390921114332502`}, {
          1.519734529291045, -1.466175125473834}}, 0.021487224073264893`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{1.1607311928258626`, -0.6806176528369875}, {
          1.1296362714004917`, -1.6725332638240262`}}, 
          0.021487224073264893`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{1.1607311928258626`, -0.6806176528369875}, {
          1.519734529291045, -1.466175125473834}}, 0.021487224073264893`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{1.1296362714004917`, -1.6725332638240262`}, {
          1.519734529291045, -1.466175125473834}}, 0.021487224073264893`]}}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {
         DiskBox[{0.18675253020376142, -2.049407570354761}, 
          0.021487224073264893], InsetBox[
          RowBox[{"{", "}"}], 
          Offset[{2, 2}, {0.20823975427702632, -2.0279203462814963}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.6758134652335379, -0.7139860956500781}, 
          0.021487224073264893], InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "2", "3"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {0.6973006893068028, -0.6924988715768132}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.18675253020376137, -1.0321298167466182}, 
          0.021487224073264893], InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "2", "4"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {0.20823975427702626, -1.0106425926733533}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.3646880826618955, -0.2832876394693673}, 
          0.021487224073264893], InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "3", "4"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {1.3861753067351603, -0.26180041539610244}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.9442682058905724, -0.18675253020376137}, 
          0.021487224073264893], InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"2", "3", "4"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {0.9657554299638372, -0.16526530613049648}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.713326866986652, -1.6759025099472382}, 
          0.021487224073264893], InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "2", "3"},
             {"1", "2", "4"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {0.7348140910599169, -1.6544152858739734}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.19195964612402, -1.1645550867615992}, 
          0.021487224073264893], InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "2", "3"},
             {"1", "3", "4"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {1.213446870197285, -1.1430678626883344}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.6409765773646845, -0.6403774986612216}, 
          0.021487224073264893], InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "2", "3"},
             {"2", "3", "4"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {1.6624638014379494, -0.6188902745879568}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.7088066489955118, -1.1997079969664126}, 
          0.021487224073264893], InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "2", "4"},
             {"1", "3", "4"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {0.7302938730687767, -1.1782207728931477}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.6854830337204671, -1.0538679593258677}, 
          0.021487224073264893], InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "2", "4"},
             {"2", "3", "4"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {1.706970257793732, -1.0323807352526029}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.5324647673822538, -0.27491318738210535}, 
          0.021487224073264893], InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "3", "4"},
             {"2", "3", "4"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {0.5539519914555187, -0.2534259633088405}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.22859817657692916, -0.6118255365198508}, 
          0.021487224073264893], InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "2", "3"},
             {"1", "2", "4"},
             {"1", "3", "4"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {0.250085400650194, -0.590338312446586}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.32818017875197136, -1.4390921114332502}, 
          0.021487224073264893], InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "2", "3"},
             {"1", "2", "4"},
             {"2", "3", "4"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {0.34966740282523623, -1.4176048873599854}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.1607311928258626, -0.6806176528369875}, 
          0.021487224073264893], InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "2", "3"},
             {"1", "3", "4"},
             {"2", "3", "4"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {1.1822184168991274, -0.6591304287637226}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.1296362714004917, -1.6725332638240262}, 
          0.021487224073264893], InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "2", "4"},
             {"1", "3", "4"},
             {"2", "3", "4"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {1.1511234954737566, -1.6510460397507614}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.519734529291045, -1.466175125473834}, 
          0.021487224073264893], InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "2", "3"},
             {"1", "2", "4"},
             {"1", "3", "4"},
             {"2", "3", "4"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {1.5412217533643098, -1.4446879014005691}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Echo",
 CellChangeTimes->{
  3.758857532581544*^9},ExpressionUUID->"6899c56a-efa7-4382-8982-\
bce34c2d35c5"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{{}, {{1, 2, 3}, {1, 2, 4}, {1, 3, 4}, {2, 3, 4}}}, {
      Null, {{1, 2}}}, {
      VertexLabels -> {Automatic}, VertexLabelStyle -> {8}, 
       VertexCoordinates -> {{0, 
          Rational[1, 6]}, {0, 
          Rational[1, 3]}}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
        {Arrowheads[0.], 
         ArrowBox[{{0., 0.16666666666666666`}, {0., 0.3333333333333333}}, 
          0.0021216666666666667`]}}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {DiskBox[{0., 0.16666666666666666}, 0.0021216666666666667], 
         InsetBox[
          StyleBox[
           RowBox[{"{", "}"}],
           StripOnInput->False,
           FontSize->8], 
          Offset[{2, 2}, {0.0021216666666666667, 0.16878833333333332}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0., 0.3333333333333333}, 0.0021216666666666667], InsetBox[
          StyleBox[
           RowBox[{"(", "\[NoBreak]", GridBox[{
              {"1", "2", "3"},
              {"1", "2", "4"},
              {"1", "3", "4"},
              {"2", "3", "4"}
             },
             
             GridBoxAlignment->{
              "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
               "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
             GridBoxSpacings->{"Columns" -> {
                 Offset[0.27999999999999997`], {
                  Offset[0.7]}, 
                 Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
               "Rows" -> {
                 Offset[0.2], {
                  Offset[0.4]}, 
                 Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
           StripOnInput->False,
           FontSize->8], Offset[{2, 2}, {0.0021216666666666667, 0.335455}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Print",
 CellChangeTimes->{{3.758857463520957*^9, 3.7588575327060757`*^9}},
 CellLabel->
  "During evaluation of \
In[536]:=",ExpressionUUID->"e317147b-6cba-41f6-96f2-181acecab9d3"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{
    RowBox[{"{", "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"{", "}"}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2", ",", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "3", ",", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "3", ",", "4"}], "}"}]}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2", ",", "4"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "3"}], "}"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "4"}], "}"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3", ",", "4"}], "}"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"2", ",", "3", ",", "4"}], "}"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "3", ",", "4"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3", ",", "4"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "3", ",", "4"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3", ",", "4"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "3", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3", ",", "4"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "3", ",", "4"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3", ",", "4"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "3", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3", ",", "4"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "3", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3", ",", "4"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "3", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3", ",", "4"}], "}"}]}], "}"}]}], "}"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.747534041189295*^9, 3.747534064092928*^9}, 
   3.7475341307366247`*^9, 3.7475341861675806`*^9, 3.747534218942893*^9, 
   3.747534259577983*^9, {3.7475343843493786`*^9, 3.7475344041365023`*^9}, 
   3.7475344678047724`*^9, {3.7588574635457554`*^9, 3.7588575327219477`*^9}},
 CellLabel->
  "Out[536]=",ExpressionUUID->"a05991f5-97e8-498f-8e0f-8e58a9aefc32"]
}, Open  ]]
}, Closed]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Expected Circuits", "Section",
 CellChangeTimes->{{3.743553320870383*^9, 
  3.7435533235382214`*^9}},ExpressionUUID->"a306391f-3d23-4981-83ed-\
841f77fb9768"],

Cell[CellGroupData[{

Cell["Construction", "Subsection",
 CellChangeTimes->{{3.7455416058085585`*^9, 
  3.7455416068698483`*^9}},ExpressionUUID->"79807631-7ab6-4576-9c78-\
ca57d7932be5"],

Cell[CellGroupData[{

Cell["PreExpectedCircuits", "Subsubsection",
 CellChangeTimes->{{3.743553422527877*^9, 
  3.743553428367244*^9}},ExpressionUUID->"6f7009e9-a34b-44d8-9fc7-\
205ae228ef6e"],

Cell["\<\
The first set I generate, of just wedging circuits with additional elements\
\>", "Text",
 CellChangeTimes->{{3.74355343095895*^9, 
  3.743553463554511*^9}},ExpressionUUID->"a570dff4-4712-4689-8998-\
2822f79023c1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"PreExpectedCircuits", "[", 
   RowBox[{"M_", ",", "k_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"subsets", ",", "circuits", ",", "nonzero", ",", "return"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"subsets", "=", 
      RowBox[{"Subsets", "[", 
       RowBox[{
        RowBox[{"First", "[", "M", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", "-", "1"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"circuits", "=", 
      RowBox[{"Circuits", "[", "M", "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"return", "=", 
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Union", "[", 
         RowBox[{"I", ",", 
          RowBox[{"{", "elem", "}"}]}], "]"}], "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"circuit", ",", "circuits"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"I", ",", "subsets"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"elem", ",", 
          RowBox[{"Complement", "[", 
           RowBox[{"circuit", ",", "I"}], "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Union", "@", 
      RowBox[{"Flatten", "[", 
       RowBox[{"return", ",", "1"}], "]"}]}]}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7435535363639603`*^9, 3.7435536020794964`*^9}, {
   3.7435536403417664`*^9, 3.7435537575708227`*^9}, 3.743554064345271*^9, {
   3.7438870486194544`*^9, 3.7438870917909393`*^9}, {3.743887517824396*^9, 
   3.743887519829934*^9}, {3.7438876535278873`*^9, 3.743887654465505*^9}, {
   3.7455430776522264`*^9, 3.7455430947052245`*^9}, {3.7600122634760165`*^9, 
   3.760012271431883*^9}, {3.7600123054769764`*^9, 3.7600123143655505`*^9}, {
   3.760012380041214*^9, 3.7600123930257006`*^9}, {3.7600124269881124`*^9, 
   3.7600124329371896`*^9}, {3.760012470188314*^9, 3.760012476282076*^9}, {
   3.760057001883153*^9, 3.760057034304973*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"d420430f-2470-42eb-a7b7-ae29d7a74101"]
}, Closed]],

Cell[CellGroupData[{

Cell["ExpectedCircuits", "Subsubsection",
 CellChangeTimes->{{3.7435534090801134`*^9, 
  3.743553411675457*^9}},ExpressionUUID->"954cc692-6a01-4fe0-a370-\
f07bdec679fa"],

Cell["The minimal elements of the pre expected circuits", "Text",
 CellChangeTimes->{{3.74355346563071*^9, 
  3.7435534717530727`*^9}},ExpressionUUID->"f68929f7-53b3-4fcd-b270-\
6c6b39bf9829"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ExpectedCircuits", "[", 
   RowBox[{"M_", ",", "k_"}], "]"}], ":=", 
  RowBox[{"Minimal", "[", 
   RowBox[{"Complement", "[", 
    RowBox[{
     RowBox[{"PreExpectedCircuits", "[", 
      RowBox[{"M", ",", "k"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"{", "}"}], "}"}]}], "]"}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7435537705877857`*^9, 3.743553796105383*^9}, {
  3.7600123533778095`*^9, 3.7600123617788754`*^9}},
 CellLabel->"In[47]:=",ExpressionUUID->"587185c3-d316-4b00-b606-8668b1036db6"]
}, Closed]],

Cell[CellGroupData[{

Cell["WedgeCircuits", "Subsubsection",
 CellChangeTimes->{{3.7602913442324224`*^9, 3.7602913444137955`*^9}, {
  3.760291459329272*^9, 3.7602914729788446`*^9}, {3.7885337880582247`*^9, 
  3.788533788332522*^9}},ExpressionUUID->"7fada537-a022-4a0c-b6fb-\
c5161ae894d0"],

Cell[TextData[{
 StyleBox["Improvements: ",
  FontWeight->"Bold"],
 "optimize this in some way??? Orthogonal duals seem like they should be very \
expensive.\n\nThe code for DoubleOrthogonalDual[] is in ",
 Cell[BoxData[
  FormBox[
   RowBox[{"Tropical", "\[Rule]", 
    SubscriptBox["L", "M"]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "c1d5f10f-e38e-4b82-95a9-30ab82f8d571"],
 "\n\nTakes the double orthogonal dual, removes the trivial element, and \
selects minimal elements."
}], "Text",
 CellChangeTimes->{{3.7602914661491184`*^9, 3.760291511170785*^9}, {
  3.7885337935690174`*^9, 3.7885338902159147`*^9}, {3.7885352583806295`*^9, 
  3.7885352797793427`*^9}},ExpressionUUID->"05673983-97b2-4b75-8856-\
f620748cc50c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"WedgeCircuits", "[", 
   RowBox[{"M_", ",", "k_"}], "]"}], ":=", 
  RowBox[{"Minimal", "[", "\[IndentingNewLine]", 
   RowBox[{"Complement", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"DoubleOrthogonalDual", "[", 
      RowBox[{
       RowBox[{"Subsets", "[", 
        RowBox[{
         RowBox[{"Ground", "[", "M", "]"}], ",", 
         RowBox[{"{", "k", "}"}]}], "]"}], ",", 
       RowBox[{"ExpectedCircuits", "[", 
        RowBox[{"M", ",", "k"}], "]"}]}], "]"}], "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"{", "}"}], "}"}]}], "\[IndentingNewLine]", "]"}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.760291363144288*^9, 3.7602914018295207`*^9}, {
  3.760291435631915*^9, 3.7602914565502305`*^9}, {3.7602916901140356`*^9, 
  3.7602916917930346`*^9}, {3.788458224039236*^9, 3.788458231671247*^9}},
 CellLabel->"In[48]:=",ExpressionUUID->"17d08c01-d4d7-4229-bd42-300063f7efc9"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Misc", "Subsection",
 CellChangeTimes->{{3.7468424166025667`*^9, 
  3.746842417017056*^9}},ExpressionUUID->"161253ed-354e-4140-b13f-\
8cb4df848915"],

Cell[CellGroupData[{

Cell["CircuitCompletion???", "Subsubsection",
 CellChangeTimes->{{3.7468424186726174`*^9, 3.7468424206647854`*^9}, {
  3.7600125274250402`*^9, 
  3.760012527717893*^9}},ExpressionUUID->"c9600506-2380-4b42-ab01-\
5e0930f114bb"],

Cell["\<\
Given some collection Cexp (or more generally, any collection of subsets of a \
ground set that satisfy C1 and C2 axioms), adds additional elements to make \
it into a set of circuits
No clue if this is even possible\
\>", "Text",
 CellChangeTimes->{{3.746842440517603*^9, 3.7468425040519686`*^9}, {
  3.7884579548514943`*^9, 
  3.7884579648211317`*^9}},ExpressionUUID->"68f31195-e59f-4b03-86d9-\
57535b2bbf9b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"CircuitCompletion", "[", "Cexp_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ","}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7468424235331297`*^9, 3.7468424354902883`*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"144f6995-0bde-46d1-b9a1-e0f967e47090"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Congruences Proof", "Subsection",
 CellChangeTimes->{{3.7455416163281574`*^9, 
  3.745541619131826*^9}},ExpressionUUID->"d427705c-db91-4199-9ae0-\
95db8460eee7"],

Cell[TextData[{
 "No longer needed, since I finished the proof that ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["C", "exp"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "2515feda-da80-4362-8f12-1dbc55f07cbc"],
 " generates the same congruences as ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["C", "pre"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "5e7c1cac-aecf-4c6c-8aea-bcd46f130da1"],
 ", using these functions to help understand the various cases"
}], "Text",
 CellChangeTimes->{{3.746840947174757*^9, 3.7468409617646737`*^9}, {
  3.7468415743406334`*^9, 3.7468415787920637`*^9}, {3.788458280880661*^9, 
  3.7884583011039357`*^9}},ExpressionUUID->"cea14896-494d-4278-8c69-\
ab2abe69c270"],

Cell[CellGroupData[{

Cell["CoverQ", "Subsubsection",
 CellChangeTimes->{{3.7435517762343993`*^9, 
  3.743551777023715*^9}},ExpressionUUID->"49448b8f-7241-46c3-9b9d-\
cb32d4c48bd3"],

Cell["\<\
Checks if the sets in SubCollection \[OpenCurlyDoubleQuote]cover\
\[CloseCurlyDoubleQuote] the sets in Collection; ie if every element of \
Collection can be expressed as a union of elements of SubCollection\
\>", "Text",
 CellChangeTimes->{{3.743551778388569*^9, 3.7435519087404556`*^9}, {
  3.7435519453826666`*^9, 3.7435519784204426`*^9}, {3.74355333567918*^9, 
  3.7435533359146957`*^9}},ExpressionUUID->"9631a9b8-f8de-48e3-a412-\
5b74eb5192ea"],

Cell[BoxData[
 RowBox[{
  RowBox[{"CoverQ", "[", 
   RowBox[{"SubCollection_", ",", "Collection_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"collection", ",", "subsets"}], "}"}], ",", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
     "remove", " ", "the", " ", "trivial", " ", "cases", " ", "of", " ", "a", 
      " ", "union", " ", "of", " ", "a", " ", "single", " ", "element"}], 
     "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"collection", "=", 
      RowBox[{"Complement", "[", 
       RowBox[{"Collection", ",", "SubCollection"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Catch", "[", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "check", " ", "the", " ", "covering", " ", "condition", " ", "for", 
        " ", "each", " ", "element", " ", "in", " ", "the", " ", 
        "collection"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Do", "[", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"if", " ", "it", " ", 
           RowBox[{"isn", "'"}], "t", " ", "covered"}], ",", " ", 
          RowBox[{
           RowBox[{"Echo", "[", "]"}], " ", "the", " ", "counterexample", " ",
            "and", " ", "exit"}]}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"regular", " ", "\[Equal]", " ", 
           RowBox[{
           "should", " ", "be", " ", "fine", " ", "since", " ", "I", " ", 
            "everything", " ", "is", " ", "ordered", " ", "correctly"}]}], 
          ",", " ", 
          RowBox[{
           RowBox[{"ie", ".", " ", 
            RowBox[{"won", "'"}]}], "t", " ", "be", " ", "comparing", " ", 
           RowBox[{"{", 
            RowBox[{"1", ",", "2"}], "}"}], " ", "to", " ", 
           RowBox[{"{", 
            RowBox[{"2", ",", "1"}], "}"}], " ", "and", " ", "getting", " ", 
           "False"}]}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"Not", "[", 
            RowBox[{
             RowBox[{"Union", "@@", 
              RowBox[{"Select", "[", 
               RowBox[{"SubCollection", ",", 
                RowBox[{
                 RowBox[{"SubsetQ", "[", 
                  RowBox[{"set", ",", "#"}], "]"}], "&"}]}], "]"}]}], 
             "\[Equal]", "set"}], "]"}], ",", 
           RowBox[{
            RowBox[{"Echo", "[", 
             RowBox[{"set", ",", "\"\<Fails for\>\""}], "]"}], ";", 
            RowBox[{"Throw", "[", "False", "]"}]}]}], "]"}], 
         "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"set", ",", "collection"}], "}"}]}], "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"Throw", "[", "True", "]"}]}], "\[IndentingNewLine]", 
      "]"}]}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7435519101144056`*^9, 3.7435519208885927`*^9}, {
  3.743551954983663*^9, 3.7435521967393303`*^9}, {3.7435522376216283`*^9, 
  3.743552327488183*^9}, {3.743552441827947*^9, 3.743552472809235*^9}, {
  3.7435525167115116`*^9, 3.7435525632272863`*^9}, {3.7435525941070366`*^9, 
  3.7435525947320795`*^9}, {3.7435526536333375`*^9, 3.7435527546248407`*^9}, {
  3.743552789708021*^9, 3.7435528170478773`*^9}},
 CellLabel->
  "In[235]:=",ExpressionUUID->"b02c1bc0-3c91-4709-aa75-e63237772a91"]
}, Closed]],

Cell[CellGroupData[{

Cell["ExpectedCircuitsCoverQ", "Subsubsection",
 CellChangeTimes->{{3.743553866910656*^9, 
  3.743553900728588*^9}},ExpressionUUID->"5634df5f-af22-422e-9b59-\
b187c1d6c4f8"],

Cell[TextData[{
 "Like CoverQ but takes the matroid and k, and first generates the pre \
expected circuits and expected circuits, and see if they cover.\nSaves the \
step of regenerating ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["C", "pre"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "6af6de5f-5e8a-48b9-b511-4235c915a68f"],
 " to find ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["C", "exp"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "35ea939d-397e-47fa-b58f-1495cc6f50f1"],
 "."
}], "Text",
 CellChangeTimes->{{3.743553903563661*^9, 3.7435539396537695`*^9}, {
  3.745280061812461*^9, 3.745280079821729*^9}, {3.7455431269270535`*^9, 
  3.745543146614939*^9}},ExpressionUUID->"965306c1-e42d-41a4-abea-\
74002c215e50"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ExpectedCircuitsCoverQ", "[", 
   RowBox[{"M_", ",", "k_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"pre", ",", "exp"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"pre", "=", 
      RowBox[{"PreExpectedCircuits", "[", 
       RowBox[{"M", ",", "k"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"exp", "=", 
      RowBox[{"Minimal", "[", 
       RowBox[{"Select", "[", 
        RowBox[{"pre", ",", 
         RowBox[{
          RowBox[{"#", "\[NotEqual]", 
           RowBox[{"{", "}"}]}], "&"}]}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"CoverQ", "[", 
      RowBox[{"exp", ",", "pre"}], "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7435539415237665`*^9, 3.7435540226156545`*^9}},
 CellLabel->
  "In[236]:=",ExpressionUUID->"28fa6720-f0f4-49eb-9098-69a230a073aa"]
}, Closed]]
}, Closed]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Useful", "Chapter",
 CellChangeTimes->{{3.762546067310094*^9, 
  3.7625460678812466`*^9}},ExpressionUUID->"89bf2b46-87ee-427b-bac0-\
3589995011a1"],

Cell[CellGroupData[{

Cell["Matroids", "Section",
 CellChangeTimes->{{3.7625411079723434`*^9, 3.762541108691221*^9}, {
  3.7625460789901648`*^9, 
  3.7625460892791944`*^9}},ExpressionUUID->"ca7efd2b-9ca6-4a53-9726-\
eeea768936c6"],

Cell[TextData[{
 "How to import the data from ",
 ButtonBox["http://www-imai.is.s.u-tokyo.ac.jp/~ymatsu/matroid/",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://www-imai.is.s.u-tokyo.ac.jp/~ymatsu/matroid/"], None},
  ButtonNote->"http://www-imai.is.s.u-tokyo.ac.jp/~ymatsu/matroid/"],
 " to our format\nMust format their data as a .txt file that looks like:"
}], "Text",
 CellChangeTimes->{{3.7625460965729847`*^9, 
  3.7625461728412256`*^9}},ExpressionUUID->"7f59a028-11d3-4568-9054-\
e5bb8b8f8047"],

Cell[CellGroupData[{

Cell["Data file format", "Subsubsection",
 CellChangeTimes->{{3.76254623295715*^9, 
  3.76254623969614*^9}},ExpressionUUID->"f2749846-f931-4580-8ed9-\
e9c2b7011581"],

Cell["\<\
Some text in the beginning where I can describe
what\[CloseCurlyQuote]s in this file
etc. etc.

START

2 1
**
0*

3 1
***
0**
00*

n d
Matroid codes\
\>", "Text",
 CellChangeTimes->{{3.7625461741836624`*^9, 
  3.7625462225678034`*^9}},ExpressionUUID->"376ee309-0f89-4a91-8c95-\
a431405f73a2"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Get matroids", "Subsubsection",
 CellChangeTimes->{{3.762545715500414*^9, 
  3.762545728241621*^9}},ExpressionUUID->"59290e93-cf67-47fb-b7cf-\
2633fc61d119"],

Cell["Pick data file", "Text",
 CellChangeTimes->{{3.7625457771362886`*^9, 
  3.762545778836154*^9}},ExpressionUUID->"4a4a1ff1-b594-4486-92a3-\
c61ed720f3c7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "=", 
   RowBox[{"SystemDialogInput", "[", "\"\<FileOpen\>\"", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7625439709618034`*^9, 3.7625439986709476`*^9}, {
  3.762545416231311*^9, 3.7625454285646877`*^9}, {3.7625457813300657`*^9, 
  3.762545781534419*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"fd063968-3f18-421c-9b97-658479f96711"],

Cell["\<\

Load and interpret data\
\>", "Text",
 CellChangeTimes->{{3.7625457874531603`*^9, 
  3.7625458032438736`*^9}},ExpressionUUID->"1a853f7f-5374-4195-9798-\
66beaa47632a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Read", " ", "in", " ", "file"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"matroidCodes", "=", 
     RowBox[{"ReadList", "[", 
      RowBox[{"f", ",", "String"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Remove", " ", "everything", " ", "before", " ", "START"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"i", "=", 
     RowBox[{
      RowBox[{"Position", "[", 
       RowBox[{"matroidCodes", ",", "\"\<START\>\""}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"matroidCodes", "=", 
     RowBox[{"Drop", "[", 
      RowBox[{"matroidCodes", ",", "i"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Split", " ", "at", " ", "the", " ", "n"}], ",", "d"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"codesList", "=", 
     RowBox[{"SplitBy", "[", 
      RowBox[{"matroidCodes", ",", 
       RowBox[{
        RowBox[{"StringContainsQ", "[", 
         RowBox[{"#", ",", "\"\<*\>\""}], "]"}], "&"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Interpret", " ", "the", " ", "codes"}], ",", " ", 
     RowBox[{
     "and", " ", "form", " ", "an", " ", "association", " ", 
      "\"\<matroids\>\""}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Elements", " ", "are", " ", 
      RowBox[{"{", 
       RowBox[{"n", ",", "d"}], "}"}]}], "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
       "list", " ", "of", " ", "matroids", " ", "with", " ", "those", " ", 
        "n"}], ",", "d"}], "}"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"matroids", "=", 
     RowBox[{"Association", "@", 
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"n", ",", "d"}], "}"}], "=", 
          RowBox[{"ToExpression", "@", 
           RowBox[{"StringSplit", "[", 
            RowBox[{"codesList", "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{
                RowBox[{"2", "i"}], "-", "1"}], ",", "1"}], "]"}], "]"}], 
            "]"}]}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"rawCodes", "=", 
          RowBox[{"codesList", "[", 
           RowBox[{"[", 
            RowBox[{"2", "i"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"groundSet", "=", 
          RowBox[{"Range", "[", "n", "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"subsets", "=", 
          RowBox[{"Reverse", "@", 
           RowBox[{"Subsets", "[", 
            RowBox[{"groundSet", ",", 
             RowBox[{"{", "d", "}"}]}], "]"}]}]}], ";", "\[IndentingNewLine]",
          "\[IndentingNewLine]", 
         RowBox[{"codedBases", "=", 
          RowBox[{"ToCharacterCode", "@", "rawCodes"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"l", "=", 
          RowBox[{"Length", "[", 
           RowBox[{"First", "[", "codedBases", "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"decodedBases", "=", 
          RowBox[{"Reverse", "/@", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"bases", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "\[Equal]", "42"}], ",", 
               RowBox[{"subsets", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ",", "Nothing"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"bases", ",", "codedBases"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", "l"}], "}"}]}], "]"}]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Ms", "=", 
          RowBox[{"Transpose", "@", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{"groundSet", ",", 
               RowBox[{"Length", "[", "decodedBases", "]"}]}], "]"}], ",", 
             "decodedBases"}], "}"}]}]}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"n", ",", "d"}], "}"}], "\[Rule]", "Ms"}]}], 
        "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          FractionBox[
           RowBox[{"Length", "[", "codesList", "]"}], "2"]}], "}"}]}], 
       "]"}]}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.762544134767913*^9, 3.7625441370845814`*^9}, {
  3.762544170351493*^9, 3.7625442112552004`*^9}, {3.762545392960388*^9, 
  3.762545579710196*^9}, {3.7625475440549603`*^9, 
  3.7625475468153963`*^9}},ExpressionUUID->"15b81338-2c07-4b50-a7cc-\
433764525c28"],

Cell["\<\

Check B3 axiom
May take a while, don\[CloseCurlyQuote]t need to do this if you trust the \
data file and code\
\>", "Text",
 CellChangeTimes->{{3.76254580782375*^9, 
  3.7625458202239456`*^9}},ExpressionUUID->"e68243ab-8ddd-4d0c-8133-\
bc7cb5d2ec58"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Ms", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Values", "[", "matroids", "]"}], ",", "1"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"B3Q", "[", 
     RowBox[{"Last", "[", "#", "]"}], "]"}], "&"}], "/@", "Ms"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7625452278380585`*^9, 3.762545288371188*^9}, {
  3.7625453230381136`*^9, 3.762545352481697*^9}, {3.7625455836977468`*^9, 
  3.762545626217659*^9}, {3.7625458226530123`*^9, 3.762545822906476*^9}},
 CellLabel->"In[57]:=",ExpressionUUID->"3e5cb953-02da-4774-a782-c2c55c8b1b76"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Save matroids", "Subsubsection",
 CellChangeTimes->{{3.7625457354579325`*^9, 
  3.7625457365471506`*^9}},ExpressionUUID->"00147192-a50f-4cee-9979-\
5f325bba64c4"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"f", "=", 
   RowBox[{"SystemDialogInput", "[", "\"\<FileSave\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"f", ",", "matroids"}], "]"}]}], "Input",
 CellChangeTimes->{{3.7625456364842415`*^9, 3.7625456927992563`*^9}, {
  3.762545744171281*^9, 3.7625457443215075`*^9}},
 CellLabel->"In[59]:=",ExpressionUUID->"58fe7978-48a0-4ed2-b1b1-6e96302f8b45"],

Cell[BoxData["\<\"C:\\\\Users\\\\Nick\\\\Documents\\\\Undergrad\\\\Labs\\\\\
Marcus\\\\Data\\\\matroids.txt\"\>"], "Output",
 CellChangeTimes->{3.7625459508486977`*^9},
 CellLabel->"Out[60]=",ExpressionUUID->"8455a7d9-dc14-4ab6-9188-9a29e9006d79"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Load matroids", "Subsubsection",
 CellChangeTimes->{{3.7625457384173527`*^9, 3.7625457399989405`*^9}, {
  3.7625457704279037`*^9, 
  3.7625457720118294`*^9}},ExpressionUUID->"ef89e262-6a37-407f-a7ea-\
8e51b279e186"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"f", "=", 
   RowBox[{"SystemDialogInput", "[", "\"\<FileOpen\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"matroids", "=", 
  RowBox[{"ToExpression", "@", 
   RowBox[{"Import", "[", "f", "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.7625457457679253`*^9, 3.7625457631499786`*^9}},
 CellLabel->"In[61]:=",ExpressionUUID->"c5192d08-2425-4557-96e0-9450f6039717"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Alternative format", "Subsubsection",
 CellChangeTimes->{{3.7625459944990053`*^9, 
  3.762545997243703*^9}},ExpressionUUID->"61e5e8a1-d058-448a-af64-\
5f4dd54f4862"],

Cell["\<\
If you don\[CloseCurlyQuote]t really care about the {n,d} of the matroids, \
you can do the following to just obtain a list of the matroids\
\>", "Text",
 CellChangeTimes->{{3.7625459986643095`*^9, 
  3.762546037972378*^9}},ExpressionUUID->"f2d3eb71-f106-4588-8e00-\
fad70f5e51d9"],

Cell[BoxData[
 RowBox[{"matroidsList", "=", 
  RowBox[{"Flatten", "[", 
   RowBox[{
    RowBox[{"Values", "[", "matroids", "]"}], ",", "1"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.762546040409815*^9, 3.7625460491866536`*^9}},
 CellLabel->"In[63]:=",ExpressionUUID->"d9fe7d13-2fef-4b3c-bb15-214a347e3102"]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Work", "Chapter",
 CellChangeTimes->{{3.739819654780527*^9, 3.739819655358818*^9}, {
  3.7398197815334764`*^9, 
  3.739819784643196*^9}},ExpressionUUID->"69996b7b-6b44-48f3-ad6b-\
6b73715f2f7c"],

Cell[CellGroupData[{

Cell["1/20/20", "Section",
 CellChangeTimes->{{3.7885333430947833`*^9, 
  3.7885333452935257`*^9}},ExpressionUUID->"a470a52b-f266-4612-aaeb-\
13fa138fd473"],

Cell[CellGroupData[{

Cell["Testing the new Lattice[]", "Subsection",
 CellChangeTimes->{{3.788533347421682*^9, 
  3.788533357911786*^9}},ExpressionUUID->"d0e3c629-8659-4bf8-9991-\
3077d0b4d821"],

Cell[BoxData[
 RowBox[{
  RowBox[{"classes", "=", 
   RowBox[{"ToExpression", "@", 
    RowBox[{"Import", "[", 
     RowBox[{"SystemDialogInput", "[", "\"\<FileOpen\>\"", "]"}], "]"}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7885298955326123`*^9, 3.7885299120913672`*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"a3f2b4b3-a769-432a-8e41-2762de979f3b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"vertices", "=", 
  RowBox[{"Keys", "[", "classes", "]"}]}]], "Input",
 CellChangeTimes->{{3.7885299429498158`*^9, 3.788529953277234*^9}},
 CellLabel->"In[52]:=",ExpressionUUID->"d39d43c8-7c57-4c70-b659-db8f59bbc0c0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"1", ",", "3"}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"1", ",", "4"}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"1", ",", "5"}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"1", ",", "6"}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"2", ",", "3"}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"2", ",", "4"}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"2", ",", "5"}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"2", ",", "6"}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"3", ",", "4"}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"3", ",", "5"}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"3", ",", "6"}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"4", ",", "5"}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"4", ",", "6"}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"5", ",", "6"}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "4"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "5"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "6"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "5"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "6"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "6"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "4"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "5"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "6"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "5"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "6"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "6"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "5"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "6"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "5"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "6"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "6"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "4"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "6"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "4"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "6"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "6"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "4"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "5"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "4"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "5"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "5"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "5"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "6"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "6"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "5"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "6"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "6"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "4"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "6"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "6"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "4"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "5"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "5"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"3", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "6"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"3", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "6"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"3", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "5"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "6"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "6"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "5"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "6"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "6"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "5"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "6"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "6"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "5"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "6"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "6"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "4"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "5"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "5"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "4"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "6"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "6"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "6"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "6"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "6"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "6"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "6"}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7885299501296153`*^9, 3.7885299536053514`*^9}, 
   3.7885312925179996`*^9},
 CellLabel->"Out[52]=",ExpressionUUID->"85a854ca-a9da-4144-9bff-678b55f434af"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"g", "=", 
  RowBox[{"Lattice", "[", "vertices", "]"}]}]], "Input",
 CellChangeTimes->{{3.788529957236642*^9, 3.788529959473628*^9}, {
  3.7885301702240987`*^9, 3.7885301703926086`*^9}},
 CellLabel->
  "In[100]:=",ExpressionUUID->"b3e476f0-3048-4c62-87e8-183cb720125f"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{{}, {{1, 2}}, {{1, 3}}, {{1, 4}}, {{1, 5}}, {{1, 6}}, {{2, 3}}, {{
       2, 4}}, {{2, 5}}, {{2, 6}}, {{3, 4}}, {{3, 5}}, {{3, 6}}, {{4, 5}}, {{
       4, 6}}, {{5, 6}}, {{1, 2}, {3, 4}}, {{1, 2}, {3, 5}}, {{1, 2}, {3, 
       6}}, {{1, 2}, {4, 5}}, {{1, 2}, {4, 6}}, {{1, 2}, {5, 6}}, {{1, 3}, {2,
        4}}, {{1, 3}, {2, 5}}, {{1, 3}, {2, 6}}, {{1, 3}, {4, 5}}, {{1, 3}, {
       4, 6}}, {{1, 3}, {5, 6}}, {{1, 4}, {2, 3}}, {{1, 4}, {2, 5}}, {{1, 
       4}, {2, 6}}, {{1, 4}, {3, 5}}, {{1, 4}, {3, 6}}, {{1, 4}, {5, 6}}, {{1,
        5}, {2, 3}}, {{1, 5}, {2, 4}}, {{1, 5}, {2, 6}}, {{1, 5}, {3, 4}}, {{
       1, 5}, {3, 6}}, {{1, 5}, {4, 6}}, {{1, 6}, {2, 3}}, {{1, 6}, {2, 
       4}}, {{1, 6}, {2, 5}}, {{1, 6}, {3, 4}}, {{1, 6}, {3, 5}}, {{1, 6}, {4,
        5}}, {{2, 3}, {4, 5}}, {{2, 3}, {4, 6}}, {{2, 3}, {5, 6}}, {{2, 4}, {
       3, 5}}, {{2, 4}, {3, 6}}, {{2, 4}, {5, 6}}, {{2, 5}, {3, 4}}, {{2, 
       5}, {3, 6}}, {{2, 5}, {4, 6}}, {{2, 6}, {3, 4}}, {{2, 6}, {3, 5}}, {{2,
        6}, {4, 5}}, {{3, 4}, {5, 6}}, {{3, 5}, {4, 6}}, {{3, 6}, {4, 5}}, {{
       1, 2}, {3, 4}, {5, 6}}, {{1, 2}, {3, 5}, {4, 6}}, {{1, 2}, {3, 6}, {4, 
       5}}, {{1, 3}, {2, 4}, {5, 6}}, {{1, 3}, {2, 5}, {4, 6}}, {{1, 3}, {2, 
       6}, {4, 5}}, {{1, 4}, {2, 3}, {5, 6}}, {{1, 4}, {2, 5}, {3, 6}}, {{1, 
       4}, {2, 6}, {3, 5}}, {{1, 5}, {2, 3}, {4, 6}}, {{1, 5}, {2, 4}, {3, 
       6}}, {{1, 5}, {2, 6}, {3, 4}}, {{1, 6}, {2, 3}, {4, 5}}, {{1, 6}, {2, 
       4}, {3, 5}}, {{1, 6}, {2, 5}, {3, 4}}, {{1, 2}, {1, 3}, {1, 4}, {1, 
       5}, {1, 6}}, {{1, 2}, {2, 3}, {2, 4}, {2, 5}, {2, 6}}, {{1, 3}, {2, 
       3}, {3, 4}, {3, 5}, {3, 6}}, {{1, 4}, {2, 4}, {3, 4}, {4, 5}, {4, 
       6}}, {{1, 5}, {2, 5}, {3, 5}, {4, 5}, {5, 6}}, {{1, 6}, {2, 6}, {3, 
       6}, {4, 6}, {5, 6}}, {{1, 2}, {1, 3}, {1, 4}, {1, 5}, {1, 6}, {2, 3}, {
       2, 4}, {2, 5}, {2, 6}, {3, 4}, {3, 5}, {3, 6}, {4, 5}, {4, 6}, {5, 
       6}}}, {
       SparseArray[
       Automatic, {83, 83}, 0, {
        1, {{0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 19, 
          21, 23, 25, 27, 29, 31, 33, 35, 37, 39, 41, 43, 45, 47, 49, 51, 53, 
          55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 85, 87, 
          89, 91, 93, 95, 97, 99, 101, 103, 105, 108, 111, 114, 117, 120, 123,
           126, 129, 132, 135, 138, 141, 144, 147, 150, 155, 160, 165, 170, 
          175, 180, 201}, {{1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {1}, {
          1}, {1}, {1}, {1}, {1}, {2}, {11}, {2}, {12}, {2}, {13}, {2}, {
          14}, {2}, {15}, {2}, {16}, {3}, {8}, {3}, {9}, {3}, {10}, {3}, {
          14}, {3}, {15}, {3}, {16}, {4}, {7}, {4}, {9}, {4}, {10}, {4}, {
          12}, {4}, {13}, {4}, {16}, {5}, {7}, {5}, {8}, {5}, {10}, {5}, {
          11}, {5}, {13}, {5}, {15}, {6}, {7}, {6}, {8}, {6}, {9}, {6}, {
          11}, {6}, {12}, {6}, {14}, {7}, {14}, {7}, {15}, {7}, {16}, {8}, {
          12}, {8}, {13}, {8}, {16}, {9}, {11}, {9}, {13}, {9}, {15}, {10}, {
          11}, {10}, {12}, {10}, {14}, {11}, {16}, {12}, {15}, {13}, {14}, {
          17}, {22}, {59}, {18}, {21}, {60}, {19}, {20}, {61}, {23}, {28}, {
          52}, {24}, {27}, {55}, {25}, {26}, {58}, {29}, {34}, {49}, {30}, {
          33}, {54}, {31}, {32}, {57}, {35}, {40}, {48}, {36}, {39}, {51}, {
          37}, {38}, {56}, {41}, {46}, {47}, {42}, {45}, {50}, {43}, {44}, {
          53}, {2}, {3}, {4}, {5}, {6}, {2}, {7}, {8}, {9}, {10}, {3}, {7}, {
          11}, {12}, {13}, {4}, {8}, {11}, {14}, {15}, {5}, {9}, {12}, {14}, {
          16}, {6}, {10}, {13}, {15}, {16}, {62}, {63}, {64}, {65}, {66}, {
          67}, {68}, {69}, {70}, {71}, {72}, {73}, {74}, {75}, {76}, {77}, {
          78}, {79}, {80}, {81}, {82}}}, Pattern}], Null}, {
      VertexLabels -> {"Name"}, VertexCoordinates -> {{
          Rational[1, 2], -5}, {
          Rational[-13, 2], -4}, {
          Rational[-11, 2], -4}, {
          Rational[-9, 2], -4}, {
          Rational[-7, 2], -4}, {
          Rational[-5, 2], -4}, {
          Rational[-3, 2], -4}, {
          Rational[-1, 2], -4}, {
          Rational[1, 2], -4}, {
          Rational[3, 2], -4}, {
          Rational[5, 2], -4}, {
          Rational[7, 2], -4}, {
          Rational[9, 2], -4}, {
          Rational[11, 2], -4}, {
          Rational[13, 2], -4}, {
          Rational[15, 2], -4}, {
          Rational[-43, 2], -3}, {
          Rational[-41, 2], -3}, {
          Rational[-39, 2], -3}, {
          Rational[-37, 2], -3}, {
          Rational[-35, 2], -3}, {
          Rational[-33, 2], -3}, {
          Rational[-31, 2], -3}, {
          Rational[-29, 2], -3}, {
          Rational[-27, 2], -3}, {
          Rational[-25, 2], -3}, {
          Rational[-23, 2], -3}, {
          Rational[-21, 2], -3}, {
          Rational[-19, 2], -3}, {
          Rational[-17, 2], -3}, {
          Rational[-15, 2], -3}, {
          Rational[-13, 2], -3}, {
          Rational[-11, 2], -3}, {
          Rational[-9, 2], -3}, {
          Rational[-7, 2], -3}, {
          Rational[-5, 2], -3}, {
          Rational[-3, 2], -3}, {
          Rational[-1, 2], -3}, {
          Rational[1, 2], -3}, {
          Rational[3, 2], -3}, {
          Rational[5, 2], -3}, {
          Rational[7, 2], -3}, {
          Rational[9, 2], -3}, {
          Rational[11, 2], -3}, {
          Rational[13, 2], -3}, {
          Rational[15, 2], -3}, {
          Rational[17, 2], -3}, {
          Rational[19, 2], -3}, {
          Rational[21, 2], -3}, {
          Rational[23, 2], -3}, {
          Rational[25, 2], -3}, {
          Rational[27, 2], -3}, {
          Rational[29, 2], -3}, {
          Rational[31, 2], -3}, {
          Rational[33, 2], -3}, {
          Rational[35, 2], -3}, {
          Rational[37, 2], -3}, {
          Rational[39, 2], -3}, {
          Rational[41, 2], -3}, {
          Rational[43, 2], -3}, {
          Rational[45, 2], -3}, {
          Rational[-19, 2], -2}, {
          Rational[-17, 2], -2}, {
          Rational[-15, 2], -2}, {
          Rational[-13, 2], -2}, {
          Rational[-11, 2], -2}, {
          Rational[-9, 2], -2}, {
          Rational[-7, 2], -2}, {
          Rational[-5, 2], -2}, {
          Rational[-3, 2], -2}, {
          Rational[-1, 2], -2}, {
          Rational[1, 2], -2}, {
          Rational[3, 2], -2}, {
          Rational[5, 2], -2}, {
          Rational[7, 2], -2}, {
          Rational[9, 2], -2}, {
          Rational[11, 2], -2}, {
          Rational[13, 2], -2}, {
          Rational[15, 2], -2}, {
          Rational[17, 2], -2}, {
          Rational[19, 2], -2}, {
          Rational[21, 2], -2}, {
          Rational[1, 2], -1}}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.006553292894280763], 
        ArrowBox[CompressedData["
1:eJyF2M1q1FAUB/BBZ+EiCwmSRRaBoUgppfTD1u3MM/gIgmtfIW9mtr7FPILL
WSpMEsnvcO8RylB/PfH23K9/PHz/+e3H+91u9/vf17v56/qnn66fH+fP8/H6
+Wn+vku8TbxJfJ/45Vfdz5kfk+cnvj/VvUm8TbxLvE98qPv4Nv/9h+V50+bn
g/P7jq9JvU4/xi9JvU6/xpekXqef43NSH5z6p6Redz4eHd9Ud9fzQ1Kvu97v
k3rd/XCX1Ac/bf02qddd75+Tet3+3+CeV7rnzSGp1+3/kNTr9r/Hrdc9jzrc
+uDUt/pUd/vf4N4Huv3f49br7p/leaV6PdwHSb1eui+K9bj9vyT1uvtnGc86
vqnu9r/Brdftf4tbr7t/Otz64Ket9/pUd/fPgFuve/4d8HC+JPU3Sb0ezs+k
Xnf/3uLOr27/7pJ63fV/n9Trjv/B+mPdXT+PSb1ufnmq1wc3fzzjnE/BzW8v
Sb0e8ltSr5u/XpPx6czf+JaMT7d/X3HnRw/7b/7cLf/etP153Tyo+/se9Knu
5lXdfgy4eVs3T+v2q996yLO6eU13P3d4KQ8vXsqb6/zw/HbrIQ/r5l087Idm
6yFv6uYp3fN6j5tHdfOe7nm23BeLh7yKm0fxcN6cqTcP6uYd3ftwOW8XD3kR
N4/p3lcXvJQn1+fXvXie7/i+5CGv4OaNBjfP6aW8tO4/vMXNe7p5Tve+7nD/
P0v3/VEP70e4+Vsv5cvS+HTzmW7+Ce77o8/3/RS3P7rj081Peilfuz7Mx6X5
0e2P7vj0Un53/Zu/S+tDd35CffL80vuB+998X1qfuutDd3700vtHaXxLP/7M
80ZeCn5IfEjcvKGbJ3TzgO59rXvf6t6nuvdd8MJ9tj4/ce+L8Psl7nkd+pt4
6Txb5zfxcB64vhL/v17/AhexmHM=
         "], 0.11533795493934142`]}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {DiskBox[{0.5, -5.}, 0.11533795493934142], InsetBox[
          RowBox[{"{", "}"}], 
          Offset[{2, 2}, {0.6153379549393414, -4.884662045060659}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{-6.5, -4.}, 0.11533795493934142],
          InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "2"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {-6.384662045060659, -3.8846620450606584}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{-5.5, -4.}, 0.11533795493934142],
          InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "3"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {-5.384662045060659, -3.8846620450606584}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{-4.5, -4.}, 0.11533795493934142],
          InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "4"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {-4.384662045060659, -3.8846620450606584}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{-3.5, -4.}, 0.11533795493934142],
          InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "5"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {-3.3846620450606584, -3.8846620450606584}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{-2.5, -4.}, 0.11533795493934142],
          InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "6"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {-2.3846620450606584, -3.8846620450606584}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{-1.5, -4.}, 0.11533795493934142],
          InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"2", "3"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {-1.3846620450606586, -3.8846620450606584}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{-0.5, -4.}, 0.11533795493934142],
          InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"2", "4"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {-0.3846620450606586, -3.8846620450606584}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{0.5, -4.}, 0.11533795493934142], 
         InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"2", "5"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {0.6153379549393414, -3.8846620450606584}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{1.5, -4.}, 0.11533795493934142], 
         InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"2", "6"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {1.6153379549393414, -3.8846620450606584}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{2.5, -4.}, 0.11533795493934142], 
         InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"3", "4"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {2.6153379549393416, -3.8846620450606584}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{3.5, -4.}, 0.11533795493934142], 
         InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"3", "5"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {3.6153379549393416, -3.8846620450606584}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{4.5, -4.}, 0.11533795493934142], 
         InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"3", "6"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {4.615337954939341, -3.8846620450606584}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{5.5, -4.}, 0.11533795493934142], 
         InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"4", "5"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {5.615337954939341, -3.8846620450606584}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{6.5, -4.}, 0.11533795493934142], 
         InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"4", "6"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {6.615337954939341, -3.8846620450606584}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{7.5, -4.}, 0.11533795493934142], 
         InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"5", "6"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {7.615337954939341, -3.8846620450606584}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-21.5, -3.}, 0.11533795493934142], InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "2"},
             {"3", "4"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {-21.384662045060658, -2.8846620450606584}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-20.5, -3.}, 0.11533795493934142], InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "2"},
             {"3", "5"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {-20.384662045060658, -2.8846620450606584}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-19.5, -3.}, 0.11533795493934142], InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "2"},
             {"3", "6"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {-19.384662045060658, -2.8846620450606584}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-18.5, -3.}, 0.11533795493934142], InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "2"},
             {"4", "5"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {-18.384662045060658, -2.8846620450606584}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-17.5, -3.}, 0.11533795493934142], InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "2"},
             {"4", "6"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {-17.384662045060658, -2.8846620450606584}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-16.5, -3.}, 0.11533795493934142], InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "2"},
             {"5", "6"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {-16.384662045060658, -2.8846620450606584}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-15.5, -3.}, 0.11533795493934142], InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "3"},
             {"2", "4"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {-15.384662045060658, -2.8846620450606584}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-14.5, -3.}, 0.11533795493934142], InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "3"},
             {"2", "5"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {-14.384662045060658, -2.8846620450606584}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-13.5, -3.}, 0.11533795493934142], InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "3"},
             {"2", "6"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {-13.384662045060658, -2.8846620450606584}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-12.5, -3.}, 0.11533795493934142], InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "3"},
             {"4", "5"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {-12.384662045060658, -2.8846620450606584}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-11.5, -3.}, 0.11533795493934142], InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "3"},
             {"4", "6"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {-11.384662045060658, -2.8846620450606584}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-10.5, -3.}, 0.11533795493934142], InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "3"},
             {"5", "6"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {-10.384662045060658, -2.8846620450606584}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{-9.5, -3.}, 0.11533795493934142],
          InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "4"},
             {"2", "3"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {-9.384662045060658, -2.8846620450606584}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{-8.5, -3.}, 0.11533795493934142],
          InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "4"},
             {"2", "5"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {-8.384662045060658, -2.8846620450606584}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{-7.5, -3.}, 0.11533795493934142],
          InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "4"},
             {"2", "6"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {-7.384662045060659, -2.8846620450606584}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{-6.5, -3.}, 0.11533795493934142],
          InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "4"},
             {"3", "5"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {-6.384662045060659, -2.8846620450606584}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{-5.5, -3.}, 0.11533795493934142],
          InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "4"},
             {"3", "6"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {-5.384662045060659, -2.8846620450606584}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{-4.5, -3.}, 0.11533795493934142],
          InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "4"},
             {"5", "6"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {-4.384662045060659, -2.8846620450606584}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{-3.5, -3.}, 0.11533795493934142],
          InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "5"},
             {"2", "3"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {-3.3846620450606584, -2.8846620450606584}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{-2.5, -3.}, 0.11533795493934142],
          InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "5"},
             {"2", "4"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {-2.3846620450606584, -2.8846620450606584}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{-1.5, -3.}, 0.11533795493934142],
          InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "5"},
             {"2", "6"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {-1.3846620450606586, -2.8846620450606584}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{-0.5, -3.}, 0.11533795493934142],
          InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "5"},
             {"3", "4"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {-0.3846620450606586, -2.8846620450606584}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{0.5, -3.}, 0.11533795493934142], 
         InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "5"},
             {"3", "6"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {0.6153379549393414, -2.8846620450606584}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{1.5, -3.}, 0.11533795493934142], 
         InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "5"},
             {"4", "6"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {1.6153379549393414, -2.8846620450606584}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{2.5, -3.}, 0.11533795493934142], 
         InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "6"},
             {"2", "3"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {2.6153379549393416, -2.8846620450606584}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{3.5, -3.}, 0.11533795493934142], 
         InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "6"},
             {"2", "4"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {3.6153379549393416, -2.8846620450606584}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{4.5, -3.}, 0.11533795493934142], 
         InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "6"},
             {"2", "5"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {4.615337954939341, -2.8846620450606584}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{5.5, -3.}, 0.11533795493934142], 
         InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "6"},
             {"3", "4"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {5.615337954939341, -2.8846620450606584}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{6.5, -3.}, 0.11533795493934142], 
         InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "6"},
             {"3", "5"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {6.615337954939341, -2.8846620450606584}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{7.5, -3.}, 0.11533795493934142], 
         InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "6"},
             {"4", "5"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {7.615337954939341, -2.8846620450606584}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{8.5, -3.}, 0.11533795493934142], 
         InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"2", "3"},
             {"4", "5"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {8.615337954939342, -2.8846620450606584}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{9.5, -3.}, 0.11533795493934142], 
         InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"2", "3"},
             {"4", "6"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {9.615337954939342, -2.8846620450606584}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{10.5, -3.}, 0.11533795493934142],
          InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"2", "3"},
             {"5", "6"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {10.615337954939342, -2.8846620450606584}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{11.5, -3.}, 0.11533795493934142],
          InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"2", "4"},
             {"3", "5"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {11.615337954939342, -2.8846620450606584}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{12.5, -3.}, 0.11533795493934142],
          InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"2", "4"},
             {"3", "6"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {12.615337954939342, -2.8846620450606584}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{13.5, -3.}, 0.11533795493934142],
          InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"2", "4"},
             {"5", "6"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {13.615337954939342, -2.8846620450606584}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{14.5, -3.}, 0.11533795493934142],
          InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"2", "5"},
             {"3", "4"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {14.615337954939342, -2.8846620450606584}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{15.5, -3.}, 0.11533795493934142],
          InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"2", "5"},
             {"3", "6"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {15.615337954939342, -2.8846620450606584}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{16.5, -3.}, 0.11533795493934142],
          InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"2", "5"},
             {"4", "6"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {16.615337954939342, -2.8846620450606584}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{17.5, -3.}, 0.11533795493934142],
          InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"2", "6"},
             {"3", "4"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {17.615337954939342, -2.8846620450606584}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{18.5, -3.}, 0.11533795493934142],
          InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"2", "6"},
             {"3", "5"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {18.615337954939342, -2.8846620450606584}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{19.5, -3.}, 0.11533795493934142],
          InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"2", "6"},
             {"4", "5"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {19.615337954939342, -2.8846620450606584}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{20.5, -3.}, 0.11533795493934142],
          InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"3", "4"},
             {"5", "6"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {20.615337954939342, -2.8846620450606584}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{21.5, -3.}, 0.11533795493934142],
          InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"3", "5"},
             {"4", "6"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {21.615337954939342, -2.8846620450606584}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{22.5, -3.}, 0.11533795493934142],
          InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"3", "6"},
             {"4", "5"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {22.615337954939342, -2.8846620450606584}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{-9.5, -2.}, 0.11533795493934142],
          InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "2"},
             {"3", "4"},
             {"5", "6"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {-9.384662045060658, -1.8846620450606586}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{-8.5, -2.}, 0.11533795493934142],
          InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "2"},
             {"3", "5"},
             {"4", "6"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {-8.384662045060658, -1.8846620450606586}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{-7.5, -2.}, 0.11533795493934142],
          InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "2"},
             {"3", "6"},
             {"4", "5"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {-7.384662045060659, -1.8846620450606586}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{-6.5, -2.}, 0.11533795493934142],
          InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "3"},
             {"2", "4"},
             {"5", "6"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {-6.384662045060659, -1.8846620450606586}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{-5.5, -2.}, 0.11533795493934142],
          InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "3"},
             {"2", "5"},
             {"4", "6"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {-5.384662045060659, -1.8846620450606586}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{-4.5, -2.}, 0.11533795493934142],
          InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "3"},
             {"2", "6"},
             {"4", "5"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {-4.384662045060659, -1.8846620450606586}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{-3.5, -2.}, 0.11533795493934142],
          InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "4"},
             {"2", "3"},
             {"5", "6"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {-3.3846620450606584, -1.8846620450606586}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{-2.5, -2.}, 0.11533795493934142],
          InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "4"},
             {"2", "5"},
             {"3", "6"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {-2.3846620450606584, -1.8846620450606586}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{-1.5, -2.}, 0.11533795493934142],
          InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "4"},
             {"2", "6"},
             {"3", "5"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {-1.3846620450606586, -1.8846620450606586}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{-0.5, -2.}, 0.11533795493934142],
          InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "5"},
             {"2", "3"},
             {"4", "6"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {-0.3846620450606586, -1.8846620450606586}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{0.5, -2.}, 0.11533795493934142], 
         InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "5"},
             {"2", "4"},
             {"3", "6"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {0.6153379549393414, -1.8846620450606586}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{1.5, -2.}, 0.11533795493934142], 
         InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "5"},
             {"2", "6"},
             {"3", "4"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {1.6153379549393414, -1.8846620450606586}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{2.5, -2.}, 0.11533795493934142], 
         InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "6"},
             {"2", "3"},
             {"4", "5"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {2.6153379549393416, -1.8846620450606586}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{3.5, -2.}, 0.11533795493934142], 
         InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "6"},
             {"2", "4"},
             {"3", "5"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {3.6153379549393416, -1.8846620450606586}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{4.5, -2.}, 0.11533795493934142], 
         InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "6"},
             {"2", "5"},
             {"3", "4"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {4.615337954939341, -1.8846620450606586}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{5.5, -2.}, 0.11533795493934142], 
         InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "2"},
             {"1", "3"},
             {"1", "4"},
             {"1", "5"},
             {"1", "6"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {5.615337954939341, -1.8846620450606586}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{6.5, -2.}, 0.11533795493934142], 
         InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "2"},
             {"2", "3"},
             {"2", "4"},
             {"2", "5"},
             {"2", "6"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {6.615337954939341, -1.8846620450606586}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{7.5, -2.}, 0.11533795493934142], 
         InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "3"},
             {"2", "3"},
             {"3", "4"},
             {"3", "5"},
             {"3", "6"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {7.615337954939341, -1.8846620450606586}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{8.5, -2.}, 0.11533795493934142], 
         InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "4"},
             {"2", "4"},
             {"3", "4"},
             {"4", "5"},
             {"4", "6"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {8.615337954939342, -1.8846620450606586}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{9.5, -2.}, 0.11533795493934142], 
         InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "5"},
             {"2", "5"},
             {"3", "5"},
             {"4", "5"},
             {"5", "6"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {9.615337954939342, -1.8846620450606586}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{10.5, -2.}, 0.11533795493934142],
          InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "6"},
             {"2", "6"},
             {"3", "6"},
             {"4", "6"},
             {"5", "6"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {10.615337954939342, -1.8846620450606586}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{0.5, -1.}, 0.11533795493934142], 
         InsetBox[
          RowBox[{"(", "\[NoBreak]", GridBox[{
             {"1", "2"},
             {"1", "3"},
             {"1", "4"},
             {"1", "5"},
             {"1", "6"},
             {"2", "3"},
             {"2", "4"},
             {"2", "5"},
             {"2", "6"},
             {"3", "4"},
             {"3", "5"},
             {"3", "6"},
             {"4", "5"},
             {"4", "6"},
             {"5", "6"}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.7]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
          Offset[{2, 2}, {0.6153379549393414, -0.8846620450606586}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->{Automatic, 342.676231348682}]], "Output",
 CellChangeTimes->{{3.788531279018053*^9, 3.78853129527159*^9}, 
   3.7885316188463182`*^9, 3.7885316546844845`*^9, 3.788532315321633*^9, 
   3.7885323650594964`*^9, 3.788532432506032*^9, 3.7885327450689254`*^9},
 CellLabel->"Out[100]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
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
Am+SvAL+J+RVKTt5lfoHzQbeBHnlvQHyyn8d5FUwd/IqlDN5Fckkr6I5kFeR
HOiocC50VCh3OrInIB/Tz42O8t0YHeW5SToK/J/QUdnsdHTLP2g2z03QUb4b
oKMC10FHhXKno8I501HRTDoqlgMdFc2BjorkQkeFc6ejgtdHR/lvjI7y3iQd
5fmf0NEd2emo4D9oNu9N0FH+G6CjgtdBR4Vzp6MiOdNRsUw6Kp4DHRXLgY6K
5kJHRXKno0LXR0cFboyO8t0kHeX9n9BR0ex09E/EZb6boKMCN0BHha6Djork
TkdFc6aj4pl0dEsOdFQ8BzoqlgsdFc2djgpfHx0VvDE6yn+TdJTvf0JH+Xzo
6Pd/0GL+myChgjdAQoWvg4SK5k5CxXImoVsySejWHEjolhxIqHguJFQsdxIq
cn0kVOjGSKjATZJQ/v8JCf0fHxL64R+0WOAmSKjQDZBQkesgoWK5k1DxnEno
1kwSui0HEro1BxK6JRcSKp47CRW9PhIqfGMkVPAmSajAPyWhX3yo58t/0FjB
m6CewjdAPUWvg3qK5049t+RMPbdlUs/tOVDPbTlQz625UM8tuVNPseujniI3
Rj2FbpJ6/gn4NRTzrQ/1fPQPGit0E9RT5Aaop9h1UM8tuVPPrTlTz+2Z1HNH
DtRzew7Uc1su1HNr7tRT/Pqop+iNUU/hm6SeQv+Uej7zoZ6n7Ur9JTmh+PV3
MHXznvvnJa/d2uf4/ed9dNsiN0JRvn3fiGALzGHo12NKKpDD9/7GkVw4h69c
IyDK43Z/zfbwSLWEbab/sQceW7kgZrX5zJJvHl9S9f1ubhLTP4dR/Y1OmOea
a3addqu/fvUGPTueZcO3iWt7qHMm/sJZtNnnxNnH45cmrIuPXbXruoi/WA4z
MIfgBZ8DYeOLc0+/sUtx+82dwD//zLXtmzGSBVzHmHNxK13L3p9re9cT6GNP
c5HcU5muHVxsablgbl/Pfvo8aZLj0B/tN2jE8IP3X/KO3F+e+Tb7sKwEydvo
+SvvnB08ekaOQ7d9Fcx+Not//c3315yulRFFcotkzW2+12kb9LtuIr5Bd1nu
Td6sS83S/O3XQyc3aSy8jnS653yYwAXLKZKWpT+wbMWWs8QPe4PMKbGumG9i
3c0MMt81my7smr4JI1VO7RV07d2A9SGndvLRzsFxk8KvdfaLXfOrefjqk8Gh
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
0vZz1tWa5rlaww3JD+1lv1akUYSpjqB7bpSp0JnjVUcbh8CgDKpqHQ2kGXeS
jUpFRTW1qfp0red1WVfqjF8DhHcOTFv1PH4/bgo22eiEvSYvkXuKmyQs3BQY
Wrk37wMFB8YuF71uPpjG5KeEqIrQ0aYeQcvGCTonzLPk6vI0mb4JyYELA5FB
uhlLg6fM5dCYcG+pOpEz8IbieLmHjWsY44rBS4uhYVK64mgVBekXEBSNFCkE
DU8h8sXULTAhsdXDt6nukJCw+ayEKB1UHnwAPuaqELe/+NybOALddQ5yIrIj
EURmhRetmiNlpb7Um5iG79yo4eMiw1X9mUtVKnikDKjXQvquPs7WG45sDNGN
InVvDuOSkFp3CyG3CH+4FvoA4ZoSYLhbAxOIYgKi9b/irZZDpLayfWi8amej
pVL1cF2TY9KrZlNpPnuLd7disvTpont375QDU2P3UyHQuEpKtDO1XrfrWrpa
5bqmZyAh9CEJmb5UatxWGvwJ+yMSCpFpKgwTIdYwdDCKNjoVh1B1qsaQ8b/6
TdtgSHvFpJYiDZcAHnFFmDTGO9qkYO5wxRRsKrpZyRL9T154Sc5EdxJpl8p3
TE3TRveI3NYq6StbpTBe2o4Yjl7hnOjaZkMJGsZ1SinGvpwxu51Ilw1mnf78
c7+EiK0XZH32VZ0S4mIj7P7hmwje7Ouzlimx0zmCuIekV62m0mTaRuZtEgst
nUwjqlCCp4yR4lJDypmrl6LRKh5VvdMZFRxwMtaBbmXKYzxw9ZCQvDA3w2QG
zp4AArZHtbmENWjlvG1mccyWd91kxN7++5dLJdUugoYnk/hHQUnuVXPaCKV4
Ud1kx1xditZJmf4MTOW1JmVqI4bzVK45wxVLcFxGgcPD7vpBDA2yCG+R/le0
aRSoCUXLu3PlhKsUQBgFgWQyO3GltCt9F9NMM4X7EpwiZgKHZNTiKUzTBDAx
x7Bt57DUWXiUz8Qu8V+pfhk4dXeqCOATHB1MzWZa1ZAHYzuLNItzmWLG8VCm
+yYIneK00kAJ844Kw99QUG7qALasSpjm7iOTovcaR0X0uvXSsmQ5aTn/GAFi
ypg2UIKQSkbIaOpZQGDcJob/28T+hHbXTa88gUJs5naPoPJCiUaEprlRqkZw
qBQrMxBPARLmsskdmrcNf+eK5ZkFd/PM23jgURCPq06mouEcdmg7tUBMkr4X
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
cNoPXXHw9sFNN92kN0sRr4RyCjFhCjNDutouR3vGPxQtUeb5zj3v5vvZevOa
suZu8ShMtnrYV6SogHOWrdv9l2tKlNo1bOIyWXAKWdvFnMvL1p1r+wktNSqJ
WTON7BlVkbRf+Q0bgvJcCW+5e+joL8uWu9HpVJaMaaK/U9O6XAPKtquZKzyF
3EioK8xdalETgweUDf6k/I0V9/TuN9imhZMNd3z07IX80o/oYI6IJXSMC4vz
1lAIe8MfVqpUiZ6oiu4qFzIXVGTLAvKGpSFoT1/3kDEyWKwLxo0b5xn91boJ
zAGrKXOxoT/rIJb+RxUqVIiDPhFcT2Pjmz7QO1ptw3vmZ+PWcbEVwuf1kWSF
7cPmoPwzKcmswCwpz68iw2YXZ+EnGjZs6IWMrKeMzDclSpTos23btnhwBgPK
jTMh0DxiCQelhm295swcDGN7nXtmNH1U98h39+0/5OMKlar2OPzqezYPuwK9
Brhw8R5kzJCmWN12rc0LRfNTcfLkc/NJzVJlSQnOSrX7ZPFQF0uWzITdZveu
9cuyry1DCvP29aZEBUMJp6aUac1ZIg2b3mqc49W43+5ZF//zt9/9Gg6H2WxE
xT+RYdPvJTVIM1wLa2yai/5m1+xu5uzUmhAV/6Q9OW/ChAlnatasyexsrpdp
zcw6pCWZpbvOYp05izzodyEJQTWhz66//vqRK1asiJr7ypWnkPGaPVZx3EmL
3yGKUJvleDujBMPuX4mJ3OjW5fIfP2+nRTZzjR3g5Ggy2ZujQsBJaOr06dMN
G4TxSzu+9ek5pBJpBBznKlh/WwGj33ucT48Ba5RfnVfq5pK3D9xPyqCYncZv
0TaLZDFPbKuFDmnHipXIDbzzt0yz7z1j9+eXSCSx/Odf/Ulnpkq0Z7tzOh2X
NoqwJ7S8+O1G0r5CJXI9f13DmTKFurf3XSMvlipdlu8x1/pAz9i1nP3Se5q0
d3aQR3mieoN+73c6eXbLSDogS6e04ee7ojeLv78tkVn2UHavQfYwJvLXn96K
us3IAy7+nJyczH0D3xesMBoPzp0793zFihUtNLzeX8JoYHnNnDx5cowwj5Vg
sGNe9OQPnxktgBgcspiwntHCtmGDkydPKtUmdCsPDDS24cT60S4VsgXP2kAE
y6WyROI6RJMRzsFfaN68uQsZaw/ZfsAfSpcu3W/Tpk1BOWFdoLjOvwo7dkFe
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
g7X3VeX6HX4qXLzM+x2Hrfigwz0rTmAN3vHgY6RJJcLyzFNRoQZAq63pja/0
Hbdu/7CHtwBc4YlB4x7VMIDceet1/FXFO+XCAMNFfoAbOFM5Gr7i/OZY9oBx
PBodF/J1ef7UeXp4rL8qjAAn0QySVRwzwglCxmG+CZehKh98eAEDRx8VtovJ
yMaEtyI4ii/ddwcHSbhzLV4/95kIkHAbAILQDDRcrEjrhdvun7cbYAgtAlNy
3aQlT0HzXLqm5PVbx81/Ysd9c3fvHDtn94le9+eRpjeZA5hefwoGSQPLjQC5
Y/1yHv+g/dAV73e6Z+XLfcev1yZkHcluVoqfhhduuYBvfHIABI5/e801xdcP
GTZauGgvsJg5n14HW69hCebGZ71aINs8nzcjwtWYFohDdY8sAB8IaKUH9R7q
T8p4UhXA9NB/H7XNAh/MuxR2SfWF/57qw0iqqYQd4T9oxRlZPJs1CpDGbPBN
L8/6TWybGpQpZzIxcKLqjZkGL9VdPpgSjh6wZQ+Hk/kJleCc073bYTPmk8pF
CMlsl3uq59i1Z7qOWvVJ60FLPm09cOm5rBErz2aNzNU+W32h7aBl59sNWf5S
3/GPkewOdQipNPzdTsNWvnSH9nfHxpmkfK/tFJH75zy+d8TM7ZsmLHzy59T0
Qu837TJs9dSVT2MzCc4p3XiYtHQ56XodIfXGn5y+bMsx0eCn6a+6zRrhhr4e
fa3nPTHkqUVzj1n1D/4Mqrvy4RKtenLizGFaUemWHGrO4+hk1JYDpzTz/hS0
FMzpx3IW74MZjg3NIwMnb9J42AFNpKnnXWRQj/oko+F0+FHH++VsgNZ5p/OI
lW92v3cN1P7fC11z3bnOI1ddaDd42budhq/EGJKuo6aRGwoRUrzVUowTHdsu
o3Lf6jZmjeZHbdQ3zlNErcSLRhmxezzTRhAqA+sCCJV7yK7zKlNpJf+rzFUT
JXsi48qJt95YUDwu0OiqlbyRcdVO3si4ailv6OxfWzkXOpFVLUm0F8rhkJ4s
IaPQdBYID1BrRQbhzpVffHGSKCGT5pGT4MVnXDlJkwySLB5D1VbSfQtY6G3b
6G07rxcTIXE6jX1lnE9hJ+Ns1ohVX7QYsIg0q1uSFGv66NdN+j36RXPt7xbN
a5LU6uO+atpv4aet7l78SeuBS/7QvP+iX5NSMz6v027Qh+2HLtMgdvWrvcet
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
zymmUdTI//s/+MRtRw==\
\>"],ExpressionUUID->"fe2cff6b-8f48-42b0-9756-885488d232d2"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   SubscriptBox["C", "wedge"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "102e2dc2-8e62-45d5-9b18-700d0eb6303f"],
 " for ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["U", 
     RowBox[{"3", ",", "6"}]], ",", " ", 
    RowBox[{"k", "=", "2"}]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "fee22c30-5c8f-47b1-bda5-91482065126d"]
}], "Subsection",
 CellChangeTimes->{{3.7885333677691717`*^9, 
  3.788533376189254*^9}},ExpressionUUID->"f6eb695d-3840-4110-b952-\
ca06442ab815"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"M", "=", 
   RowBox[{"UniformMatroid", "[", 
    RowBox[{"3", ",", "6"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"k", "=", "2"}], ";"}]}], "Input",
 CellChangeTimes->{{3.7885334335102863`*^9, 3.788533440793101*^9}},
 CellLabel->
  "In[106]:=",ExpressionUUID->"b33a06d8-41b5-459a-bf4e-e100044af721"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cwedge", "=", 
  RowBox[{"WedgeCircuits", "[", 
   RowBox[{"M", ",", "k"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.788533389516124*^9, 3.788533444730833*^9}},
 CellLabel->
  "In[108]:=",ExpressionUUID->"be159e64-779a-403e-af43-b60ee710056a"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1", ",", "2"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "3"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "4"}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1", ",", "2"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "3"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "5"}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1", ",", "2"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "3"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "6"}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1", ",", "2"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "4"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "5"}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1", ",", "2"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "4"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "6"}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1", ",", "2"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "5"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "6"}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1", ",", "2"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"2", ",", "3"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"2", ",", "4"}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1", ",", "2"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"2", ",", "3"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"2", ",", "5"}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1", ",", "2"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"2", ",", "3"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"2", ",", "6"}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1", ",", "2"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"2", ",", "4"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"2", ",", "5"}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1", ",", "2"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"2", ",", "4"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"2", ",", "6"}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1", ",", "2"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"2", ",", "5"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"2", ",", "6"}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1", ",", "3"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "4"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "5"}], "}"}]}], "}"}], ",", 
           TemplateBox[{"590"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"2", ",", "5"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"3", ",", "5"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"3", ",", "6"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"4", ",", "6"}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"2", ",", "5"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"3", ",", "6"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"4", ",", "5"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"4", ",", "6"}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"2", ",", "6"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"3", ",", "4"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"3", ",", "5"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"4", ",", "5"}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"2", ",", "6"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"3", ",", "4"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"3", ",", "5"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"4", ",", "6"}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"2", ",", "6"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"3", ",", "4"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"3", ",", "5"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"5", ",", "6"}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"2", ",", "6"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"3", ",", "4"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"3", ",", "6"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"4", ",", "5"}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"2", ",", "6"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"3", ",", "4"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"4", ",", "5"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"5", ",", "6"}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"2", ",", "6"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"3", ",", "5"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"3", ",", "6"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"4", ",", "5"}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"2", ",", "6"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"3", ",", "5"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"4", ",", "5"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"4", ",", "6"}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"3", ",", "4"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"3", ",", "5"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"4", ",", "6"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"5", ",", "6"}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"3", ",", "4"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"3", ",", "6"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"4", ",", "5"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"5", ",", "6"}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"3", ",", "5"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"3", ",", "6"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"4", ",", "5"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"4", ",", "6"}], "}"}]}], "}"}]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{65., {3., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{52., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 108, 25907507168234269267, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{62., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{62., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 108, 25907507168234269267, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{44., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 108, 25907507168234269267, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{78., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{78., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[25907507168234269267 === $SessionID, 
   Out[108], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{3.7885334605993958`*^9},
 CellLabel->
  "Out[108]=",ExpressionUUID->"ed195047-2965-495f-902b-f3e0f38dd530"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cexp", "=", 
  RowBox[{"ExpectedCircuits", "[", 
   RowBox[{"M", ",", "k"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7885334820912623`*^9, 3.78853348729397*^9}},
 CellLabel->
  "In[109]:=",ExpressionUUID->"43b5910f-bc8e-4864-ad6d-3a09382d0f2a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "4"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "5"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "6"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "5"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "6"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "6"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "4"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "5"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "6"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "5"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "6"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "6"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "5"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "6"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "6"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "4"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "5"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "6"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "5"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "6"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "6"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "6"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "4"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "5"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "6"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "5"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "6"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "6"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "5"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "5"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "6"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "5"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "6"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "6"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "6"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "6"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "6"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "6"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "6"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "6"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "5"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "6"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "6"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "5"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "6"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "6"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "6"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "5"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "6"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "6"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "5"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "6"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "6"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "6"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "6"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "6"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"3", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "6"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"3", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "6"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"3", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "6"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"3", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "6"}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7885334881407013`*^9},
 CellLabel->
  "Out[109]=",ExpressionUUID->"7c02c0ef-2f01-4cca-82e2-037a651b5c1b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Length", "[", "Cwedge", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Length", "[", "Cexp", "]"}]}], "Input",
 CellChangeTimes->{{3.7885334941315813`*^9, 3.7885334989402285`*^9}},
 CellLabel->
  "In[110]:=",ExpressionUUID->"9bd1e1f8-bf80-4c43-ab17-5f4ec07e0e75"],

Cell[BoxData["615"], "Output",
 CellChangeTimes->{3.7885334994508963`*^9},
 CellLabel->
  "Out[110]=",ExpressionUUID->"cf9140a3-e4e4-43f2-a83f-f77342a8ae03"],

Cell[BoxData["60"], "Output",
 CellChangeTimes->{3.788533499453889*^9},
 CellLabel->
  "Out[111]=",ExpressionUUID->"4549653f-2c7c-41e0-8939-69256c1cc92f"]
}, Open  ]],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   SubscriptBox["C", "wedge"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "5a6b2c95-802e-4399-81c5-784c77df3827"],
 " ran surprisingly quickly. I figured it would be running until after heat \
death of the universe, but it finished in under a minute.\nClearly they\
\[CloseCurlyQuote]re not equal. Does ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["C", "wedge"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "c0486f01-ca00-4f55-ae26-8494bf17e7ca"],
 " satisfy the circuit axioms? Do they generate the same congruences?"
}], "Text",
 CellChangeTimes->{{3.7885335037370996`*^9, 3.7885335822036915`*^9}, {
  3.788535414747943*^9, 
  3.7885354154622498`*^9}},ExpressionUUID->"a48b280f-55d7-4f02-96fd-\
0ea15ba4fb23"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"C3Q", "[", "Cwedge", "]"}]], "Input",
 CellChangeTimes->{{3.7885335931146293`*^9, 3.7885335972327147`*^9}},
 CellLabel->
  "In[112]:=",ExpressionUUID->"7bd8a17a-6d2c-4589-aa59-bbdf617abe30"],

Cell[CellGroupData[{

Cell[BoxData["\<\"Failed, for\"\>"], "Echo",
 CellChangeTimes->{
  3.788533598399605*^9},ExpressionUUID->"a92bac0f-9487-4e30-94c0-\
e596312e6c68"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "4"}], "}"}]}], "}"}]], "Echo",
 CellChangeTimes->{
  3.788533598439681*^9},ExpressionUUID->"59d020d1-2364-406f-8dcf-\
27b06435ae1a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "6"}], "}"}]}], "}"}]], "Echo",
 CellChangeTimes->{
  3.788533598495532*^9},ExpressionUUID->"4399cf14-e44c-45bd-87e6-\
8b2389152cd4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2"}], "}"}]], "Echo",
 CellChangeTimes->{
  3.788533598537422*^9},ExpressionUUID->"bf2ae9e5-10db-4c17-8db7-\
d1d4457d3327"]
}, Open  ]],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.7885335985826063`*^9},
 CellLabel->
  "Out[112]=",ExpressionUUID->"1bff743c-e1e7-4059-9e82-b9db9f31f5ed"]
}, Open  ]],

Cell["Fails the circuit axioms. This sucks.", "Text",
 CellChangeTimes->{{3.7885354203052816`*^9, 
  3.7885354256822495`*^9}},ExpressionUUID->"36b7adb2-2a9c-4f87-9535-\
1b7177dd2642"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1280, 637},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
SpellingDictionaries->{"CorrectWords"->{
 "Cocircuits", "ie", "matroidal", "Idk", "Cexp"}},
FrontEndVersion->"11.3 for Microsoft Windows (64-bit) (March 6, 2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 201, 4, 67, "Chapter",ExpressionUUID->"28c25bb2-4b35-45c3-a0bc-9b0443244233"],
Cell[784, 28, 2758, 57, 398, "Text",ExpressionUUID->"a0f8fa26-8485-4f60-b8d4-6ff636236062"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3579, 90, 155, 3, 67, "Chapter",ExpressionUUID->"df951bbb-6248-41df-92f4-1a750b8a9eb5"],
Cell[CellGroupData[{
Cell[3759, 97, 151, 3, 67, "Section",ExpressionUUID->"ba4cbe73-b867-496a-9503-8d5f271ceecb"],
Cell[CellGroupData[{
Cell[3935, 104, 158, 3, 44, "Subsubsection",ExpressionUUID->"86ebdca5-2bfa-4de9-bb41-182574370a46"],
Cell[4096, 109, 355, 7, 34, "Text",ExpressionUUID->"d98d0bad-b5f2-44b8-aa12-8d34f2319961"],
Cell[4454, 118, 459, 11, 44, "Input",ExpressionUUID->"97725060-35b9-4047-ad64-371906129213",
 InitializationCell->True],
Cell[4916, 131, 566, 12, 44, "Input",ExpressionUUID->"3bedafbc-d881-4e4e-a542-b311cf8ca579",
 InitializationCell->True],
Cell[5485, 145, 196, 4, 34, "Text",ExpressionUUID->"ddc1d18d-ec7b-4c98-a9f3-198c5ed6d8cc"],
Cell[5684, 151, 302, 6, 28, "Input",ExpressionUUID->"3be9753d-96af-4809-b7f3-d6ce076f9b06"],
Cell[CellGroupData[{
Cell[6011, 161, 325, 7, 28, "Input",ExpressionUUID->"75348268-0970-46a7-b09a-d504996ad4a3"],
Cell[6339, 170, 201, 6, 23, "Echo",ExpressionUUID->"b7d1c4da-3c1a-4e2a-b168-1e5e0ed48885"],
Cell[6543, 178, 240, 4, 32, "Output",ExpressionUUID->"696771f8-5f78-4fc8-b4a9-a4a02d21112c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6820, 187, 432, 11, 48, "Input",ExpressionUUID->"e38b6b74-e8a5-4659-a4e8-51b5a0bce106"],
Cell[CellGroupData[{
Cell[7277, 202, 199, 4, 22, "Print",ExpressionUUID->"934f4910-28f6-41e9-a32e-71faeb3d8609"],
Cell[7479, 208, 199, 4, 22, "Print",ExpressionUUID->"fbe72bb6-8e3e-49f2-a1c7-355b9b39e5a7"],
Cell[7681, 214, 197, 4, 22, "Print",ExpressionUUID->"28dfb494-6d41-4b0c-aeb6-f02e2deda073"]
}, Open  ]]
}, Open  ]],
Cell[7905, 222, 329, 7, 34, "Text",ExpressionUUID->"9b9b8a97-d0e3-4938-b0dc-4a0fb10a0b0f"],
Cell[8237, 231, 1062, 27, 141, "Input",ExpressionUUID->"79b10ac4-e3bb-4c29-ae71-07d6eb9321db"],
Cell[CellGroupData[{
Cell[9324, 262, 286, 6, 28, "Input",ExpressionUUID->"6bf9a0ea-8491-4979-a771-8bf83c07e64a"],
Cell[CellGroupData[{
Cell[9635, 272, 289, 5, 22, "Print",ExpressionUUID->"7f38cc2d-2dd2-458b-96df-9c1ec0d136c5"],
Cell[9927, 279, 228, 6, 27, "Echo",ExpressionUUID->"c4ce82da-ed81-45e8-8c09-d752799cb1cc"],
Cell[10158, 287, 230, 6, 27, "Echo",ExpressionUUID->"924ef250-5035-456e-a8fb-baf3ea8ed6f5"]
}, Open  ]],
Cell[10403, 296, 229, 4, 32, "Output",ExpressionUUID->"89f8904f-e78e-432f-aa36-ca5af29c0ae5"]
}, Open  ]],
Cell[10647, 303, 476, 9, 56, "Text",ExpressionUUID->"2159f8da-f40f-4e86-8866-ac7fcc21b018"],
Cell[11126, 314, 1358, 33, 160, "Input",ExpressionUUID->"6eb591e8-1f81-454c-b7ee-21c7faa6ee3a"],
Cell[CellGroupData[{
Cell[12509, 351, 351, 7, 28, "Input",ExpressionUUID->"b9dd8df8-60a8-4d72-bc9a-c5c94ced5c04"],
Cell[CellGroupData[{
Cell[12885, 362, 215, 4, 22, "Print",ExpressionUUID->"6a383552-94e4-4c51-b69c-c921bf2cb871"],
Cell[13103, 368, 225, 5, 27, "Echo",ExpressionUUID->"9b6a57bb-dd8d-42af-98cd-a4f51f7fc4d5"],
Cell[13331, 375, 230, 6, 27, "Echo",ExpressionUUID->"d36e4200-22d5-4061-9d12-1f7fb17692f9"]
}, Open  ]],
Cell[13576, 384, 229, 4, 32, "Output",ExpressionUUID->"1b069eec-b13b-4727-92ba-d6d0cc26521c"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[13854, 394, 165, 3, 36, "Subsubsection",ExpressionUUID->"857fc169-2d0d-43b5-9d97-1ecc56f042ac"],
Cell[14022, 399, 391, 10, 100, "Text",ExpressionUUID->"3115f7d5-4302-4b3d-9751-367309eec910"],
Cell[14416, 411, 1196, 29, 287, "Input",ExpressionUUID->"03fccea3-e308-4e4a-8317-5526bf8891d3",
 InitializationCell->True],
Cell[15615, 442, 447, 10, 48, "Input",ExpressionUUID->"ccb23d1f-4c34-4587-befc-6cbe62b303e3"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[16111, 458, 155, 3, 53, "Section",ExpressionUUID->"b548114a-56fd-4d24-8d20-18d1bb58a0a2"],
Cell[16269, 463, 591, 15, 34, "Text",ExpressionUUID->"de374661-1746-49a6-9bc0-177314e01621"],
Cell[CellGroupData[{
Cell[16885, 482, 220, 4, 53, "Subsection",ExpressionUUID->"140b6d07-2fdb-4b8b-b100-2bea8495f0a4"],
Cell[CellGroupData[{
Cell[17130, 490, 167, 3, 44, "Subsubsection",ExpressionUUID->"f7d3f67e-34f5-45e7-95ab-72c39e2f3312"],
Cell[17300, 495, 344, 10, 36, "Text",ExpressionUUID->"9f08cdc2-7c97-4432-b359-b98382afd6af"],
Cell[17647, 507, 556, 14, 44, "Input",ExpressionUUID->"efae1ffc-cbe0-4ea6-aeba-2a81945a5a8b",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[18228, 525, 239, 5, 28, "Input",ExpressionUUID->"6ebac53f-127b-4a27-9894-8c51c59244e2"],
Cell[18470, 532, 697, 21, 32, "Output",ExpressionUUID->"976f82a9-25b6-4daf-b3bf-7741e1afe454"]
}, Open  ]],
Cell[19182, 556, 241, 4, 34, "Text",ExpressionUUID->"04394aef-d5be-4a03-97fc-47f2e9d29abc"],
Cell[19426, 562, 447, 11, 44, "Input",ExpressionUUID->"9ef333ec-52b9-465a-a284-f558d797e052",
 InitializationCell->True],
Cell[19876, 575, 223, 5, 34, "Text",ExpressionUUID->"07a0ba77-7210-4124-9609-5161b4c22c1e"],
Cell[CellGroupData[{
Cell[20124, 584, 360, 8, 28, "Input",ExpressionUUID->"19148878-a00f-40f1-8dfe-1a1b7f7addf9"],
Cell[20487, 594, 3310, 110, 52, "Output",ExpressionUUID->"cb436223-0489-4603-bf11-f4fdf9b0aa36"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[23846, 710, 169, 3, 36, "Subsubsection",ExpressionUUID->"53117dd8-80b4-4279-af66-f8c71355e73b"],
Cell[24018, 715, 589, 12, 78, "Text",ExpressionUUID->"c9d76c58-9555-48d2-89e7-a27fbc370d98"],
Cell[24610, 729, 4724, 116, 501, "Input",ExpressionUUID->"7f2ce357-4e82-49b9-b13e-cb60b270c135",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[29371, 850, 164, 3, 36, "Subsubsection",ExpressionUUID->"e94c1f96-049c-49a7-a2e7-4a356a16a9ff"],
Cell[29538, 855, 219, 4, 34, "Text",ExpressionUUID->"c0d2ef1e-4bc4-44c0-b71b-571f79ec2fa3"],
Cell[29760, 861, 1318, 33, 140, "Input",ExpressionUUID->"5808a668-e7b6-4474-a094-8fe293bbdb7a",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[31103, 898, 326, 6, 28, "Input",ExpressionUUID->"8104b69e-606e-43b1-8551-60690ae36ad0"],
Cell[31432, 906, 1084, 29, 32, "Output",ExpressionUUID->"5a223dfa-965b-42b1-a44e-1e7e223e1022"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[32565, 941, 158, 3, 36, "Subsubsection",ExpressionUUID->"ac93bfb4-3d08-4d1e-9d1d-39e7d4c94c11"],
Cell[32726, 946, 723, 19, 78, "Text",ExpressionUUID->"b11722d4-2057-430a-865d-cf8265988f79"],
Cell[CellGroupData[{
Cell[33474, 969, 696, 16, 44, "Input",ExpressionUUID->"0723311e-7578-4811-9bed-ca7d7a146199",
 InitializationCell->True],
Cell[34173, 987, 2999, 63, 70, "Echo",ExpressionUUID->"522eb838-3f9e-4fa7-8e36-ad32f81bb065"],
Cell[37175, 1052, 1703, 44, 70, "Output",ExpressionUUID->"dc9ff237-3136-4216-856a-d9704ff5fe90"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[38927, 1102, 166, 3, 36, "Subsubsection",ExpressionUUID->"81aff8f7-656b-4a5d-ae31-52a6d7853663"],
Cell[39096, 1107, 180, 3, 34, "Text",ExpressionUUID->"f5c8030f-9dab-4c84-905d-ce524164d34c"],
Cell[39279, 1112, 2309, 56, 292, "Input",ExpressionUUID->"e2eeac54-2e01-48f3-9c54-8ae32a4dc16a",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[41613, 1172, 1252, 33, 67, "Input",ExpressionUUID->"57bc149b-a72b-48b4-9cb4-2bdafd6775ec"],
Cell[42868, 1207, 1161, 32, 113, "Output",ExpressionUUID->"9ff295fe-9249-482b-b53a-bd9af078c3a8"],
Cell[44032, 1241, 2494, 67, 52, "Output",ExpressionUUID->"55b9388e-c58b-4dfe-9e06-c4471eb6367d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[46563, 1313, 609, 17, 28, "Input",ExpressionUUID->"43e6f7e8-1b35-48cf-8f1c-828ffb6fec05"],
Cell[47175, 1332, 480, 11, 32, "Output",ExpressionUUID->"78cac4fe-178b-4deb-9e9b-9ccb36eecdd4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[47692, 1348, 235, 4, 28, "Input",ExpressionUUID->"d51eb9a9-41d1-4ac5-8d96-141eefd37e93"],
Cell[47930, 1354, 1471, 38, 52, "Output",ExpressionUUID->"8e64de86-1b89-489e-a2db-01a2a877c115"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[49462, 1399, 214, 4, 37, "Subsection",ExpressionUUID->"5591562b-29a3-49b5-9899-046dcdcafd3c"],
Cell[CellGroupData[{
Cell[49701, 1407, 168, 3, 44, "Subsubsection",ExpressionUUID->"c1937c05-4b7c-4356-bb40-db9bff5026cf"],
Cell[49872, 1412, 164, 3, 34, "Text",ExpressionUUID->"df12c808-c6b9-4e0e-a8eb-c133d999c5b0"],
Cell[50039, 1417, 657, 18, 44, "Input",ExpressionUUID->"72d3107a-3b3f-4200-9576-884bbcb5e150",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[50721, 1439, 280, 5, 28, "Input",ExpressionUUID->"ee31f61c-c44c-4748-a1c2-4bce0a6d2243"],
Cell[51004, 1446, 965, 30, 32, "Output",ExpressionUUID->"4051c735-e764-4328-a94e-414a604c4a02"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[52018, 1482, 166, 3, 36, "Subsubsection",ExpressionUUID->"29dca8a6-a0c0-4b99-aa0f-281eac6d324a"],
Cell[52187, 1487, 170, 3, 34, "Text",ExpressionUUID->"a5155966-dca1-4f40-897c-19b2d0f41669"],
Cell[52360, 1492, 751, 17, 44, "Input",ExpressionUUID->"785b4b76-9d28-4823-8c31-0962d3b5b9d7",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[53136, 1513, 331, 6, 28, "Input",ExpressionUUID->"61c7bf92-6d77-4d02-86b1-9ba4db709d7c"],
Cell[53470, 1521, 1456, 39, 52, "Output",ExpressionUUID->"be29e210-bf7f-4f4e-98c1-4f5783231343"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[54975, 1566, 163, 3, 36, "Subsubsection",ExpressionUUID->"fc255776-8fa5-4363-8595-ebbc7194b6a9"],
Cell[55141, 1571, 1018, 18, 100, "Text",ExpressionUUID->"fabfb05a-f795-47a6-9ff0-3bff6e836654"],
Cell[56162, 1591, 536, 10, 44, "Input",ExpressionUUID->"69b957ef-f49a-48ce-b9bb-2b3b91cfe2b8",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[56723, 1605, 322, 6, 28, "Input",ExpressionUUID->"6adf4a37-f1e7-4b77-a8de-dd0869f00b15"],
Cell[57048, 1613, 966, 25, 32, "Output",ExpressionUUID->"bd237fc2-3cc9-49b3-b477-18228ff1e45f"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[58063, 1644, 165, 3, 36, "Subsubsection",ExpressionUUID->"5c282864-77ed-48d5-827e-b6065fe37f19"],
Cell[58231, 1649, 177, 3, 34, "Text",ExpressionUUID->"0213b174-d80c-48e7-a614-852571a7d5b0"],
Cell[58411, 1654, 338, 7, 44, "Input",ExpressionUUID->"9a4c0fdd-3d7c-4706-aed2-521115944d3e",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[58786, 1666, 159, 3, 36, "Subsubsection",ExpressionUUID->"96575c14-45a4-438e-82c1-cb67efe6a211"],
Cell[58948, 1671, 237, 4, 34, "Text",ExpressionUUID->"bc03346a-dc9a-49e4-add2-c511b791ed53"],
Cell[59188, 1677, 418, 10, 44, "Input",ExpressionUUID->"ccb7d693-8951-4e5e-87a4-88aae87b942b",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[59631, 1691, 269, 5, 28, "Input",ExpressionUUID->"2bb8512e-f6c9-492f-aa8f-f234d3c93b5b"],
Cell[59903, 1698, 149, 2, 32, "Output",ExpressionUUID->"fd8d8a7e-2d83-4a47-bb9f-0980cb5ebe58"]
}, Open  ]],
Cell[60067, 1703, 425, 12, 34, "Text",ExpressionUUID->"de2ab499-9581-41d0-9c79-6c0a096d13d2"],
Cell[60495, 1717, 1357, 31, 121, "Input",ExpressionUUID->"2327fec0-d6c8-4a9d-bfd5-022ac310df69",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[61877, 1752, 422, 10, 28, "Input",ExpressionUUID->"cb0abab0-5bac-412a-a416-4e77b855e7c3"],
Cell[62302, 1764, 256, 5, 32, "Output",ExpressionUUID->"dbd630bf-c3c1-4782-a8b1-292130f6b354"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[62607, 1775, 160, 3, 36, "Subsubsection",ExpressionUUID->"5a779892-8b91-42ac-8200-ee278aaf7374"],
Cell[62770, 1780, 428, 8, 56, "Text",ExpressionUUID->"98ac6eb6-f484-4fd7-a5cb-d1abe2ac647c"],
Cell[63201, 1790, 4199, 98, 349, "Input",ExpressionUUID->"b4f638d2-4365-4fd7-b4aa-6837861515ed",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[67437, 1893, 207, 4, 36, "Subsubsection",ExpressionUUID->"6eeeb549-ab0e-4dd6-946c-2c6157c954c9"],
Cell[67647, 1899, 1259, 26, 122, "Text",ExpressionUUID->"4c05c517-d3fe-4479-bf9c-0f40681ce7fb"],
Cell[68909, 1927, 1647, 38, 235, "Input",ExpressionUUID->"aaf8de76-fcd7-471e-ac4d-ff279794bbda",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[70593, 1970, 171, 3, 36, "Subsubsection",ExpressionUUID->"1c503e35-3215-4317-862c-b990a6fb6cac"],
Cell[70767, 1975, 506, 10, 100, "Text",ExpressionUUID->"bf696ea3-3b8d-4bc2-bdd0-043a2ae470c7"],
Cell[71276, 1987, 1912, 41, 273, "Input",ExpressionUUID->"89f1822b-6a1c-4822-afc5-61f54d0c8887",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[73213, 2032, 285, 6, 28, "Input",ExpressionUUID->"d8bc09c8-52b4-4bec-af3e-f8cb09e1583f"],
Cell[73501, 2040, 1783, 54, 52, "Output",ExpressionUUID->"9fff4229-dcb7-4cef-89b5-cbff28e4958c"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[75333, 2100, 162, 3, 36, "Subsubsection",ExpressionUUID->"6f59d2b0-6820-413d-a68b-944ccd8ece8a"],
Cell[75498, 2105, 269, 6, 34, "Text",ExpressionUUID->"aed93edd-7252-4efd-85f0-0af26acb7548"],
Cell[75770, 2113, 874, 22, 44, "Input",ExpressionUUID->"6b58bb34-350c-40fe-830d-bad09271982d",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[76669, 2139, 278, 5, 28, "Input",ExpressionUUID->"d9b5bda6-0f42-4e6e-a021-6159fd739808"],
Cell[76950, 2146, 1112, 35, 32, "Output",ExpressionUUID->"7853b4de-9aa0-49ed-9d11-407350a81e49"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[78111, 2187, 156, 3, 36, "Subsubsection",ExpressionUUID->"4ba03e18-d0a5-436d-a96c-4cbeacde6d41"],
Cell[78270, 2192, 177, 3, 34, "Text",ExpressionUUID->"41899824-cbb5-4a6d-b579-94e119babdbd"],
Cell[78450, 2197, 343, 7, 44, "Input",ExpressionUUID->"b5d9765e-9c8d-4e1d-9eb0-6642f9d41273",
 InitializationCell->True]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[78842, 2210, 152, 3, 37, "Subsection",ExpressionUUID->"0e49d156-9cad-44e6-b247-eea4ea1124c6"],
Cell[CellGroupData[{
Cell[79019, 2217, 160, 3, 44, "Subsubsection",ExpressionUUID->"ce89a681-6bbb-4d7e-9d9d-cce41a0a646c"],
Cell[79182, 2222, 543, 11, 56, "Text",ExpressionUUID->"eb1ca9ff-b470-4d52-a7a5-25378f3bfe4b"],
Cell[79728, 2235, 1746, 44, 235, "Input",ExpressionUUID->"3e3e0e85-174a-4d5c-bedd-b7e0e21cf7bd",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[81499, 2283, 492, 13, 28, "Input",ExpressionUUID->"1c53fcb9-7a58-4824-bc2e-8921ef30d1b5"],
Cell[81994, 2298, 385, 11, 32, "Output",ExpressionUUID->"1ede5744-8f34-4e42-8cfb-81826e6947c0"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[82428, 2315, 169, 3, 36, "Subsubsection",ExpressionUUID->"8dae4f3e-1b8c-4ccd-bcc5-7fe8718f9780"],
Cell[82600, 2320, 202, 3, 34, "Text",ExpressionUUID->"a4b12c0f-2cb2-4fb2-abb7-8fef1b04412c"],
Cell[82805, 2325, 1520, 23, 44, "Input",ExpressionUUID->"21e3b81e-25dd-4591-8687-73f2a504c453",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[84350, 2352, 481, 9, 28, "Input",ExpressionUUID->"7c9a0a5c-f3f8-46e6-bd39-1eddf003c127"],
Cell[84834, 2363, 10608, 211, 211, "Output",ExpressionUUID->"a7dc9253-6517-42ea-87c2-b516f07eec58"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[95491, 2580, 205, 4, 36, "Subsubsection",ExpressionUUID->"8650cf72-47e0-4b4d-8266-1f6858bf7c08"],
Cell[95699, 2586, 672, 11, 122, "Text",ExpressionUUID->"05987811-fca7-4789-a887-73c8bb60dc89"],
Cell[96374, 2599, 8322, 180, 862, "Input",ExpressionUUID->"00af4550-07f3-44de-9ca7-6767071c6f68",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[104733, 2784, 251, 4, 36, "Subsubsection",ExpressionUUID->"de160a69-fd2e-4921-a916-a9f4482d4d47"],
Cell[104987, 2790, 991, 17, 166, "Text",ExpressionUUID->"c68bb588-f5dd-494f-8f83-25d752d9b34f"],
Cell[105981, 2809, 11231, 245, 1109, "Input",ExpressionUUID->"43f512a3-3170-41c4-b57e-52786223387a",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[117237, 3058, 416, 10, 67, "Input",ExpressionUUID->"7c6d6ec0-6eba-494a-a5ae-0f693c7c8d9c"],
Cell[117656, 3070, 1556, 44, 52, "Output",ExpressionUUID->"7b1ac391-891e-4128-85c7-8c471eda19e7"],
Cell[119215, 3116, 152, 2, 32, "Output",ExpressionUUID->"62aae3e4-6967-4554-843c-6d3e32136120"]
}, Open  ]],
Cell[CellGroupData[{
Cell[119404, 3123, 518, 13, 67, "Input",ExpressionUUID->"8cc8fbec-d3ee-41ca-bf0e-7553b46e855d"],
Cell[119925, 3138, 1442, 40, 52, "Output",ExpressionUUID->"79c1bc7f-02de-4ef5-b07e-1cd5a4e96ba8"],
Cell[CellGroupData[{
Cell[121392, 3182, 148, 3, 23, "Echo",ExpressionUUID->"3509aa43-4287-451c-b252-19dfaf220fd5"],
Cell[121543, 3187, 185, 5, 23, "Echo",ExpressionUUID->"b9193680-c998-4234-b333-79e790f9cb7b"],
Cell[121731, 3194, 185, 5, 23, "Echo",ExpressionUUID->"28146c61-368a-430e-a995-6eff858ed234"],
Cell[121919, 3201, 130, 3, 23, "Echo",ExpressionUUID->"c98d7719-5927-4b87-abd6-217133d4c6ce"]
}, Open  ]],
Cell[122064, 3207, 181, 2, 32, "Output",ExpressionUUID->"fe9648db-63f6-4c22-9a37-ee7d995655fc"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[122294, 3215, 153, 3, 36, "Subsubsection",ExpressionUUID->"2a21fabd-729f-42cb-bac6-bb76f24c93fd"],
Cell[122450, 3220, 166, 3, 34, "Text",ExpressionUUID->"85c91f1f-f1ff-4d87-8796-c24956d217cb"],
Cell[122619, 3225, 6332, 147, 919, "Input",ExpressionUUID->"c966453e-e727-4e56-868a-f07958b28d96",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[128976, 3376, 360, 8, 28, "Input",ExpressionUUID->"ed091d0b-fc1b-45d4-8dfd-0667397b23ca"],
Cell[CellGroupData[{
Cell[129361, 3388, 221, 6, 25, "Echo",ExpressionUUID->"e4572d51-48b1-4ce0-ac93-ecd834a03dcd"],
Cell[129585, 3396, 183, 4, 22, "Print",ExpressionUUID->"67305575-5833-434c-8976-929a34f096de"],
Cell[129771, 3402, 183, 4, 22, "Print",ExpressionUUID->"dec2d774-a97c-4e64-b5d9-a78d26ffd6a8"],
Cell[129957, 3408, 225, 6, 23, "Echo",ExpressionUUID->"58eac369-50f1-4dde-8824-f6c1d9759f97"],
Cell[130185, 3416, 201, 6, 23, "Echo",ExpressionUUID->"13974e0f-2800-4e0f-86a4-9d4fccc3080c"],
Cell[130389, 3424, 204, 6, 23, "Echo",ExpressionUUID->"bf01442f-bf7c-4c60-be5b-3a684640e626"],
Cell[130596, 3432, 202, 6, 23, "Echo",ExpressionUUID->"1914f2a5-b2bc-4781-a652-6f0cb4497497"],
Cell[130801, 3440, 206, 6, 23, "Echo",ExpressionUUID->"65dd6653-f30f-4403-9dd7-f037189d80d4"],
Cell[131010, 3448, 228, 6, 23, "Echo",ExpressionUUID->"978e7bcd-091f-4444-942c-d3bd34ee3ad7"],
Cell[131241, 3456, 214, 6, 23, "Echo",ExpressionUUID->"8497ba6c-a698-4c02-a79b-61ae68d92f22"],
Cell[131458, 3464, 256, 8, 23, "Echo",ExpressionUUID->"59264aa6-2c75-4b08-8082-4c8a03b03cd5"],
Cell[131717, 3474, 205, 6, 23, "Echo",ExpressionUUID->"f2633341-6109-4c59-a20f-ca133a19eeec"],
Cell[131925, 3482, 553, 19, 23, "Echo",ExpressionUUID->"082f525e-6b47-4be4-97bd-c61a28fa47ce"],
Cell[132481, 3503, 183, 4, 22, "Print",ExpressionUUID->"2bea951e-0b57-4879-a408-7208a76434e8"],
Cell[132667, 3509, 226, 6, 23, "Echo",ExpressionUUID->"d8740e09-0236-4202-81c6-cdbce4294314"],
Cell[132896, 3517, 183, 4, 22, "Print",ExpressionUUID->"8c1f658f-9c5a-4c7f-b16d-658c7b0dd93c"],
Cell[133082, 3523, 825, 23, 66, "Print",ExpressionUUID->"2e5df0fc-1d0e-456c-97e1-8cab5f9dc137"],
Cell[133910, 3548, 341, 8, 22, "Print",ExpressionUUID->"cfb649fc-bf9c-4fce-9b54-f0c830dbb7e3"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[134300, 3562, 466, 11, 48, "Input",ExpressionUUID->"1fc7ee78-b310-481e-bba4-9ba3fee492f9"],
Cell[134769, 3575, 178, 2, 32, "Output",ExpressionUUID->"7a3a6868-ab65-4806-957f-3e8778f12c03"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[134996, 3583, 172, 3, 36, "Subsubsection",ExpressionUUID->"5ff60406-4cb8-4d98-b2cd-c92e5a2ad490"],
Cell[135171, 3588, 216, 6, 34, "Text",ExpressionUUID->"4055ee44-f72e-4d0c-b893-b1d602de5cdb"],
Cell[135390, 3596, 869, 15, 166, "Text",ExpressionUUID->"ad4c7b5f-1b19-49b7-95d4-442453261af8"],
Cell[136262, 3613, 2532, 63, 235, "Input",ExpressionUUID->"25f291a5-ac38-48ca-84eb-b4f276dc08bb",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[138831, 3681, 213, 4, 36, "Subsubsection",ExpressionUUID->"a9b2077e-fa86-4aa9-983d-42d8ae0e236a"],
Cell[139047, 3687, 667, 12, 144, "Text",ExpressionUUID->"e863be38-c841-4185-9e02-63602de585ba"],
Cell[139717, 3701, 15200, 366, 1261, "Input",ExpressionUUID->"d16b0284-17cf-4630-bdac-17daca134acd",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[154954, 4072, 162, 3, 36, "Subsubsection",ExpressionUUID->"acac4f1c-d32a-4d8b-b591-ac10c95f1b75"],
Cell[155119, 4077, 495, 9, 56, "Text",ExpressionUUID->"bc924875-f79d-40dd-a58f-8a595a5ee6a1"],
Cell[155617, 4088, 396, 9, 44, "Input",ExpressionUUID->"6bdbdf29-deed-44bc-8dc9-9ca8a9796ebb",
 InitializationCell->True]
}, Closed]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[156074, 4104, 254, 4, 53, "Section",ExpressionUUID->"1c4f6208-c82b-40d7-a09d-9803492beed6"],
Cell[156331, 4110, 756, 16, 100, "Text",ExpressionUUID->"e4d66b3f-c58d-4201-98a7-0265ce6ff11e"],
Cell[CellGroupData[{
Cell[157112, 4130, 156, 3, 53, "Subsection",ExpressionUUID->"2815db58-63af-44cf-8d9e-c04fe88a89ef"],
Cell[CellGroupData[{
Cell[157293, 4137, 159, 3, 44, "Subsubsection",ExpressionUUID->"ab631eb0-4835-4248-bb47-f5cd186ba378"],
Cell[157455, 4142, 293, 7, 34, "Text",ExpressionUUID->"7679abec-1893-42fd-b479-8b56388ead3a"],
Cell[157751, 4151, 2609, 65, 273, "Input",ExpressionUUID->"3e5e9a7d-b1af-4b34-9a47-8394c727e688",
 InitializationCell->True]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[160409, 4222, 286, 7, 37, "Subsection",ExpressionUUID->"1c05a681-8446-47cf-8dcc-75514ad21fa9"],
Cell[CellGroupData[{
Cell[160720, 4233, 171, 3, 44, "Subsubsection",ExpressionUUID->"1f0745ca-f67d-4aef-8f0a-af467c2a48bf"],
Cell[160894, 4238, 413, 9, 56, "Text",ExpressionUUID->"bd2bcd1d-ace6-4813-ac6c-3fe5f4311041"],
Cell[161310, 4249, 2101, 46, 197, "Input",ExpressionUUID->"9141d63f-edb8-4c56-9690-531858209cf7",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[163448, 4300, 164, 3, 36, "Subsubsection",ExpressionUUID->"7faf1d59-d776-445b-836b-568237c80219"],
Cell[163615, 4305, 535, 10, 56, "Text",ExpressionUUID->"7a477613-24d1-4aa5-b8ea-ecd496b1ad33"],
Cell[164153, 4317, 2997, 73, 311, "Input",ExpressionUUID->"c6709803-5d58-4137-87f0-f28546c595a5",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[167187, 4395, 158, 3, 36, "Subsubsection",ExpressionUUID->"d8c9ddfc-7477-4413-833c-7891523ae4a0"],
Cell[167348, 4400, 5353, 153, 301, "Text",ExpressionUUID->"1f30d9ed-6ffc-4153-b491-afd5258a2751"],
Cell[172704, 4555, 2316, 60, 292, "Input",ExpressionUUID->"8de92983-2a94-448e-8858-b8ac7a8ba5bd",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[175057, 4620, 167, 3, 36, "Subsubsection",ExpressionUUID->"bd4265e6-9455-4812-8bb5-7deb84441014"],
Cell[175227, 4625, 236, 6, 34, "Text",ExpressionUUID->"5abbc8c2-e1a1-4c25-adbc-a4309a665e26"],
Cell[175466, 4633, 2186, 51, 292, "Input",ExpressionUUID->"a4d67714-ca1b-454a-a8e3-5af581adfc2f",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[177689, 4689, 173, 3, 36, "Subsubsection",ExpressionUUID->"73917b85-a3fe-4187-8b1f-1244df7559c5"],
Cell[177865, 4694, 171, 3, 34, "Text",ExpressionUUID->"def4afe4-14fb-49d6-8af2-5cca33ae69d8"],
Cell[178039, 4699, 441, 10, 44, "Input",ExpressionUUID->"a3ee3abf-8b74-4d4f-ba4e-7e9bfe8943fc",
 InitializationCell->True]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[178529, 4715, 284, 7, 37, "Subsection",ExpressionUUID->"bf8124b6-bfb5-4b76-95c3-efd3eebe7dd8"],
Cell[CellGroupData[{
Cell[178838, 4726, 220, 4, 44, "Subsubsection",ExpressionUUID->"ff6886c3-90e5-4c03-b58c-d71b9b470a83"],
Cell[179061, 4732, 1315, 30, 100, "Text",ExpressionUUID->"7700d8b3-4e89-43aa-99d6-947de1da52f9"],
Cell[180379, 4764, 1145, 17, 44, "Input",ExpressionUUID->"cbcf87d3-eb1a-47a1-b276-fc5184303eb9",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[181549, 4785, 279, 5, 28, "Input",ExpressionUUID->"533cfa80-7c50-4f9c-be02-40b76ea8ac22"],
Cell[181831, 4792, 7195, 213, 180, "Output",ExpressionUUID->"05799106-e64a-4fb9-a0a2-7d86ef247f0e"]
}, Open  ]]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[189099, 5013, 160, 3, 53, "Section",ExpressionUUID->"5dd3d38d-7a22-4ed5-9a3e-4fdc6278a9c2"],
Cell[189262, 5018, 664, 20, 36, "Text",ExpressionUUID->"847637a8-e1ce-4d58-a00a-9e5743614440"],
Cell[CellGroupData[{
Cell[189951, 5042, 154, 3, 53, "Subsection",ExpressionUUID->"079f8598-1777-44e1-ae2d-56f3005dc2c1"],
Cell[CellGroupData[{
Cell[190130, 5049, 165, 3, 44, "Subsubsection",ExpressionUUID->"6365942d-be39-4aea-8589-f7d14c38c530"],
Cell[190298, 5054, 369, 8, 34, "Text",ExpressionUUID->"16b7124c-8def-43cb-b353-dea23d7a8d7d"],
Cell[190670, 5064, 2440, 58, 311, "Input",ExpressionUUID->"612106ff-7137-401d-9d48-dc81077dc6f3",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[193147, 5127, 177, 3, 36, "Subsubsection",ExpressionUUID->"3d1e0498-c63f-4206-abf9-92a19dc16dac"],
Cell[193327, 5132, 362, 7, 44, "Input",ExpressionUUID->"c3407913-d618-4aa2-b9e2-533198299981",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[193726, 5144, 519, 8, 36, "Subsubsection",ExpressionUUID->"b8955a4e-671f-413e-9f7c-2a65b763877c"],
Cell[194248, 5154, 2315, 48, 166, "Text",ExpressionUUID->"d4704d73-2277-40c2-b6e3-29894a1bf323"],
Cell[196566, 5204, 4414, 125, 194, "Text",ExpressionUUID->"1e307ae6-20dd-42f5-b4eb-a19ddb7aa0e2"],
Cell[200983, 5331, 39285, 866, 3381, "Input",ExpressionUUID->"cec98484-980a-44c5-94ac-eecf5f7c5aee",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[240305, 6202, 169, 3, 44, "Subsubsection",ExpressionUUID->"6e538c29-4609-40ab-a297-c75d7c69ed56"],
Cell[240477, 6207, 647, 12, 100, "Text",ExpressionUUID->"5ea7ad73-da27-48d0-8604-ec25f3126f22"],
Cell[241127, 6221, 1909, 41, 216, "Input",ExpressionUUID->"51148694-e3e3-418b-a116-a770e441136d",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[243073, 6267, 218, 4, 36, "Subsubsection",ExpressionUUID->"cef45ad3-9106-46e0-b9f4-89bc8a2df8a6"],
Cell[243294, 6273, 619, 11, 56, "Text",ExpressionUUID->"024ceefe-1a79-4037-b6b9-be1002292b90"],
Cell[243916, 6286, 3407, 62, 273, "Input",ExpressionUUID->"ab1c380c-3de7-479f-8ba8-d7467bffa598",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[247348, 6352, 507, 10, 28, "Input",ExpressionUUID->"76b932bc-843c-46b8-b51f-9a2b82561267"],
Cell[CellGroupData[{
Cell[247880, 6366, 224, 5, 23, "Echo",ExpressionUUID->"0f4cdea5-a5d1-408e-b6bc-71ff8f138810"],
Cell[248107, 6373, 777, 12, 22, "Print",ExpressionUUID->"a8ab1be0-16df-458e-b5b6-dad12efea688"],
Cell[248887, 6387, 223, 6, 23, "Echo",ExpressionUUID->"adb1b9c7-ccc2-4001-af5f-e10f78beae23"],
Cell[249113, 6395, 199, 6, 23, "Echo",ExpressionUUID->"92e30ce3-218f-46cd-a090-3ea51a78147e"],
Cell[249315, 6403, 214, 6, 23, "Echo",ExpressionUUID->"78e0cd37-2638-49f4-88b7-2a2c39366734"],
Cell[249532, 6411, 214, 6, 23, "Echo",ExpressionUUID->"022d51ea-29d3-44ba-880c-cd354683fbea"],
Cell[249749, 6419, 206, 6, 23, "Echo",ExpressionUUID->"f2be1d0f-b11e-46a6-8758-89c6833b7c91"],
Cell[249958, 6427, 230, 6, 23, "Echo",ExpressionUUID->"8bfff427-2082-452b-b341-e6c3e9718d6c"],
Cell[250191, 6435, 205, 6, 23, "Echo",ExpressionUUID->"17c05a10-082b-4a50-aa42-1dadd61a0a93"],
Cell[250399, 6443, 553, 19, 23, "Echo",ExpressionUUID->"45d833fd-0851-4e2a-bd50-ec70ed27f9d7"],
Cell[250955, 6464, 777, 12, 22, "Print",ExpressionUUID->"008aa6c3-4a5a-402c-8954-2f5a0445032a"],
Cell[251735, 6478, 218, 6, 23, "Echo",ExpressionUUID->"a484288b-4d68-40fa-8175-b1203a3431ab"],
Cell[251956, 6486, 779, 12, 22, "Print",ExpressionUUID->"577359c5-69ad-4cd3-8de9-89def52ed64e"],
Cell[252738, 6500, 219, 6, 23, "Echo",ExpressionUUID->"7d93024e-9346-46f6-bd5d-6ac860bdfb59"],
Cell[252960, 6508, 779, 12, 22, "Print",ExpressionUUID->"46da05d7-f5ec-45e6-9d3a-b413c9feba97"],
Cell[253742, 6522, 1448, 31, 66, "Print",ExpressionUUID->"e62755e2-fd16-4115-a5f9-baec5a1a4e73"],
Cell[255193, 6555, 935, 16, 22, "Print",ExpressionUUID->"d5355a1a-12ad-4b49-968b-32aca7a28e30"],
Cell[256131, 6573, 15739, 340, 257, "Print",ExpressionUUID->"4af9e5e4-35a4-4548-83aa-7109702817ee"]
}, Open  ]],
Cell[271885, 6916, 20190, 640, 299, "Output",ExpressionUUID->"943e6e5b-4902-468a-8331-9367c8a1e056"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[292124, 7562, 175, 3, 36, "Subsubsection",ExpressionUUID->"63f84fee-95af-4b4b-b0bf-ac914ac8bdc7"],
Cell[292302, 7567, 302, 4, 34, "Text",ExpressionUUID->"c9e6086c-bb02-487d-86c7-c10b2d92cf55"],
Cell[292607, 7573, 2171, 50, 349, "Input",ExpressionUUID->"3b65c432-b311-4daa-9a1d-5b4a46a5bacf",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[294803, 7627, 366, 9, 28, "Input",ExpressionUUID->"b0667fc5-ecec-49d6-b63c-0059114c0253"],
Cell[CellGroupData[{
Cell[295194, 7640, 216, 5, 25, "Echo",ExpressionUUID->"992501f6-6ac5-48d7-b422-edba0f8899ce"],
Cell[295413, 7647, 206, 4, 22, "Print",ExpressionUUID->"462ff15a-6811-46fb-b064-6a9eed6f83fc"],
Cell[295622, 7653, 208, 4, 22, "Print",ExpressionUUID->"fd77b2da-0ae3-4833-898e-41a6ad15eb12"],
Cell[295833, 7659, 223, 6, 23, "Echo",ExpressionUUID->"e94ac703-4a43-4c9c-97ee-19c067efa6c4"],
Cell[296059, 7667, 201, 6, 23, "Echo",ExpressionUUID->"922b869a-ace6-4b31-8551-f44171060e2a"],
Cell[296263, 7675, 202, 6, 23, "Echo",ExpressionUUID->"bda78841-1f59-4d1a-8c37-5d910f450d9a"],
Cell[296468, 7683, 204, 6, 23, "Echo",ExpressionUUID->"476d5abe-3ce9-44ba-8ed1-a6c9ab8baaac"],
Cell[296675, 7691, 206, 6, 23, "Echo",ExpressionUUID->"bad4247f-ac8e-4f45-b20b-aef27baf4c2a"],
Cell[296884, 7699, 231, 6, 23, "Echo",ExpressionUUID->"1c161caa-612c-4007-a178-9e6031a8ab29"],
Cell[297118, 7707, 214, 6, 23, "Echo",ExpressionUUID->"c63506fc-9950-4b00-8620-f2312165a089"],
Cell[297335, 7715, 256, 8, 23, "Echo",ExpressionUUID->"f03709fb-a654-4626-a006-40dfd431ce65"],
Cell[297594, 7725, 205, 6, 23, "Echo",ExpressionUUID->"998b2daa-209b-4cab-9bee-1bdc1eb344f6"],
Cell[297802, 7733, 551, 19, 23, "Echo",ExpressionUUID->"36db89c0-ecb2-472c-94fe-7a74d15d9595"],
Cell[298356, 7754, 206, 4, 22, "Print",ExpressionUUID->"efe17ebc-6744-45ae-937f-af93463f9039"],
Cell[298565, 7760, 220, 5, 23, "Echo",ExpressionUUID->"e111121d-28ff-4d79-8082-695825990bd8"],
Cell[298788, 7767, 208, 4, 22, "Print",ExpressionUUID->"e2f0347f-9016-45e8-b6c7-ed9415675ade"],
Cell[298999, 7773, 850, 23, 66, "Print",ExpressionUUID->"9f6de093-fb72-4f91-a764-4275d82b8ecc"],
Cell[299852, 7798, 364, 8, 22, "Print",ExpressionUUID->"d7aa72f7-6f1d-4626-a810-06689b08e9ad"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[300265, 7812, 285, 5, 28, "Input",ExpressionUUID->"8a97b5ce-071a-4e3a-aed2-380781930b73"],
Cell[CellGroupData[{
Cell[300575, 7821, 108952, 2192, 440, 60696, 1399, "CachedBoxData", "BoxData", "Print",ExpressionUUID->"bdf7eee3-ed4b-415a-bca0-eff4e48510ac"],
Cell[409530, 10015, 15144, 332, 257, "Print",ExpressionUUID->"426862b8-58ea-4bf6-8e65-152c95cbf5d4"]
}, Open  ]]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[424747, 10355, 202, 4, 53, "Subsection",ExpressionUUID->"0ba000b5-27a5-468c-bdab-9d403a525df5"],
Cell[424952, 10361, 887, 21, 56, "Text",ExpressionUUID->"e2394ae3-b8e0-424d-bd10-d92fe52ce426"],
Cell[CellGroupData[{
Cell[425864, 10386, 266, 4, 44, "Subsubsection",ExpressionUUID->"9e6c352b-5181-4b60-b5fa-253f3925c7e6"],
Cell[426133, 10392, 316, 7, 34, "Text",ExpressionUUID->"433d475c-4e8a-44c5-be83-b3ec02f6dcaf"],
Cell[426452, 10401, 2548, 59, 311, "Input",ExpressionUUID->"8691961b-fa96-46ba-9938-81c7df25f7af",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[429037, 10465, 624, 9, 36, "Subsubsection",ExpressionUUID->"df6d3bcc-13cd-4a91-b4c8-645bc2dbb824"],
Cell[429664, 10476, 28310, 725, 3172, "Input",ExpressionUUID->"5fac0707-9b04-40f5-ab6f-9aa6d06425ed",
 InitializationCell->True],
Cell[457977, 11203, 465, 14, 36, "Text",ExpressionUUID->"a3553cb6-11bf-4b1f-a9f4-53cca20ac890"],
Cell[458445, 11219, 261, 7, 28, "Input",ExpressionUUID->"66d983d5-6330-479f-8c5c-a7d8b34b212f"],
Cell[CellGroupData[{
Cell[458731, 11230, 292, 7, 28, "Input",ExpressionUUID->"12d3179c-df5d-47e7-8607-b0c2b3a5f92a"],
Cell[CellGroupData[{
Cell[459048, 11241, 227, 6, 23, "Echo",ExpressionUUID->"b43f625f-d86e-434a-bfb6-a281c31bc9b3"],
Cell[459278, 11249, 184, 4, 22, "Print",ExpressionUUID->"46149b6f-d2d0-42be-9a5f-9c8041697788"],
Cell[459465, 11255, 222, 6, 23, "Echo",ExpressionUUID->"7ee3fe02-3586-4c14-91b6-174d0e81c938"],
Cell[459690, 11263, 201, 6, 23, "Echo",ExpressionUUID->"da17007f-59c9-4841-b4ae-d85fdaabccdb"],
Cell[459894, 11271, 214, 6, 23, "Echo",ExpressionUUID->"fe91e5e7-af9d-496d-aa4c-93ecc270aacc"],
Cell[460111, 11279, 216, 6, 23, "Echo",ExpressionUUID->"428d9d33-dc99-4c25-92ca-a0033cce7c61"],
Cell[460330, 11287, 204, 6, 23, "Echo",ExpressionUUID->"3275a835-765b-4e2a-a6d4-e20c4b424e19"],
Cell[460537, 11295, 219, 6, 23, "Echo",ExpressionUUID->"f9ee3171-4c97-4ae1-9ede-c3587eec4d24"],
Cell[460759, 11303, 205, 6, 23, "Echo",ExpressionUUID->"b3e59076-a2da-411a-8a43-e07a80587d62"],
Cell[460967, 11311, 553, 19, 23, "Echo",ExpressionUUID->"3af8594a-3759-40ab-858f-3a0c31422e77"],
Cell[461523, 11332, 182, 4, 22, "Print",ExpressionUUID->"a78b9bf4-64c6-44f4-ab6f-10b791a00b4c"],
Cell[461708, 11338, 218, 6, 23, "Echo",ExpressionUUID->"51817b4a-3efa-4d34-b13c-32e1b9026ebd"],
Cell[461929, 11346, 184, 4, 22, "Print",ExpressionUUID->"9deddd21-a2f0-43a2-b424-7a5bc5ac82ec"],
Cell[462116, 11352, 219, 6, 23, "Echo",ExpressionUUID->"fab7b340-b06e-4098-930f-42ff60b12b19"],
Cell[462338, 11360, 182, 4, 22, "Print",ExpressionUUID->"cba918f4-5343-414d-a3a0-53edbecc9b96"],
Cell[462523, 11366, 855, 23, 66, "Print",ExpressionUUID->"28ef9ae2-15b3-4c6f-8998-b65c79cbba7a"],
Cell[463381, 11391, 182, 4, 22, "Print",ExpressionUUID->"d37c6d90-1610-4419-a6da-bcb3f2b39938"],
Cell[463566, 11397, 342, 8, 22, "Print",ExpressionUUID->"0561606d-7a22-40bb-a6fa-1c4878e6de43"],
Cell[463911, 11407, 184, 4, 22, "Print",ExpressionUUID->"152eae64-5c3b-48e4-a820-9513f768cc79"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[464144, 11417, 309, 7, 28, "Input",ExpressionUUID->"bf6e5080-e08a-4caf-a5b6-bf67e47fbf18"],
Cell[CellGroupData[{
Cell[464478, 11428, 229, 6, 23, "Echo",ExpressionUUID->"39ec0075-723d-49fe-b3d0-16a97a7b7a53"],
Cell[464710, 11436, 182, 4, 22, "Print",ExpressionUUID->"c35c444d-d5ae-4424-ad8a-f14e202e493d"],
Cell[464895, 11442, 223, 6, 23, "Echo",ExpressionUUID->"bcf312fa-6fdc-410f-bb6b-5fd670fa75f9"],
Cell[465121, 11450, 201, 6, 23, "Echo",ExpressionUUID->"a0bf2f21-304d-42c1-9eec-9bd19ae0f251"],
Cell[465325, 11458, 216, 6, 23, "Echo",ExpressionUUID->"181b30c9-4f6f-456e-8f30-64c22e89d9f3"],
Cell[465544, 11466, 214, 6, 23, "Echo",ExpressionUUID->"8a3e2f4b-6c33-4f06-b902-b75978a5713d"],
Cell[465761, 11474, 218, 6, 23, "Echo",ExpressionUUID->"30ffb844-9c21-467e-99ad-23946eed0cac"],
Cell[465982, 11482, 205, 6, 23, "Echo",ExpressionUUID->"bb0e44dc-7804-4c14-aebb-092865359ddb"],
Cell[466190, 11490, 553, 19, 23, "Echo",ExpressionUUID->"6a237570-cafe-4120-b1ee-8431a0703670"],
Cell[466746, 11511, 182, 4, 22, "Print",ExpressionUUID->"9c61beec-467f-4b78-a51a-7b7a7e434e18"],
Cell[466931, 11517, 218, 6, 23, "Echo",ExpressionUUID->"09bcd66a-72b8-4c58-95b2-ce8bbb001210"],
Cell[467152, 11525, 184, 4, 22, "Print",ExpressionUUID->"d5f36518-49b3-43f9-882f-17f5f3499ff5"],
Cell[467339, 11531, 217, 6, 23, "Echo",ExpressionUUID->"733f97b3-a3fe-4c5a-83e9-9d40726645a6"],
Cell[467559, 11539, 184, 4, 22, "Print",ExpressionUUID->"3c83ef77-8fb2-43c4-a636-a5dfe08fef7c"],
Cell[467746, 11545, 855, 23, 66, "Print",ExpressionUUID->"3f8d5916-4a2c-4e90-9525-0cfc83834b86"],
Cell[468604, 11570, 184, 4, 22, "Print",ExpressionUUID->"30852ae6-1f4a-4a55-bba9-094d6df6e661"],
Cell[468791, 11576, 342, 8, 22, "Print",ExpressionUUID->"02c198b9-242b-4524-9f34-1abec8b3fc60"],
Cell[469136, 11586, 184, 4, 22, "Print",ExpressionUUID->"0077da09-d48f-4eff-a79f-8354f6d429c0"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[469369, 11596, 229, 4, 28, "Input",ExpressionUUID->"1a619823-8a82-4cb0-83e5-1715459e8ed3"],
Cell[469601, 11602, 156, 3, 32, "Output",ExpressionUUID->"6757ba4d-001d-4e73-8148-bc600f8077b6"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[469806, 11611, 269, 4, 36, "Subsubsection",ExpressionUUID->"9ba07c97-9ab2-480c-a684-324d085588f1"],
Cell[470078, 11617, 199, 3, 34, "Text",ExpressionUUID->"190ab2eb-f2de-44b4-83af-03cf508413f1"],
Cell[470280, 11622, 1860, 40, 216, "Input",ExpressionUUID->"9c63a222-d178-44f5-8009-33f8039c1261",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[472177, 11667, 323, 5, 36, "Subsubsection",ExpressionUUID->"e40f40f7-0064-496b-816a-d5f743f08348"],
Cell[472503, 11674, 339, 8, 78, "Text",ExpressionUUID->"f5b5f340-579a-4d37-ab8e-110d08a984bf"],
Cell[472845, 11684, 2795, 54, 306, "Input",ExpressionUUID->"524650e2-24ce-4c41-ab4c-b603c03989e1",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[475665, 11742, 408, 9, 28, "Input",ExpressionUUID->"46e613fc-f5a4-42e8-b463-9430628aeb8d"],
Cell[CellGroupData[{
Cell[476098, 11755, 256, 8, 23, "Echo",ExpressionUUID->"b7c4da4f-fbc1-4c19-95d6-92e254b7103b"],
Cell[476357, 11765, 254, 8, 23, "Echo",ExpressionUUID->"916fdc4b-4751-4848-b7e8-8743121f709a"],
Cell[476614, 11775, 242, 8, 23, "Echo",ExpressionUUID->"932d5458-4255-4463-a893-85a221bf65f9"],
Cell[476859, 11785, 34230, 715, 412, "Echo",ExpressionUUID->"6899c56a-efa7-4382-8982-bce34c2d35c5"],
Cell[511092, 12502, 2403, 58, 440, "Print",ExpressionUUID->"e317147b-6cba-41f6-96f2-181acecab9d3"]
}, Open  ]],
Cell[513510, 12563, 4099, 116, 71, "Output",ExpressionUUID->"a05991f5-97e8-498f-8e0f-8e58a9aefc32"]
}, Open  ]]
}, Closed]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[517682, 12687, 164, 3, 53, "Section",ExpressionUUID->"a306391f-3d23-4981-83ed-841f77fb9768"],
Cell[CellGroupData[{
Cell[517871, 12694, 164, 3, 53, "Subsection",ExpressionUUID->"79807631-7ab6-4576-9c78-ca57d7932be5"],
Cell[CellGroupData[{
Cell[518060, 12701, 170, 3, 44, "Subsubsection",ExpressionUUID->"6f7009e9-a34b-44d8-9fc7-205ae228ef6e"],
Cell[518233, 12706, 224, 5, 34, "Text",ExpressionUUID->"a570dff4-4712-4689-8998-2822f79023c1"],
Cell[518460, 12713, 2206, 49, 235, "Input",ExpressionUUID->"d420430f-2470-42eb-a7b7-ae29d7a74101",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[520703, 12767, 169, 3, 36, "Subsubsection",ExpressionUUID->"954cc692-6a01-4fe0-a370-f07bdec679fa"],
Cell[520875, 12772, 192, 3, 34, "Text",ExpressionUUID->"f68929f7-53b3-4fcd-b270-6c6b39bf9829"],
Cell[521070, 12777, 567, 14, 44, "Input",ExpressionUUID->"587185c3-d316-4b00-b606-8668b1036db6",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[521674, 12796, 267, 4, 36, "Subsubsection",ExpressionUUID->"7fada537-a022-4a0c-b6fb-c5161ae894d0"],
Cell[521944, 12802, 752, 17, 122, "Text",ExpressionUUID->"05673983-97b2-4b75-8856-f620748cc50c"],
Cell[522699, 12821, 996, 22, 140, "Input",ExpressionUUID->"17d08c01-d4d7-4229-bd42-300063f7efc9",
 InitializationCell->True]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[523744, 12849, 154, 3, 53, "Subsection",ExpressionUUID->"161253ed-354e-4140-b13f-8cb4df848915"],
Cell[CellGroupData[{
Cell[523923, 12856, 226, 4, 44, "Subsubsection",ExpressionUUID->"c9600506-2380-4b42-ab01-5e0930f114bb"],
Cell[524152, 12862, 421, 9, 56, "Text",ExpressionUUID->"68f31195-e59f-4b03-86d9-57535b2bbf9b"],
Cell[524576, 12873, 369, 8, 67, "Input",ExpressionUUID->"144f6995-0bde-46d1-b9a1-e0f967e47090"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[524994, 12887, 167, 3, 53, "Subsection",ExpressionUUID->"d427705c-db91-4199-9ae0-95db8460eee7"],
Cell[525164, 12892, 747, 18, 36, "Text",ExpressionUUID->"cea14896-494d-4278-8c69-ab2abe69c270"],
Cell[CellGroupData[{
Cell[525936, 12914, 159, 3, 44, "Subsubsection",ExpressionUUID->"49448b8f-7241-46c3-9b9d-cb32d4c48bd3"],
Cell[526098, 12919, 459, 8, 34, "Text",ExpressionUUID->"9631a9b8-f8de-48e3-a412-5b74eb5192ea"],
Cell[526560, 12929, 3509, 79, 352, "Input",ExpressionUUID->"b02c1bc0-3c91-4709-aa75-e63237772a91"]
}, Closed]],
Cell[CellGroupData[{
Cell[530106, 13013, 173, 3, 36, "Subsubsection",ExpressionUUID->"5634df5f-af22-422e-9b59-b187c1d6c4f8"],
Cell[530282, 13018, 777, 20, 58, "Text",ExpressionUUID->"965306c1-e42d-41a4-abea-74002c215e50"],
Cell[531062, 13040, 928, 25, 105, "Input",ExpressionUUID->"28fa6720-f0f4-49eb-9098-69a230a073aa"]
}, Closed]]
}, Closed]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[532063, 13073, 153, 3, 67, "Chapter",ExpressionUUID->"89bf2b46-87ee-427b-bac0-3589995011a1"],
Cell[CellGroupData[{
Cell[532241, 13080, 208, 4, 67, "Section",ExpressionUUID->"ca7efd2b-9ca6-4a53-9726-eeea768936c6"],
Cell[532452, 13086, 513, 11, 56, "Text",ExpressionUUID->"7f59a028-11d3-4568-9054-e5bb8b8f8047"],
Cell[CellGroupData[{
Cell[532990, 13101, 165, 3, 44, "Subsubsection",ExpressionUUID->"f2749846-f931-4580-8ed9-e9c2b7011581"],
Cell[533158, 13106, 302, 21, 386, "Text",ExpressionUUID->"376ee309-0f89-4a91-8c95-a431405f73a2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[533497, 13132, 163, 3, 44, "Subsubsection",ExpressionUUID->"59290e93-cf67-47fb-b7cf-2633fc61d119"],
Cell[533663, 13137, 158, 3, 34, "Text",ExpressionUUID->"4a4a1ff1-b594-4486-92a3-c61ed720f3c7"],
Cell[533824, 13142, 381, 8, 28, "Input",ExpressionUUID->"fd063968-3f18-421c-9b97-658479f96711"],
Cell[534208, 13152, 178, 6, 56, "Text",ExpressionUUID->"1a853f7f-5374-4195-9798-66beaa47632a"],
Cell[534389, 13160, 4990, 128, 559, "Input",ExpressionUUID->"15b81338-2c07-4b50-a7cc-433764525c28"],
Cell[539382, 13290, 261, 8, 78, "Text",ExpressionUUID->"e68243ab-8ddd-4d0c-8133-bc7cb5d2ec58"],
Cell[539646, 13300, 631, 16, 48, "Input",ExpressionUUID->"3e5cb953-02da-4774-a782-c2c55c8b1b76"]
}, Open  ]],
Cell[CellGroupData[{
Cell[540314, 13321, 168, 3, 44, "Subsubsection",ExpressionUUID->"00147192-a50f-4cee-9979-5f325bba64c4"],
Cell[CellGroupData[{
Cell[540507, 13328, 422, 9, 48, "Input",ExpressionUUID->"58fe7978-48a0-4ed2-b1b1-6e96302f8b45"],
Cell[540932, 13339, 247, 3, 32, "Output",ExpressionUUID->"8455a7d9-dc14-4ab6-9188-9a29e9006d79"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[541228, 13348, 221, 4, 44, "Subsubsection",ExpressionUUID->"ef89e262-6a37-407f-a7ea-8e51b279e186"],
Cell[541452, 13354, 406, 9, 48, "Input",ExpressionUUID->"c5192d08-2425-4557-96e0-9450f6039717"]
}, Open  ]],
Cell[CellGroupData[{
Cell[541895, 13368, 171, 3, 44, "Subsubsection",ExpressionUUID->"61e5e8a1-d058-448a-af64-5f4dd54f4862"],
Cell[542069, 13373, 291, 6, 34, "Text",ExpressionUUID->"f2d3eb71-f106-4588-8e00-fad70f5e51d9"],
Cell[542363, 13381, 307, 6, 28, "Input",ExpressionUUID->"d9fe7d13-2fef-4b3c-bb15-214a347e3102"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[542731, 13394, 200, 4, 56, "Chapter",ExpressionUUID->"69996b7b-6b44-48f3-ad6b-6b73715f2f7c"],
Cell[CellGroupData[{
Cell[542956, 13402, 156, 3, 67, "Section",ExpressionUUID->"a470a52b-f266-4612-aaeb-13fa138fd473"],
Cell[CellGroupData[{
Cell[543137, 13409, 173, 3, 53, "Subsection",ExpressionUUID->"d0e3c629-8659-4bf8-9991-3077d0b4d821"],
Cell[543313, 13414, 357, 8, 28, "Input",ExpressionUUID->"a3f2b4b3-a769-432a-8e41-2762de979f3b"],
Cell[CellGroupData[{
Cell[543695, 13426, 240, 4, 28, "Input",ExpressionUUID->"d39d43c8-7c57-4c70-b659-db8f59bbc0c0"],
Cell[543938, 13432, 15487, 545, 223, "Output",ExpressionUUID->"85a854ca-a9da-4144-9bff-678b55f434af"]
}, Closed]],
Cell[CellGroupData[{
Cell[559462, 13982, 292, 6, 24, "Input",ExpressionUUID->"b3e476f0-3048-4c62-87e8-183cb720125f"],
Cell[559757, 13990, 205293, 3865, 360, 76884, 1760, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"fe2cff6b-8f48-42b0-9756-885488d232d2"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[765099, 17861, 583, 18, 40, "Subsection",ExpressionUUID->"f6eb695d-3840-4110-b952-ca06442ab815"],
Cell[765685, 17881, 355, 9, 48, "Input",ExpressionUUID->"b33a06d8-41b5-459a-bf4e-e100044af721"],
Cell[CellGroupData[{
Cell[766065, 17894, 267, 6, 28, "Input",ExpressionUUID->"be159e64-779a-403e-af43-b60ee710056a"],
Cell[766335, 17902, 15835, 427, 200, "Output",ExpressionUUID->"ed195047-2965-495f-902b-f3e0f38dd530"]
}, Open  ]],
Cell[CellGroupData[{
Cell[782207, 18334, 269, 6, 28, "Input",ExpressionUUID->"43b5910f-bc8e-4864-ad6d-3a09382d0f2a"],
Cell[782479, 18342, 13860, 485, 204, "Output",ExpressionUUID->"7c02c0ef-2f01-4cca-82e2-037a651b5c1b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[796376, 18832, 282, 5, 48, "Input",ExpressionUUID->"9bd1e1f8-bf80-4c43-ab17-5f4ec07e0e75"],
Cell[796661, 18839, 157, 3, 32, "Output",ExpressionUUID->"cf9140a3-e4e4-43f2-a83f-f77342a8ae03"],
Cell[796821, 18844, 154, 3, 32, "Output",ExpressionUUID->"4549653f-2c7c-41e0-8939-69256c1cc92f"]
}, Open  ]],
Cell[796990, 18850, 806, 19, 60, "Text",ExpressionUUID->"a48b280f-55d7-4f02-96fd-0ea15ba4fb23"],
Cell[CellGroupData[{
Cell[797821, 18873, 214, 4, 28, "Input",ExpressionUUID->"7bd8a17a-6d2c-4589-aa59-bbdf617abe30"],
Cell[CellGroupData[{
Cell[798060, 18881, 146, 3, 23, "Echo",ExpressionUUID->"a92bac0f-9487-4e30-94c0-e596312e6c68"],
Cell[798209, 18886, 330, 11, 23, "Echo",ExpressionUUID->"59d020d1-2364-406f-8dcf-27b06435ae1a"],
Cell[798542, 18899, 389, 13, 23, "Echo",ExpressionUUID->"4399cf14-e44c-45bd-87e6-8b2389152cd4"],
Cell[798934, 18914, 173, 5, 23, "Echo",ExpressionUUID->"bf2ae9e5-10db-4c17-8db7-d1d4457d3327"]
}, Open  ]],
Cell[799122, 18922, 159, 3, 32, "Output",ExpressionUUID->"1bff743c-e1e7-4059-9e82-b9db9f31f5ed"]
}, Open  ]],
Cell[799296, 18928, 183, 3, 34, "Text",ExpressionUUID->"36b7adb2-2a9c-4f87-9535-1b7177dd2642"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

